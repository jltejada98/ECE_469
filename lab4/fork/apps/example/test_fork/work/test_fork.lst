 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 268
    4                      ; Text size: 4436
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  53746172	.ascii "Starting test_fork, parent_proc: %d\n\000"
   82  00003004  74696e67	
   82  00003008  20746573	
   82  0000300c  745f666f	
   82  00003010  726b2c20	
   82  00003014  70617265	
   82  00003018  6e745f70	
   82  0000301c  726f633a	
   82  00003020  2025640a	
   82  00003024  00      	
   83  00003025          	.align 2
   84  00003028          	LC1_LF0:
   85  00003028  76617220	.ascii "var child_proc virtual address: %d\n\000"
   85  0000302c  6368696c	
   85  00003030  645f7072	
   85  00003034  6f632076	
   85  00003038  69727475	
   85  0000303c  616c2061	
   85  00003040  64647265	
   85  00003044  73733a20	
   85  00003048  25640a00	
   86  0000304c          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  2d3d2d3d	.ascii "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n\000"
   88  00003050  2d3d2d3d	
   88  00003054  2d3d2d3d	
   88  00003058  2d3d2d3d	
   88  0000305c  2d3d2d3d	
   88  00003060  2d3d2d3d	
   88  00003064  2d3d2d3d	
   88  00003068  2d3d2d0a	
   88  0000306c  00      	
   89  0000306d          	.align 2
   90  00003070          	LC3_LF0:
   91  00003070  54686973	.ascii "This is the child (%d), child_proc=%d\n\000"
   91  00003074  20697320	
   91  00003078  74686520	
   91  0000307c  6368696c	
   91  00003080  64202825	
   91  00003084  64292c20	
   91  00003088  6368696c	
   91  0000308c  645f7072	
   91  00003090  6f633d25	
   91  00003094  640a00  	
   92  00003097          	.align 2
   93  00003098          	LC4_LF0:
   94  00003098  56616c3a	.ascii "Val: %d, PID: %d\n\000"
   94  0000309c  2025642c	
   94  000030a0  20504944	
   94  000030a4  3a202564	
   94  000030a8  0a00    	
   95  000030aa          	.align 2
   96  000030ac          	LC5_LF0:
   97  000030ac  3e3e3e3e	.ascii ">>>>>Success Child!<<<<<\n\000"
   97  000030b0  3e537563	
   97  000030b4  63657373	
   97  000030b8  20436869	
   97  000030bc  6c64213c	
   97  000030c0  3c3c3c3c	
   97  000030c4  0a00    	
   98  000030c6          	.align 2
   99  000030c8          	LC6_LF0:
  100  000030c8  54686973	.ascii "This is the parent (%d), child_proc=%d\n\000"
  100  000030cc  20697320	
  100  000030d0  74686520	
  100  000030d4  70617265	
  100  000030d8  6e742028	
  100  000030dc  2564292c	
  100  000030e0  20636869	
  100  000030e4  6c645f70	
  100  000030e8  726f633d	
  100  000030ec  25640a00	
  101  000030f0          	.align 2
  102  000030f0          	LC7_LF0:
  103  000030f0  3e3e3e3e	.ascii ">>>>>>Success Parent!<<<<<\n\000"
  103  000030f4  3e3e5375	
  103  000030f8  63636573	
  103  000030fc  73205061	
  103  00003100  72656e74	
  103  00003104  213c3c3c	
  103  00003108  3c3c0a00	
  104  0000310c          	.text
  105  000010d4          	.align 2
  106  000010d4          	.proc _main
  107  000010d4          	.global _main
  108  000010d4          	_main:
  109                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  110  000010d4  afbefffc	sw	-4(r29),r30; push fp
  111  000010d8  001df020	add	r30,r0,r29; fp = sp
  112  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  113  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  114  000010e4  0c001064	jal	___main
  115  000010e8  54000000	nop; not filled.
  116  000010ec  0c0001a8	jal	_getpid
  117  000010f0  54000000	nop; not filled.
  118  000010f4  23bdfff8	addi	r29,r29,#-8
  119  000010f8  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
  120  000010fc  24423000	addui	r2,r2,(LC0_LF0)&0xffff
  121  00001100  afa20000	sw	(r29),r2
  122  00001104  afa10004	sw	4(r29),r1
  123  00001108  0c000174	jal	_Printf
  124  0000110c  54000000	nop; not filled.
  125  00001110  3c020000	lhi	r2,((LC1_LF0)>>16)&0xffff
  126  00001114  24423028	addui	r2,r2,(LC1_LF0)&0xffff
  127  00001118  afa20000	sw	(r29),r2
  128  0000111c  23c1fff4	addi	r1,r30,#-12
  129  00001120  afa10004	sw	4(r29),r1
  130  00001124  0c000158	jal	_Printf
  131  00001128  54000000	nop; not filled.
  132  0000112c  0c00015c	jal	_fork
  133  00001130  54000000	nop; not filled.
  134  00001134  afc1fff4	sw	-12(r30),r1
  135  00001138  3c020000	lhi	r2,((LC2_LF0)>>16)&0xffff
  136  0000113c  2442304c	addui	r2,r2,(LC2_LF0)&0xffff
  137  00001140  afa20000	sw	(r29),r2
  138  00001144  0c000138	jal	_Printf
  139  00001148  54000000	nop; not filled.
  140  0000114c  23bd0008	addi	r29,r29,#8
  141  00001150  8fc1fff4	lw	r1,-12(r30)
  142  00001154  64210000	snei	r1,r1,#0
  143  00001158  14200068	bnez	r1,L14_LF0
  144  0000115c  54000000	nop; not filled.
  145  00001160  0c000134	jal	_getpid
  146  00001164  54000000	nop; not filled.
  147  00001168  23bdfff0	addi	r29,r29,#-16
  148  0000116c  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  149  00001170  24423070	addui	r2,r2,(LC3_LF0)&0xffff
  150  00001174  afa20000	sw	(r29),r2
  151  00001178  afa10004	sw	4(r29),r1
  152  0000117c  8fc2fff4	lw	r2,-12(r30)
  153  00001180  afa20008	sw	8(r29),r2
  154  00001184  0c0000f8	jal	_Printf
  155  00001188  54000000	nop; not filled.
  156  0000118c  0c000108	jal	_getpid
  157  00001190  54000000	nop; not filled.
  158  00001194  3c020000	lhi	r2,((LC4_LF0)>>16)&0xffff
  159  00001198  24423098	addui	r2,r2,(LC4_LF0)&0xffff
  160  0000119c  afa20000	sw	(r29),r2
  161  000011a0  20020002	addi	r2,r0,#2
  162  000011a4  afa20004	sw	4(r29),r2
  163  000011a8  afa10008	sw	8(r29),r1
  164  000011ac  0c0000d0	jal	_Printf
  165  000011b0  54000000	nop; not filled.
  166  000011b4  3c020000	lhi	r2,((LC5_LF0)>>16)&0xffff
  167  000011b8  244230ac	addui	r2,r2,(LC5_LF0)&0xffff
  168  000011bc  08000060	j	L16_LF0
  169  000011c0  54000000	nop; not filled.
  170  000011c4          	L14_LF0:
  171  000011c4  0c0000d0	jal	_getpid
  172  000011c8  54000000	nop; not filled.
  173  000011cc  23bdfff0	addi	r29,r29,#-16
  174  000011d0  3c020000	lhi	r2,((LC6_LF0)>>16)&0xffff
  175  000011d4  244230c8	addui	r2,r2,(LC6_LF0)&0xffff
  176  000011d8  afa20000	sw	(r29),r2
  177  000011dc  afa10004	sw	4(r29),r1
  178  000011e0  8fc2fff4	lw	r2,-12(r30)
  179  000011e4  afa20008	sw	8(r29),r2
  180  000011e8  0c000094	jal	_Printf
  181  000011ec  54000000	nop; not filled.
  182  000011f0  0c0000a4	jal	_getpid
  183  000011f4  54000000	nop; not filled.
  184  000011f8  3c020000	lhi	r2,((LC4_LF0)>>16)&0xffff
  185  000011fc  24423098	addui	r2,r2,(LC4_LF0)&0xffff
  186  00001200  afa20000	sw	(r29),r2
  187  00001204  20020005	addi	r2,r0,#5
  188  00001208  afa20004	sw	4(r29),r2
  189  0000120c  afa10008	sw	8(r29),r1
  190  00001210  0c00006c	jal	_Printf
  191  00001214  54000000	nop; not filled.
  192  00001218  3c020000	lhi	r2,((LC7_LF0)>>16)&0xffff
  193  0000121c  244230f0	addui	r2,r2,(LC7_LF0)&0xffff
  194  00001220          	L16_LF0:
  195  00001220  afa20000	sw	(r29),r2
  196  00001224  0c000058	jal	_Printf
  197  00001228  54000000	nop; not filled.
  198  0000122c  23bd0010	addi	r29,r29,#16
  199  00001230  0c000f0c	jal	_exit
  200  00001234  54000000	nop
  201  00001238          	.endproc _main
  202                      ;;;
  203                      ;;; Stub functions for DLX traps.
  204                      ;;;
  205                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  206                      ;;;
  207                      ;;; The traps such as Open and Close
  208                      ;;; (note the capital letters) are for use by user programs.  The traps
  209                      ;;; with names such as open and close (lower case) are for use by the OS.
  210                      ;;;
  213  00001238          	.align 2
  215                      ;;; The following are the traps to be used by user-level programs
  216                      ;;;
  218  00001238          	.align 2
  219  00001238          	.proc _Open
  220  00001238          	.global _Open
  221  00001238          	_Open:
  222                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  223                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  224                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  225  00001238  44000213	trap	#0x213
  226  0000123c  4be00000	jr	r31
  227  00001240  54000000	nop
  228  00001244          	.endproc _Open
  230  00001244          	.proc _Close
  231  00001244          	.global _Close
  232  00001244          	_Close:
  233  00001244  44000214	trap	#0x214
  234  00001248  4be00000	jr	r31
  235  0000124c  54000000	nop
  236  00001250          	.endproc _Close
  238  00001250          	.proc _Read
  239  00001250          	.global _Read
  240  00001250          	_Read:
  241  00001250  44000210	trap	#0x210
  242  00001254  4be00000	jr	r31
  243  00001258  54000000	nop
  244  0000125c          	.endproc _Read
  246  0000125c          	.proc _Write
  247  0000125c          	.global _Write
  248  0000125c          	_Write:
  249  0000125c  44000211	trap	#0x211
  250  00001260  4be00000	jr	r31
  251  00001264  54000000	nop
  252  00001268          	.endproc _Write
  254  00001268          	.proc _Lseek
  255  00001268          	.global _Lseek
  256  00001268          	_Lseek:
  257  00001268  44000212	trap	#0x212
  258  0000126c  4be00000	jr	r31
  259  00001270  54000000	nop
  260  00001274          	.endproc _Lseek
  262  00001274          	.proc _Putchar
  263  00001274          	.global _Putchar
  264  00001274          	_Putchar:
  265  00001274  44000280	trap	#0x280
  266  00001278  4be00000	jr	r31
  267  0000127c  54000000	nop
  268  00001280          	.endproc _Putchar
  270  00001280          	.proc _Printf
  271  00001280          	.global _Printf
  272  00001280          	_Printf:
  273  00001280  44000201	trap	#0x201
  274  00001284  4be00000	jr	r31
  275  00001288  54000000	nop
  276  0000128c          	.endproc _Printf
  278  0000128c          	.proc _fork
  279  0000128c          	.global _fork
  280  0000128c          	_fork:
  281  0000128c  44000430	trap	#0x430
  282  00001290  4be00000	jr	r31
  283  00001294  54000000	nop
  284  00001298          	.endproc _fork
  286  00001298          	.proc _getpid
  287  00001298          	.global _getpid
  288  00001298          	_getpid:
  289  00001298  44000431	trap	#0x431
  290  0000129c  4be00000	jr	r31
  291  000012a0  54000000	nop
  292  000012a4          	.endproc _getpid
  294  000012a4          	.proc _process_create
  295  000012a4          	.global _process_create
  296  000012a4          	_process_create:
  297  000012a4  44000432	trap	#0x432
  298  000012a8  4be00000	jr	r31
  299  000012ac  54000000	nop
  300  000012b0          	.endproc _process_create
  302  000012b0          	.proc _shmget
  303  000012b0          	.global _shmget
  304  000012b0          	_shmget:
  305  000012b0  44000440	trap	#0x440
  306  000012b4  4be00000	jr	r31
  307  000012b8  54000000	nop
  308  000012bc          	.endproc _shmget
  310  000012bc          	.proc _shmat
  311  000012bc          	.global _shmat
  312  000012bc          	_shmat:
  313  000012bc  44000441	trap	#0x441
  314  000012c0  4be00000	jr	r31
  315  000012c4  54000000	nop
  316  000012c8          	.endproc _shmat
  318  000012c8          	.proc _sem_create
  319  000012c8          	.global _sem_create
  320  000012c8          	_sem_create:
  321  000012c8  44000450	trap	#0x450
  322  000012cc  4be00000	jr	r31
  323  000012d0  54000000	nop
  324  000012d4          	.endproc _sem_create
  326  000012d4          	.proc _sem_wait
  327  000012d4          	.global _sem_wait
  328  000012d4          	_sem_wait:
  329  000012d4  44000451	trap	#0x451
  330  000012d8  4be00000	jr	r31
  331  000012dc  54000000	nop
  332  000012e0          	.endproc _sem_wait
  334  000012e0          	.proc _sem_signal
  335  000012e0          	.global _sem_signal
  336  000012e0          	_sem_signal:
  337  000012e0  44000452	trap	#0x452
  338  000012e4  4be00000	jr	r31
  339  000012e8  54000000	nop
  340  000012ec          	.endproc _sem_signal
  342  000012ec          	.proc _lock_create
  343  000012ec          	.global _lock_create
  344  000012ec          	_lock_create:
  345  000012ec  44000453	trap	#0x453
  346  000012f0  4be00000	jr	r31
  347  000012f4  54000000	nop
  348  000012f8          	.endproc _lock_create
  350  000012f8          	.proc _lock_acquire
  351  000012f8          	.global _lock_acquire
  352  000012f8          	_lock_acquire:
  353  000012f8  44000454	trap	#0x454
  354  000012fc  4be00000	jr	r31
  355  00001300  54000000	nop
  356  00001304          	.endproc _lock_acquire
  358  00001304          	.proc _lock_release
  359  00001304          	.global _lock_release
  360  00001304          	_lock_release:
  361  00001304  44000455	trap	#0x455
  362  00001308  4be00000	jr	r31
  363  0000130c  54000000	nop
  364  00001310          	.endproc _lock_release
  366  00001310          	.proc _cond_create
  367  00001310          	.global _cond_create
  368  00001310          	_cond_create:
  369  00001310  44000456	trap	#0x456
  370  00001314  4be00000	jr	r31
  371  00001318  54000000	nop
  372  0000131c          	.endproc _cond_create
  374  0000131c          	.proc _cond_wait
  375  0000131c          	.global _cond_wait
  376  0000131c          	_cond_wait:
  377  0000131c  44000457	trap	#0x457
  378  00001320  4be00000	jr	r31
  379  00001324  54000000	nop
  380  00001328          	.endproc _cond_wait
  382  00001328          	.proc _cond_signal
  383  00001328          	.global _cond_signal
  384  00001328          	_cond_signal:
  385  00001328  44000458	trap	#0x458
  386  0000132c  4be00000	jr	r31
  387  00001330  54000000	nop
  388  00001334          	.endproc _cond_signal
  390  00001334          	.proc _cond_broadcast
  391  00001334          	.global _cond_broadcast
  392  00001334          	_cond_broadcast:
  393  00001334  44000459	trap	#0x459
  394  00001338  4be00000	jr	r31
  395  0000133c  54000000	nop
  396  00001340          	.endproc _cond_broadcast
  398  00001340          	.proc _mbox_create
  399  00001340          	.global _mbox_create
  400  00001340          	_mbox_create:
  401  00001340  44000460	trap	#0x460
  402  00001344  4be00000	jr	r31
  403  00001348  54000000	nop
  404  0000134c          	.endproc _mbox_create
  406  0000134c          	.proc _mbox_open
  407  0000134c          	.global _mbox_open
  408  0000134c          	_mbox_open:
  409  0000134c  44000461	trap	#0x461
  410  00001350  4be00000	jr	r31
  411  00001354  54000000	nop
  412  00001358          	.endproc _mbox_open
  414  00001358          	.proc _mbox_close
  415  00001358          	.global _mbox_close
  416  00001358          	_mbox_close:
  417  00001358  44000462	trap	#0x462
  418  0000135c  4be00000	jr	r31
  419  00001360  54000000	nop
  420  00001364          	.endproc _mbox_close
  422  00001364          	.proc _mbox_send
  423  00001364          	.global _mbox_send
  424  00001364          	_mbox_send:
  425  00001364  44000463	trap	#0x463
  426  00001368  4be00000	jr	r31
  427  0000136c  54000000	nop
  428  00001370          	.endproc _mbox_send
  430  00001370          	.proc _mbox_recv
  431  00001370          	.global _mbox_recv
  432  00001370          	_mbox_recv:
  433  00001370  44000464	trap	#0x464
  434  00001374  4be00000	jr	r31
  435  00001378  54000000	nop
  436  0000137c          	.endproc _mbox_recv
  438  0000137c          	.proc _sleep
  439  0000137c          	.global _sleep
  440  0000137c          	_sleep:
  441  0000137c  44000465	trap	#0x465
  442  00001380  4be00000	jr	r31
  443  00001384  54000000	nop
  444  00001388          	.endproc _sleep
  446  00001388          	.proc _yield
  447  00001388          	.global _yield
  448  00001388          	_yield:
  449  00001388  44000466	trap	#0x466
  450  0000138c  4be00000	jr	r31
  451  00001390  54000000	nop
  452  00001394          	.endproc _yield
  455  00001394          	.proc _Exit
  456  00001394          	.global _Exit
  457  00001394          	_Exit:
  458  00001394  44000500	trap	#0x500
  459  00001398  4be00000	jr	r31
  460  0000139c  54000000	nop
  461  000013a0          	.endproc _Exit
  464  000013a0          	.proc _malloc
  465  000013a0          	.global _malloc
  466  000013a0          	_malloc:
  467  000013a0  44000467	trap	#0x467
  468  000013a4  4be00000	jr	r31
  469  000013a8          	.endproc _malloc
  472  000013a8          	.proc _mfree
  473  000013a8          	.global _mfree
  474  000013a8          	_mfree:
  475  000013a8  44000468	trap	#0x468
  476  000013ac  4be00000	jr	r31
  477  000013b0          	.endproc _mfree
  478                      ; Compiled by GCC
  480  000013b0          	.align 2
  481  000013b0          	.proc _isspace
  482  000013b0          	.global _isspace
  483  000013b0          	_isspace:
  484                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  485  000013b0  afbefffc	sw	-4(r29),r30; push fp
  486  000013b4  001df020	add	r30,r0,r29; fp = sp
  487  000013b8  afbffff8	sw	-8(r29),r31; push ret addr
  488  000013bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  489  000013c0  afa20000	sw	0(r29),r2
  490  000013c4  afa30004	sw	4(r29),r3
  491  000013c8  afa40008	sw	8(r29),r4
  492  000013cc  83c20003	lb	r2,3(r30)
  493  000013d0  20010000	addi	r1,r0,#0
  494  000013d4  304300ff	andi	r3,r2,#0x00ff
  495  000013d8  60640020	seqi	r4,r3,#32
  496  000013dc  1480002c	bnez	r4,L3_LF2
  497  000013e0  54000000	nop; delay slot nop
  498  000013e4  304300ff	andi	r3,r2,#0x00ff
  499  000013e8  60640009	seqi	r4,r3,#9
  500  000013ec  1480001c	bnez	r4,L3_LF2
  501  000013f0  54000000	nop; delay slot nop
  502  000013f4  304300ff	andi	r3,r2,#0x00ff
  503  000013f8  6064000a	seqi	r4,r3,#10
  504  000013fc  1480000c	bnez	r4,L3_LF2
  505  00001400  54000000	nop; delay slot nop
  506  00001404  08000008	j	L2_LF2
  507  00001408  54000000	nop; delay slot nop
  508  0000140c          	L3_LF2:
  509  0000140c  20010001	addi	r1,r0,#1
  510  00001410          	L2_LF2:
  511  00001410  08000004	j	L1_LF2
  512  00001414  54000000	nop; delay slot nop
  513  00001418          	L1_LF2:
  514  00001418  8fa20000	lw	r2,0(r29)
  515  0000141c  8fa30004	lw	r3,4(r29)
  516  00001420  8fa40008	lw	r4,8(r29)
  517  00001424  8fdffff8	lw	r31,-8(r30)
  518  00001428  001ee820	add	r29,r0,r30
  519  0000142c  8fdefffc	lw	r30,-4(r30)
  520  00001430  4be00000	jr	r31
  521  00001434  54000000	nop
  522  00001438          	.endproc _isspace
  523  00001438          	.align 2
  524  00001438          	.proc _isxdigit
  525  00001438          	.global _isxdigit
  526  00001438          	_isxdigit:
  527                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  528  00001438  afbefffc	sw	-4(r29),r30; push fp
  529  0000143c  001df020	add	r30,r0,r29; fp = sp
  530  00001440  afbffff8	sw	-8(r29),r31; push ret addr
  531  00001444  2fbd0018	subui	r29,r29,#24; alloc local storage
  532  00001448  afa20000	sw	0(r29),r2
  533  0000144c  afa30004	sw	4(r29),r3
  534  00001450  afa40008	sw	8(r29),r4
  535  00001454  83c20003	lb	r2,3(r30)
  536  00001458  20010000	addi	r1,r0,#0
  537  0000145c  304300ff	andi	r3,r2,#0x00ff
  538  00001460  6c64002f	sgtui	r4,r3,#47
  539  00001464  1080001c	beqz	r4,L7_LF2
  540  00001468  54000000	nop; delay slot nop
  541  0000146c  304300ff	andi	r3,r2,#0x00ff
  542  00001470  70640039	sleui	r4,r3,#57
  543  00001474  1480005c	bnez	r4,L6_LF2
  544  00001478  54000000	nop; delay slot nop
  545  0000147c  08000004	j	L7_LF2
  546  00001480  54000000	nop; delay slot nop
  547  00001484          	L7_LF2:
  548  00001484  304300ff	andi	r3,r2,#0x00ff
  549  00001488  6c640060	sgtui	r4,r3,#96
  550  0000148c  1080001c	beqz	r4,L8_LF2
  551  00001490  54000000	nop; delay slot nop
  552  00001494  304300ff	andi	r3,r2,#0x00ff
  553  00001498  70640066	sleui	r4,r3,#102
  554  0000149c  14800034	bnez	r4,L6_LF2
  555  000014a0  54000000	nop; delay slot nop
  556  000014a4  08000004	j	L8_LF2
  557  000014a8  54000000	nop; delay slot nop
  558  000014ac          	L8_LF2:
  559  000014ac  304300ff	andi	r3,r2,#0x00ff
  560  000014b0  6c640040	sgtui	r4,r3,#64
  561  000014b4  10800020	beqz	r4,L5_LF2
  562  000014b8  54000000	nop; delay slot nop
  563  000014bc  304300ff	andi	r3,r2,#0x00ff
  564  000014c0  70640041	sleui	r4,r3,#65
  565  000014c4  1480000c	bnez	r4,L6_LF2
  566  000014c8  54000000	nop; delay slot nop
  567  000014cc  08000008	j	L5_LF2
  568  000014d0  54000000	nop; delay slot nop
  569  000014d4          	L6_LF2:
  570  000014d4  20010001	addi	r1,r0,#1
  571  000014d8          	L5_LF2:
  572  000014d8  08000004	j	L4_LF2
  573  000014dc  54000000	nop; delay slot nop
  574  000014e0          	L4_LF2:
  575  000014e0  8fa20000	lw	r2,0(r29)
  576  000014e4  8fa30004	lw	r3,4(r29)
  577  000014e8  8fa40008	lw	r4,8(r29)
  578  000014ec  8fdffff8	lw	r31,-8(r30)
  579  000014f0  001ee820	add	r29,r0,r30
  580  000014f4  8fdefffc	lw	r30,-4(r30)
  581  000014f8  4be00000	jr	r31
  582  000014fc  54000000	nop
  583  00001500          	.endproc _isxdigit
  584  00001500          	.align 2
  585  00001500          	.proc _dstrcpy
  586  00001500          	.global _dstrcpy
  587  00001500          	_dstrcpy:
  588                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  589  00001500  afbefffc	sw	-4(r29),r30; push fp
  590  00001504  001df020	add	r30,r0,r29; fp = sp
  591  00001508  afbffff8	sw	-8(r29),r31; push ret addr
  592  0000150c  2fbd0018	subui	r29,r29,#24; alloc local storage
  593  00001510  afa20000	sw	0(r29),r2
  594  00001514  afa30004	sw	4(r29),r3
  595  00001518  8fc10000	lw	r1,(r30)
  596  0000151c  afc1fff4	sw	-12(r30),r1
  597  00001520          	L10_LF2:
  598  00001520  8fc10000	lw	r1,(r30)
  599  00001524  20220001	addi	r2,r1,#1
  600  00001528  afc20000	sw	(r30),r2
  601  0000152c  8fc20004	lw	r2,4(r30)
  602  00001530  20430001	addi	r3,r2,#1
  603  00001534  afc30004	sw	4(r30),r3
  604  00001538  80420000	lb	r2,(r2)
  605  0000153c  a0220000	sb	(r1),r2
  606  00001540  a3c2fff3	sb	-13(r30),r2
  607  00001544          	L12_LF2:
  608  00001544  93c1fff3	lbu	r1,-13(r30)
  609  00001548  64220000	snei	r2,r1,#0
  610  0000154c  1440000c	bnez	r2,L13_LF2
  611  00001550  54000000	nop; delay slot nop
  612  00001554  0800000c	j	L11_LF2
  613  00001558  54000000	nop; delay slot nop
  614  0000155c          	L13_LF2:
  615  0000155c  0bffffc0	j	L10_LF2
  616  00001560  54000000	nop; delay slot nop
  617  00001564          	L11_LF2:
  618  00001564  8fc1fff4	lw	r1,-12(r30)
  619  00001568  08000004	j	L9_LF2
  620  0000156c  54000000	nop; delay slot nop
  621  00001570          	L9_LF2:
  622  00001570  8fa20000	lw	r2,0(r29)
  623  00001574  8fa30004	lw	r3,4(r29)
  624  00001578  8fdffff8	lw	r31,-8(r30)
  625  0000157c  001ee820	add	r29,r0,r30
  626  00001580  8fdefffc	lw	r30,-4(r30)
  627  00001584  4be00000	jr	r31
  628  00001588  54000000	nop
  629  0000158c          	.endproc _dstrcpy
  630  0000158c          	.align 2
  631  0000158c          	.proc _dstrncpy
  632  0000158c          	.global _dstrncpy
  633  0000158c          	_dstrncpy:
  634                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  635  0000158c  afbefffc	sw	-4(r29),r30; push fp
  636  00001590  001df020	add	r30,r0,r29; fp = sp
  637  00001594  afbffff8	sw	-8(r29),r31; push ret addr
  638  00001598  2fbd0018	subui	r29,r29,#24; alloc local storage
  639  0000159c  afa20000	sw	0(r29),r2
  640  000015a0  afa30004	sw	4(r29),r3
  641  000015a4  8fc10000	lw	r1,(r30)
  642  000015a8  afc1fff4	sw	-12(r30),r1
  643  000015ac          	L15_LF2:
  644  000015ac  8fc10008	lw	r1,8(r30)
  645  000015b0  2022ffff	addi	r2,r1,#-1
  646  000015b4  afc20008	sw	8(r30),r2
  647  000015b8  70210000	slei	r1,r1,#0
  648  000015bc  1020000c	beqz	r1,L18_LF2
  649  000015c0  54000000	nop; delay slot nop
  650  000015c4  08000048	j	L16_LF2
  651  000015c8  54000000	nop; delay slot nop
  652  000015cc          	L18_LF2:
  653  000015cc  8fc10000	lw	r1,(r30)
  654  000015d0  20220001	addi	r2,r1,#1
  655  000015d4  afc20000	sw	(r30),r2
  656  000015d8  8fc20004	lw	r2,4(r30)
  657  000015dc  20430001	addi	r3,r2,#1
  658  000015e0  afc30004	sw	4(r30),r3
  659  000015e4  80420000	lb	r2,(r2)
  660  000015e8  a0220000	sb	(r1),r2
  661  000015ec  a3c2fff3	sb	-13(r30),r2
  662  000015f0          	L17_LF2:
  663  000015f0  93c1fff3	lbu	r1,-13(r30)
  664  000015f4  64220000	snei	r2,r1,#0
  665  000015f8  1440000c	bnez	r2,L19_LF2
  666  000015fc  54000000	nop; delay slot nop
  667  00001600  0800000c	j	L16_LF2
  668  00001604  54000000	nop; delay slot nop
  669  00001608          	L19_LF2:
  670  00001608  0bffffa0	j	L15_LF2
  671  0000160c  54000000	nop; delay slot nop
  672  00001610          	L16_LF2:
  673  00001610  8fc1fff4	lw	r1,-12(r30)
  674  00001614  08000004	j	L14_LF2
  675  00001618  54000000	nop; delay slot nop
  676  0000161c          	L14_LF2:
  677  0000161c  8fa20000	lw	r2,0(r29)
  678  00001620  8fa30004	lw	r3,4(r29)
  679  00001624  8fdffff8	lw	r31,-8(r30)
  680  00001628  001ee820	add	r29,r0,r30
  681  0000162c  8fdefffc	lw	r30,-4(r30)
  682  00001630  4be00000	jr	r31
  683  00001634  54000000	nop
  684  00001638          	.endproc _dstrncpy
  685  00001638          	.align 2
  686  00001638          	.proc _dstrcat
  687  00001638          	.global _dstrcat
  688  00001638          	_dstrcat:
  689                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  690  00001638  afbefffc	sw	-4(r29),r30; push fp
  691  0000163c  001df020	add	r30,r0,r29; fp = sp
  692  00001640  afbffff8	sw	-8(r29),r31; push ret addr
  693  00001644  2fbd0018	subui	r29,r29,#24; alloc local storage
  694  00001648  afa20000	sw	0(r29),r2
  695  0000164c  8fc10000	lw	r1,(r30)
  696  00001650  afc1fff4	sw	-12(r30),r1
  697  00001654          	L21_LF2:
  698  00001654  8fc10000	lw	r1,(r30)
  699  00001658  90220000	lbu	r2,(r1)
  700  0000165c  64410000	snei	r1,r2,#0
  701  00001660  1420000c	bnez	r1,L23_LF2
  702  00001664  54000000	nop; delay slot nop
  703  00001668  0800001c	j	L22_LF2
  704  0000166c  54000000	nop; delay slot nop
  705  00001670          	L23_LF2:
  706  00001670  8fc20000	lw	r2,(r30)
  707  00001674  20410001	addi	r1,r2,#1
  708  00001678  00011020	add	r2,r0,r1
  709  0000167c  afc20000	sw	(r30),r2
  710  00001680  0bffffd0	j	L21_LF2
  711  00001684  54000000	nop; delay slot nop
  712  00001688          	L22_LF2:
  713  00001688  23bdfff8	addi	r29,r29,#-8
  714  0000168c  001d0820	add	r1,r0,r29
  715  00001690  8fc20000	lw	r2,(r30)
  716  00001694  ac220000	sw	(r1),r2
  717  00001698  8fc20004	lw	r2,4(r30)
  718  0000169c  ac220004	sw	4(r1),r2
  719  000016a0  0ffffe5c	jal	_dstrcpy
  720  000016a4  54000000	nop; delay slot nop
  721  000016a8  23bd0008	addi	r29,r29,#8
  722  000016ac  8fc1fff4	lw	r1,-12(r30)
  723  000016b0  08000004	j	L20_LF2
  724  000016b4  54000000	nop; delay slot nop
  725  000016b8          	L20_LF2:
  726  000016b8  8fa20000	lw	r2,0(r29)
  727  000016bc  8fdffff8	lw	r31,-8(r30)
  728  000016c0  001ee820	add	r29,r0,r30
  729  000016c4  8fdefffc	lw	r30,-4(r30)
  730  000016c8  4be00000	jr	r31
  731  000016cc  54000000	nop
  732  000016d0          	.endproc _dstrcat
  733  000016d0          	.align 2
  734  000016d0          	.proc _dstrncmp
  735  000016d0          	.global _dstrncmp
  736  000016d0          	_dstrncmp:
  737                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  738  000016d0  afbefffc	sw	-4(r29),r30; push fp
  739  000016d4  001df020	add	r30,r0,r29; fp = sp
  740  000016d8  afbffff8	sw	-8(r29),r31; push ret addr
  741  000016dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  742  000016e0  afa20000	sw	0(r29),r2
  743  000016e4  afa30004	sw	4(r29),r3
  744  000016e8  54000000	nop
  745  000016ec  20010000	addi	r1,r0,#0
  746  000016f0  afc1fff4	sw	-12(r30),r1
  747  000016f4          	L25_LF2:
  748  000016f4  8fc1fff4	lw	r1,-12(r30)
  749  000016f8  8fc20008	lw	r2,8(r30)
  750  000016fc  0022082a	slt	r1,r1,r2
  751  00001700  1420000c	bnez	r1,L28_LF2
  752  00001704  54000000	nop; delay slot nop
  753  00001708  08000088	j	L26_LF2
  754  0000170c  54000000	nop; delay slot nop
  755  00001710          	L28_LF2:
  756  00001710  8fc10004	lw	r1,4(r30)
  757  00001714  90220000	lbu	r2,(r1)
  758  00001718  64410000	snei	r1,r2,#0
  759  0000171c  14200018	bnez	r1,L29_LF2
  760  00001720  54000000	nop; delay slot nop
  761  00001724  20010000	addi	r1,r0,#0
  762  00001728  080000d8	j	L24_LF2
  763  0000172c  54000000	nop; delay slot nop
  764  00001730  08000028	j	L30_LF2
  765  00001734  54000000	nop; delay slot nop
  766  00001738          	L29_LF2:
  767  00001738  8fc10000	lw	r1,(r30)
  768  0000173c  8fc20004	lw	r2,4(r30)
  769  00001740  90210000	lbu	r1,(r1)
  770  00001744  90420000	lbu	r2,(r2)
  771  00001748  00220829	sne	r1,r1,r2
  772  0000174c  1020000c	beqz	r1,L30_LF2
  773  00001750  54000000	nop; delay slot nop
  774  00001754  0800003c	j	L26_LF2
  775  00001758  54000000	nop; delay slot nop
  776  0000175c          	L31_LF2:
  777  0000175c          	L30_LF2:
  778  0000175c  8fc20000	lw	r2,(r30)
  779  00001760  20410001	addi	r1,r2,#1
  780  00001764  00011020	add	r2,r0,r1
  781  00001768  afc20000	sw	(r30),r2
  782  0000176c  8fc20004	lw	r2,4(r30)
  783  00001770  20410001	addi	r1,r2,#1
  784  00001774  00011020	add	r2,r0,r1
  785  00001778  afc20004	sw	4(r30),r2
  786  0000177c          	L27_LF2:
  787  0000177c  8fc2fff4	lw	r2,-12(r30)
  788  00001780  20410001	addi	r1,r2,#1
  789  00001784  00011020	add	r2,r0,r1
  790  00001788  afc2fff4	sw	-12(r30),r2
  791  0000178c  0bffff64	j	L25_LF2
  792  00001790  54000000	nop; delay slot nop
  793  00001794          	L26_LF2:
  794  00001794  8fc1fff4	lw	r1,-12(r30)
  795  00001798  8fc20008	lw	r2,8(r30)
  796  0000179c  00220828	seq	r1,r1,r2
  797  000017a0  10200018	beqz	r1,L32_LF2
  798  000017a4  54000000	nop; delay slot nop
  799  000017a8  20010000	addi	r1,r0,#0
  800  000017ac  08000054	j	L24_LF2
  801  000017b0  54000000	nop; delay slot nop
  802  000017b4  0800004c	j	L33_LF2
  803  000017b8  54000000	nop; delay slot nop
  804  000017bc          	L32_LF2:
  805  000017bc  8fc20000	lw	r2,(r30)
  806  000017c0  90410000	lbu	r1,(r2)
  807  000017c4  8fc20004	lw	r2,4(r30)
  808  000017c8  90430000	lbu	r3,(r2)
  809  000017cc  00230822	sub	r1,r1,r3
  810  000017d0  74220000	sgei	r2,r1,#0
  811  000017d4  10400020	beqz	r2,L34_LF2
  812  000017d8  54000000	nop; delay slot nop
  813  000017dc  8fc10000	lw	r1,(r30)
  814  000017e0  8fc20004	lw	r2,4(r30)
  815  000017e4  90210000	lbu	r1,(r1)
  816  000017e8  90420000	lbu	r2,(r2)
  817  000017ec  00220829	sne	r1,r1,r2
  818  000017f0  08000008	j	L35_LF2
  819  000017f4  54000000	nop; delay slot nop
  820  000017f8          	L34_LF2:
  821  000017f8  2001ffff	addi	r1,r0,#-1
  822  000017fc          	L35_LF2:
  823  000017fc  08000004	j	L24_LF2
  824  00001800  54000000	nop; delay slot nop
  825  00001804          	L33_LF2:
  826  00001804          	L24_LF2:
  827  00001804  8fa20000	lw	r2,0(r29)
  828  00001808  8fa30004	lw	r3,4(r29)
  829  0000180c  8fdffff8	lw	r31,-8(r30)
  830  00001810  001ee820	add	r29,r0,r30
  831  00001814  8fdefffc	lw	r30,-4(r30)
  832  00001818  4be00000	jr	r31
  833  0000181c  54000000	nop
  834  00001820          	.endproc _dstrncmp
  835  00001820          	.align 2
  836  00001820          	.proc _dstrlen
  837  00001820          	.global _dstrlen
  838  00001820          	_dstrlen:
  839                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  840  00001820  afbefffc	sw	-4(r29),r30; push fp
  841  00001824  001df020	add	r30,r0,r29; fp = sp
  842  00001828  afbffff8	sw	-8(r29),r31; push ret addr
  843  0000182c  2fbd0018	subui	r29,r29,#24; alloc local storage
  844  00001830  afa20000	sw	0(r29),r2
  845  00001834  20010000	addi	r1,r0,#0
  846  00001838  afc1fff4	sw	-12(r30),r1
  847  0000183c          	L37_LF2:
  848  0000183c  8fc10000	lw	r1,(r30)
  849  00001840  20220001	addi	r2,r1,#1
  850  00001844  afc20000	sw	(r30),r2
  851  00001848  90210000	lbu	r1,(r1)
  852  0000184c  64220000	snei	r2,r1,#0
  853  00001850  1440000c	bnez	r2,L39_LF2
  854  00001854  54000000	nop; delay slot nop
  855  00001858  0800001c	j	L38_LF2
  856  0000185c  54000000	nop; delay slot nop
  857  00001860          	L39_LF2:
  858  00001860  8fc2fff4	lw	r2,-12(r30)
  859  00001864  20410001	addi	r1,r2,#1
  860  00001868  00011020	add	r2,r0,r1
  861  0000186c  afc2fff4	sw	-12(r30),r2
  862  00001870  0bffffc8	j	L37_LF2
  863  00001874  54000000	nop; delay slot nop
  864  00001878          	L38_LF2:
  865  00001878  8fc1fff4	lw	r1,-12(r30)
  866  0000187c  08000004	j	L36_LF2
  867  00001880  54000000	nop; delay slot nop
  868  00001884          	L36_LF2:
  869  00001884  8fa20000	lw	r2,0(r29)
  870  00001888  8fdffff8	lw	r31,-8(r30)
  871  0000188c  001ee820	add	r29,r0,r30
  872  00001890  8fdefffc	lw	r30,-4(r30)
  873  00001894  4be00000	jr	r31
  874  00001898  54000000	nop
  875  0000189c          	.endproc _dstrlen
  876  0000189c          	.align 2
  877  0000189c          	.proc _dstrstr
  878  0000189c          	.global _dstrstr
  879  0000189c          	_dstrstr:
  880                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  881  0000189c  afbefffc	sw	-4(r29),r30; push fp
  882  000018a0  001df020	add	r30,r0,r29; fp = sp
  883  000018a4  afbffff8	sw	-8(r29),r31; push ret addr
  884  000018a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  885  000018ac  afa20000	sw	0(r29),r2
  886  000018b0  23bdfff8	addi	r29,r29,#-8
  887  000018b4  001d0820	add	r1,r0,r29
  888  000018b8  8fc20004	lw	r2,4(r30)
  889  000018bc  ac220000	sw	(r1),r2
  890  000018c0  0fffff5c	jal	_dstrlen
  891  000018c4  54000000	nop; delay slot nop
  892  000018c8  23bd0008	addi	r29,r29,#8
  893  000018cc  afc1fff4	sw	-12(r30),r1
  894  000018d0          	L41_LF2:
  895  000018d0  8fc10000	lw	r1,(r30)
  896  000018d4  90220000	lbu	r2,(r1)
  897  000018d8  64410000	snei	r1,r2,#0
  898  000018dc  1420000c	bnez	r1,L43_LF2
  899  000018e0  54000000	nop; delay slot nop
  900  000018e4  08000060	j	L42_LF2
  901  000018e8  54000000	nop; delay slot nop
  902  000018ec          	L43_LF2:
  903  000018ec  23bdfff0	addi	r29,r29,#-16
  904  000018f0  001d0820	add	r1,r0,r29
  905  000018f4  8fc20000	lw	r2,(r30)
  906  000018f8  ac220000	sw	(r1),r2
  907  000018fc  8fc20004	lw	r2,4(r30)
  908  00001900  ac220004	sw	4(r1),r2
  909  00001904  8fc2fff4	lw	r2,-12(r30)
  910  00001908  ac220008	sw	8(r1),r2
  911  0000190c  0ffffdc0	jal	_dstrncmp
  912  00001910  54000000	nop; delay slot nop
  913  00001914  23bd0010	addi	r29,r29,#16
  914  00001918  64220000	snei	r2,r1,#0
  915  0000191c  14400010	bnez	r2,L44_LF2
  916  00001920  54000000	nop; delay slot nop
  917  00001924  8fc10000	lw	r1,(r30)
  918  00001928  08000028	j	L40_LF2
  919  0000192c  54000000	nop; delay slot nop
  920  00001930          	L44_LF2:
  921  00001930  8fc20000	lw	r2,(r30)
  922  00001934  20410001	addi	r1,r2,#1
  923  00001938  00011020	add	r2,r0,r1
  924  0000193c  afc20000	sw	(r30),r2
  925  00001940  0bffff8c	j	L41_LF2
  926  00001944  54000000	nop; delay slot nop
  927  00001948          	L42_LF2:
  928  00001948  20010000	addi	r1,r0,#0
  929  0000194c  08000004	j	L40_LF2
  930  00001950  54000000	nop; delay slot nop
  931  00001954          	L40_LF2:
  932  00001954  8fa20000	lw	r2,0(r29)
  933  00001958  8fdffff8	lw	r31,-8(r30)
  934  0000195c  001ee820	add	r29,r0,r30
  935  00001960  8fdefffc	lw	r30,-4(r30)
  936  00001964  4be00000	jr	r31
  937  00001968  54000000	nop
  938  0000196c          	.endproc _dstrstr
  939  0000196c          	.align 2
  940  0000196c          	.proc _dmindex
  941  0000196c          	.global _dmindex
  942  0000196c          	_dmindex:
  943                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  944  0000196c  afbefffc	sw	-4(r29),r30; push fp
  945  00001970  001df020	add	r30,r0,r29; fp = sp
  946  00001974  afbffff8	sw	-8(r29),r31; push ret addr
  947  00001978  2fbd0018	subui	r29,r29,#24; alloc local storage
  948  0000197c  afa20000	sw	0(r29),r2
  949  00001980  54000000	nop
  950  00001984          	L46_LF2:
  951  00001984  8fc10000	lw	r1,(r30)
  952  00001988  90220000	lbu	r2,(r1)
  953  0000198c  64410000	snei	r1,r2,#0
  954  00001990  1420000c	bnez	r1,L48_LF2
  955  00001994  54000000	nop; delay slot nop
  956  00001998  08000070	j	L47_LF2
  957  0000199c  54000000	nop; delay slot nop
  958  000019a0          	L48_LF2:
  959  000019a0  8fc10004	lw	r1,4(r30)
  960  000019a4  afc1fff4	sw	-12(r30),r1
  961  000019a8          	L49_LF2:
  962  000019a8  8fc1fff4	lw	r1,-12(r30)
  963  000019ac  90220000	lbu	r2,(r1)
  964  000019b0  64410000	snei	r1,r2,#0
  965  000019b4  1420000c	bnez	r1,L52_LF2
  966  000019b8  54000000	nop; delay slot nop
  967  000019bc  08000044	j	L50_LF2
  968  000019c0  54000000	nop; delay slot nop
  969  000019c4          	L52_LF2:
  970  000019c4  8fc10000	lw	r1,(r30)
  971  000019c8  8fc2fff4	lw	r2,-12(r30)
  972  000019cc  90210000	lbu	r1,(r1)
  973  000019d0  90420000	lbu	r2,(r2)
  974  000019d4  00220828	seq	r1,r1,r2
  975  000019d8  10200010	beqz	r1,L51_LF2
  976  000019dc  54000000	nop; delay slot nop
  977  000019e0  8fc10000	lw	r1,(r30)
  978  000019e4  08000030	j	L45_LF2
  979  000019e8  54000000	nop; delay slot nop
  980  000019ec          	L53_LF2:
  981  000019ec          	L51_LF2:
  982  000019ec  8fc2fff4	lw	r2,-12(r30)
  983  000019f0  20410001	addi	r1,r2,#1
  984  000019f4  00011020	add	r2,r0,r1
  985  000019f8  afc2fff4	sw	-12(r30),r2
  986  000019fc  0bffffa8	j	L49_LF2
  987  00001a00  54000000	nop; delay slot nop
  988  00001a04          	L50_LF2:
  989  00001a04  0bffff7c	j	L46_LF2
  990  00001a08  54000000	nop; delay slot nop
  991  00001a0c          	L47_LF2:
  992  00001a0c  20010000	addi	r1,r0,#0
  993  00001a10  08000004	j	L45_LF2
  994  00001a14  54000000	nop; delay slot nop
  995  00001a18          	L45_LF2:
  996  00001a18  8fa20000	lw	r2,0(r29)
  997  00001a1c  8fdffff8	lw	r31,-8(r30)
  998  00001a20  001ee820	add	r29,r0,r30
  999  00001a24  8fdefffc	lw	r30,-4(r30)
 1000  00001a28  4be00000	jr	r31
 1001  00001a2c  54000000	nop
 1002  00001a30          	.endproc _dmindex
 1003  00001a30          	.align 2
 1004  00001a30          	.proc _dindex
 1005  00001a30          	.global _dindex
 1006  00001a30          	_dindex:
 1007                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1008  00001a30  afbefffc	sw	-4(r29),r30; push fp
 1009  00001a34  001df020	add	r30,r0,r29; fp = sp
 1010  00001a38  afbffff8	sw	-8(r29),r31; push ret addr
 1011  00001a3c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1012  00001a40  afa20000	sw	0(r29),r2
 1013  00001a44  54000000	nop
 1014  00001a48          	L55_LF2:
 1015  00001a48  8fc10000	lw	r1,(r30)
 1016  00001a4c  90220000	lbu	r2,(r1)
 1017  00001a50  64410000	snei	r1,r2,#0
 1018  00001a54  1420000c	bnez	r1,L57_LF2
 1019  00001a58  54000000	nop; delay slot nop
 1020  00001a5c  08000040	j	L56_LF2
 1021  00001a60  54000000	nop; delay slot nop
 1022  00001a64          	L57_LF2:
 1023  00001a64  8fc10000	lw	r1,(r30)
 1024  00001a68  90220000	lbu	r2,(r1)
 1025  00001a6c  8fc10004	lw	r1,4(r30)
 1026  00001a70  00411028	seq	r2,r2,r1
 1027  00001a74  10400010	beqz	r2,L58_LF2
 1028  00001a78  54000000	nop; delay slot nop
 1029  00001a7c  8fc10000	lw	r1,(r30)
 1030  00001a80  08000028	j	L54_LF2
 1031  00001a84  54000000	nop; delay slot nop
 1032  00001a88          	L58_LF2:
 1033  00001a88  8fc20000	lw	r2,(r30)
 1034  00001a8c  20410001	addi	r1,r2,#1
 1035  00001a90  00011020	add	r2,r0,r1
 1036  00001a94  afc20000	sw	(r30),r2
 1037  00001a98  0bffffac	j	L55_LF2
 1038  00001a9c  54000000	nop; delay slot nop
 1039  00001aa0          	L56_LF2:
 1040  00001aa0  20010000	addi	r1,r0,#0
 1041  00001aa4  08000004	j	L54_LF2
 1042  00001aa8  54000000	nop; delay slot nop
 1043  00001aac          	L54_LF2:
 1044  00001aac  8fa20000	lw	r2,0(r29)
 1045  00001ab0  8fdffff8	lw	r31,-8(r30)
 1046  00001ab4  001ee820	add	r29,r0,r30
 1047  00001ab8  8fdefffc	lw	r30,-4(r30)
 1048  00001abc  4be00000	jr	r31
 1049  00001ac0  54000000	nop
 1050  00001ac4          	.endproc _dindex
 1051  00001ac4          	.align 2
 1052  00001ac4          	.proc _ditoa
 1053  00001ac4          	.global _ditoa
 1054  00001ac4          	_ditoa:
 1055                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1056  00001ac4  afbefffc	sw	-4(r29),r30; push fp
 1057  00001ac8  001df020	add	r30,r0,r29; fp = sp
 1058  00001acc  afbffff8	sw	-8(r29),r31; push ret addr
 1059  00001ad0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1060  00001ad4  afa20000	sw	0(r29),r2
 1061  00001ad8  afa30004	sw	4(r29),r3
 1062  00001adc  8fc10000	lw	r1,(r30)
 1063  00001ae0  68220000	slti	r2,r1,#0
 1064  00001ae4  1040002c	beqz	r2,L60_LF2
 1065  00001ae8  54000000	nop; delay slot nop
 1066  00001aec  8fc10004	lw	r1,4(r30)
 1067  00001af0  20220001	addi	r2,r1,#1
 1068  00001af4  afc20004	sw	4(r30),r2
 1069  00001af8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1070  00001afc  a0220000	sb	(r1),r2
 1071  00001b00  8fc10000	lw	r1,(r30)
 1072  00001b04  00011022	sub	r2,r0,r1
 1073  00001b08  afc20000	sw	(r30),r2
 1074  00001b0c  08000118	j	L61_LF2
 1075  00001b10  54000000	nop; delay slot nop
 1076  00001b14          	L60_LF2:
 1077  00001b14  8fc10000	lw	r1,(r30)
 1078  00001b18  64220000	snei	r2,r1,#0
 1079  00001b1c  14400020	bnez	r2,L62_LF2
 1080  00001b20  54000000	nop; delay slot nop
 1081  00001b24  8fc10004	lw	r1,4(r30)
 1082  00001b28  20220001	addi	r2,r1,#1
 1083  00001b2c  afc20004	sw	4(r30),r2
 1084  00001b30  20020030	addi	r2,r0,(#0x30)&0xff
 1085  00001b34  a0220000	sb	(r1),r2
 1086  00001b38  080000ec	j	L61_LF2
 1087  00001b3c  54000000	nop; delay slot nop
 1088  00001b40          	L62_LF2:
 1089  00001b40  20010001	addi	r1,r0,#1
 1090  00001b44  afc1fff4	sw	-12(r30),r1
 1091  00001b48          	L64_LF2:
 1092  00001b48  8fc1fff4	lw	r1,-12(r30)
 1093  00001b4c  8fc20000	lw	r2,(r30)
 1094  00001b50  0022082c	sle	r1,r1,r2
 1095  00001b54  1420000c	bnez	r1,L66_LF2
 1096  00001b58  54000000	nop; delay slot nop
 1097  00001b5c  08000024	j	L65_LF2
 1098  00001b60  54000000	nop; delay slot nop
 1099  00001b64          	L67_LF2:
 1100  00001b64          	L66_LF2:
 1101  00001b64  8fc1fff4	lw	r1,-12(r30)
 1102  00001b68  00011820	add	r3,r0,r1
 1103  00001b6c  50620002	slli	r2,r3,#0x2
 1104  00001b70  00411020	add	r2,r2,r1
 1105  00001b74  50410001	slli	r1,r2,#0x1
 1106  00001b78  afc1fff4	sw	-12(r30),r1
 1107  00001b7c  0bffffc8	j	L64_LF2
 1108  00001b80  54000000	nop; delay slot nop
 1109  00001b84          	L65_LF2:
 1110  00001b84  54000000	nop
 1111  00001b88          	L68_LF2:
 1112  00001b88  8fc1fff4	lw	r1,-12(r30)
 1113  00001b8c  2002000a	addi	r2,r0,#10
 1114  00001b90  00200035	movi2fp	f0,r1
 1115  00001b94  00400835	movi2fp	f1,r2
 1116  00001b98  0401000f	div	f0,f0,f1
 1117  00001b9c  00000834	movfp2i	r1,f0
 1118  00001ba0  afc1fff4	sw	-12(r30),r1
 1119  00001ba4  8fc10004	lw	r1,4(r30)
 1120  00001ba8  20220001	addi	r2,r1,#1
 1121  00001bac  afc20004	sw	4(r30),r2
 1122  00001bb0  8fc20000	lw	r2,(r30)
 1123  00001bb4  8fc3fff4	lw	r3,-12(r30)
 1124  00001bb8  00400035	movi2fp	f0,r2
 1125  00001bbc  00600835	movi2fp	f1,r3
 1126  00001bc0  0401000f	div	f0,f0,f1
 1127  00001bc4  00001034	movfp2i	r2,f0
 1128  00001bc8  00021820	add	r3,r0,r2
 1129  00001bcc  20620030	addi	r2,r3,#48
 1130  00001bd0  a0220000	sb	(r1),r2
 1131  00001bd4  8fc10000	lw	r1,(r30)
 1132  00001bd8  8fc3fff4	lw	r3,-12(r30)
 1133  00001bdc  00200035	movi2fp	f0,r1
 1134  00001be0  00600835	movi2fp	f1,r3
 1135  00001be4  0401000f	div	f0,f0,f1
 1136  00001be8  00001034	movfp2i	r2,f0
 1137  00001bec  8fc3fff4	lw	r3,-12(r30)
 1138  00001bf0  00400035	movi2fp	f0,r2
 1139  00001bf4  00600835	movi2fp	f1,r3
 1140  00001bf8  0401000e	mult	f0,f0,f1
 1141  00001bfc  00001034	movfp2i	r2,f0
 1142  00001c00  00220822	sub	r1,r1,r2
 1143  00001c04  afc10000	sw	(r30),r1
 1144  00001c08          	L70_LF2:
 1145  00001c08  8fc1fff4	lw	r1,-12(r30)
 1146  00001c0c  6c220001	sgti	r2,r1,#1
 1147  00001c10  1440000c	bnez	r2,L71_LF2
 1148  00001c14  54000000	nop; delay slot nop
 1149  00001c18  0800000c	j	L61_LF2
 1150  00001c1c  54000000	nop; delay slot nop
 1151  00001c20          	L71_LF2:
 1152  00001c20  0bffff64	j	L68_LF2
 1153  00001c24  54000000	nop; delay slot nop
 1154  00001c28          	L69_LF2:
 1155  00001c28          	L63_LF2:
 1156  00001c28          	L61_LF2:
 1157  00001c28  8fc10004	lw	r1,4(r30)
 1158  00001c2c  20020000	addi	r2,r0,(#0x0)&0xff
 1159  00001c30  a0220000	sb	(r1),r2
 1160  00001c34          	L59_LF2:
 1161  00001c34  8fa20000	lw	r2,0(r29)
 1162  00001c38  8fa30004	lw	r3,4(r29)
 1163  00001c3c  8fdffff8	lw	r31,-8(r30)
 1164  00001c40  001ee820	add	r29,r0,r30
 1165  00001c44  8fdefffc	lw	r30,-4(r30)
 1166  00001c48  4be00000	jr	r31
 1167  00001c4c  54000000	nop
 1168  00001c50          	.endproc _ditoa
 1169  00001c50          	.align 2
 1170  00001c50          	.proc _dstrtol
 1171  00001c50          	.global _dstrtol
 1172  00001c50          	_dstrtol:
 1173                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1174  00001c50  afbefffc	sw	-4(r29),r30; push fp
 1175  00001c54  001df020	add	r30,r0,r29; fp = sp
 1176  00001c58  afbffff8	sw	-8(r29),r31; push ret addr
 1177  00001c5c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1178  00001c60  afa20000	sw	0(r29),r2
 1179  00001c64  20010000	addi	r1,r0,#0
 1180  00001c68  afc1fff4	sw	-12(r30),r1
 1181  00001c6c          	L73_LF2:
 1182  00001c6c  8fc10000	lw	r1,(r30)
 1183  00001c70  90220000	lbu	r2,(r1)
 1184  00001c74  60410020	seqi	r1,r2,#32
 1185  00001c78  14200034	bnez	r1,L75_LF2
 1186  00001c7c  54000000	nop; delay slot nop
 1187  00001c80  8fc10000	lw	r1,(r30)
 1188  00001c84  90220000	lbu	r2,(r1)
 1189  00001c88  60410009	seqi	r1,r2,#9
 1190  00001c8c  14200020	bnez	r1,L75_LF2
 1191  00001c90  54000000	nop; delay slot nop
 1192  00001c94  8fc10000	lw	r1,(r30)
 1193  00001c98  90220000	lbu	r2,(r1)
 1194  00001c9c  6041000a	seqi	r1,r2,#10
 1195  00001ca0  1420000c	bnez	r1,L75_LF2
 1196  00001ca4  54000000	nop; delay slot nop
 1197  00001ca8  0800001c	j	L74_LF2
 1198  00001cac  54000000	nop; delay slot nop
 1199  00001cb0          	L75_LF2:
 1200  00001cb0  8fc20000	lw	r2,(r30)
 1201  00001cb4  20410001	addi	r1,r2,#1
 1202  00001cb8  00011020	add	r2,r0,r1
 1203  00001cbc  afc20000	sw	(r30),r2
 1204  00001cc0  0bffffa8	j	L73_LF2
 1205  00001cc4  54000000	nop; delay slot nop
 1206  00001cc8          	L74_LF2:
 1207  00001cc8  8fc10004	lw	r1,4(r30)
 1208  00001ccc  64220000	snei	r2,r1,#0
 1209  00001cd0  10400010	beqz	r2,L76_LF2
 1210  00001cd4  54000000	nop; delay slot nop
 1211  00001cd8  8fc10004	lw	r1,4(r30)
 1212  00001cdc  8fc20000	lw	r2,(r30)
 1213  00001ce0  ac220000	sw	(r1),r2
 1214  00001ce4          	L76_LF2:
 1215  00001ce4  8fc10000	lw	r1,(r30)
 1216  00001ce8  90220000	lbu	r2,(r1)
 1217  00001cec  64410000	snei	r1,r2,#0
 1218  00001cf0  14200010	bnez	r1,L77_LF2
 1219  00001cf4  54000000	nop; delay slot nop
 1220  00001cf8  8fc1fff4	lw	r1,-12(r30)
 1221  00001cfc  08000294	j	L72_LF2
 1222  00001d00  54000000	nop; delay slot nop
 1223  00001d04          	L77_LF2:
 1224  00001d04  8fc10000	lw	r1,(r30)
 1225  00001d08  90220000	lbu	r2,(r1)
 1226  00001d0c  6041002d	seqi	r1,r2,#45
 1227  00001d10  10200024	beqz	r1,L78_LF2
 1228  00001d14  54000000	nop; delay slot nop
 1229  00001d18  2001ffff	addi	r1,r0,#-1
 1230  00001d1c  afc1ffec	sw	-20(r30),r1
 1231  00001d20  8fc20000	lw	r2,(r30)
 1232  00001d24  20410001	addi	r1,r2,#1
 1233  00001d28  00011020	add	r2,r0,r1
 1234  00001d2c  afc20000	sw	(r30),r2
 1235  00001d30  0800000c	j	L79_LF2
 1236  00001d34  54000000	nop; delay slot nop
 1237  00001d38          	L78_LF2:
 1238  00001d38  20010001	addi	r1,r0,#1
 1239  00001d3c  afc1ffec	sw	-20(r30),r1
 1240  00001d40          	L79_LF2:
 1241  00001d40  8fc10008	lw	r1,8(r30)
 1242  00001d44  64220000	snei	r2,r1,#0
 1243  00001d48  14400090	bnez	r2,L80_LF2
 1244  00001d4c  54000000	nop; delay slot nop
 1245  00001d50  8fc10000	lw	r1,(r30)
 1246  00001d54  90220000	lbu	r2,(r1)
 1247  00001d58  60410030	seqi	r1,r2,#48
 1248  00001d5c  10200074	beqz	r1,L81_LF2
 1249  00001d60  54000000	nop; delay slot nop
 1250  00001d64  8fc20000	lw	r2,(r30)
 1251  00001d68  20410001	addi	r1,r2,#1
 1252  00001d6c  00011020	add	r2,r0,r1
 1253  00001d70  afc20000	sw	(r30),r2
 1254  00001d74  8fc10000	lw	r1,(r30)
 1255  00001d78  90220000	lbu	r2,(r1)
 1256  00001d7c  60410078	seqi	r1,r2,#120
 1257  00001d80  14200020	bnez	r1,L83_LF2
 1258  00001d84  54000000	nop; delay slot nop
 1259  00001d88  8fc10000	lw	r1,(r30)
 1260  00001d8c  90220000	lbu	r2,(r1)
 1261  00001d90  60410058	seqi	r1,r2,#88
 1262  00001d94  1420000c	bnez	r1,L83_LF2
 1263  00001d98  54000000	nop; delay slot nop
 1264  00001d9c  08000024	j	L82_LF2
 1265  00001da0  54000000	nop; delay slot nop
 1266  00001da4          	L83_LF2:
 1267  00001da4  20010010	addi	r1,r0,#16
 1268  00001da8  afc10008	sw	8(r30),r1
 1269  00001dac  8fc20000	lw	r2,(r30)
 1270  00001db0  20410001	addi	r1,r2,#1
 1271  00001db4  00011020	add	r2,r0,r1
 1272  00001db8  afc20000	sw	(r30),r2
 1273  00001dbc  0800000c	j	L84_LF2
 1274  00001dc0  54000000	nop; delay slot nop
 1275  00001dc4          	L82_LF2:
 1276  00001dc4  20010008	addi	r1,r0,#8
 1277  00001dc8  afc10008	sw	8(r30),r1
 1278  00001dcc          	L84_LF2:
 1279  00001dcc  0800000c	j	L80_LF2
 1280  00001dd0  54000000	nop; delay slot nop
 1281  00001dd4          	L81_LF2:
 1282  00001dd4  2001000a	addi	r1,r0,#10
 1283  00001dd8  afc10008	sw	8(r30),r1
 1284  00001ddc          	L85_LF2:
 1285  00001ddc          	L80_LF2:
 1286  00001ddc  8fc10008	lw	r1,8(r30)
 1287  00001de0  70220000	slei	r2,r1,#0
 1288  00001de4  1440001c	bnez	r2,L87_LF2
 1289  00001de8  54000000	nop; delay slot nop
 1290  00001dec  8fc10008	lw	r1,8(r30)
 1291  00001df0  6c220010	sgti	r2,r1,#16
 1292  00001df4  1440000c	bnez	r2,L87_LF2
 1293  00001df8  54000000	nop; delay slot nop
 1294  00001dfc  08000010	j	L86_LF2
 1295  00001e00  54000000	nop; delay slot nop
 1296  00001e04          	L87_LF2:
 1297  00001e04  8fc1fff4	lw	r1,-12(r30)
 1298  00001e08  08000188	j	L72_LF2
 1299  00001e0c  54000000	nop; delay slot nop
 1300  00001e10          	L86_LF2:
 1301  00001e10  54000000	nop
 1302  00001e14          	L88_LF2:
 1303  00001e14  8fc10000	lw	r1,(r30)
 1304  00001e18  90220000	lbu	r2,(r1)
 1305  00001e1c  6c41002f	sgtui	r1,r2,#47
 1306  00001e20  10200030	beqz	r1,L91_LF2
 1307  00001e24  54000000	nop; delay slot nop
 1308  00001e28  8fc10000	lw	r1,(r30)
 1309  00001e2c  90220000	lbu	r2,(r1)
 1310  00001e30  70410039	sleui	r1,r2,#57
 1311  00001e34  1020001c	beqz	r1,L91_LF2
 1312  00001e38  54000000	nop; delay slot nop
 1313  00001e3c  8fc10000	lw	r1,(r30)
 1314  00001e40  90220000	lbu	r2,(r1)
 1315  00001e44  2041ffd0	addi	r1,r2,#-48
 1316  00001e48  afc1fff0	sw	-16(r30),r1
 1317  00001e4c  0800008c	j	L92_LF2
 1318  00001e50  54000000	nop; delay slot nop
 1319  00001e54          	L91_LF2:
 1320  00001e54  8fc10000	lw	r1,(r30)
 1321  00001e58  90220000	lbu	r2,(r1)
 1322  00001e5c  6c410060	sgtui	r1,r2,#96
 1323  00001e60  10200030	beqz	r1,L93_LF2
 1324  00001e64  54000000	nop; delay slot nop
 1325  00001e68  8fc10000	lw	r1,(r30)
 1326  00001e6c  90220000	lbu	r2,(r1)
 1327  00001e70  7041007a	sleui	r1,r2,#122
 1328  00001e74  1020001c	beqz	r1,L93_LF2
 1329  00001e78  54000000	nop; delay slot nop
 1330  00001e7c  8fc10000	lw	r1,(r30)
 1331  00001e80  90220000	lbu	r2,(r1)
 1332  00001e84  2041ffa9	addi	r1,r2,#-87
 1333  00001e88  afc1fff0	sw	-16(r30),r1
 1334  00001e8c  0800004c	j	L92_LF2
 1335  00001e90  54000000	nop; delay slot nop
 1336  00001e94          	L93_LF2:
 1337  00001e94  8fc10000	lw	r1,(r30)
 1338  00001e98  90220000	lbu	r2,(r1)
 1339  00001e9c  6c410040	sgtui	r1,r2,#64
 1340  00001ea0  10200030	beqz	r1,L95_LF2
 1341  00001ea4  54000000	nop; delay slot nop
 1342  00001ea8  8fc10000	lw	r1,(r30)
 1343  00001eac  90220000	lbu	r2,(r1)
 1344  00001eb0  7041005a	sleui	r1,r2,#90
 1345  00001eb4  1020001c	beqz	r1,L95_LF2
 1346  00001eb8  54000000	nop; delay slot nop
 1347  00001ebc  8fc10000	lw	r1,(r30)
 1348  00001ec0  90220000	lbu	r2,(r1)
 1349  00001ec4  2041ffc9	addi	r1,r2,#-55
 1350  00001ec8  afc1fff0	sw	-16(r30),r1
 1351  00001ecc  0800000c	j	L92_LF2
 1352  00001ed0  54000000	nop; delay slot nop
 1353  00001ed4          	L95_LF2:
 1354  00001ed4  200103e8	addi	r1,r0,#1000
 1355  00001ed8  afc1fff0	sw	-16(r30),r1
 1356  00001edc          	L96_LF2:
 1357  00001edc          	L94_LF2:
 1358  00001edc          	L92_LF2:
 1359  00001edc  8fc1fff0	lw	r1,-16(r30)
 1360  00001ee0  8fc20008	lw	r2,8(r30)
 1361  00001ee4  0022082a	slt	r1,r1,r2
 1362  00001ee8  10200040	beqz	r1,L90_LF2
 1363  00001eec  54000000	nop; delay slot nop
 1364  00001ef0  8fc1fff4	lw	r1,-12(r30)
 1365  00001ef4  8fc20008	lw	r2,8(r30)
 1366  00001ef8  00200035	movi2fp	f0,r1
 1367  00001efc  00400835	movi2fp	f1,r2
 1368  00001f00  0401000e	mult	f0,f0,f1
 1369  00001f04  00000834	movfp2i	r1,f0
 1370  00001f08  afc1fff4	sw	-12(r30),r1
 1371  00001f0c  8fc1fff4	lw	r1,-12(r30)
 1372  00001f10  8fc2fff0	lw	r2,-16(r30)
 1373  00001f14  00220820	add	r1,r1,r2
 1374  00001f18  afc1fff4	sw	-12(r30),r1
 1375  00001f1c  8fc20000	lw	r2,(r30)
 1376  00001f20  20410001	addi	r1,r2,#1
 1377  00001f24  00011020	add	r2,r0,r1
 1378  00001f28  afc20000	sw	(r30),r2
 1379  00001f2c          	L97_LF2:
 1380  00001f2c          	L90_LF2:
 1381  00001f2c  8fc1fff0	lw	r1,-16(r30)
 1382  00001f30  8fc20008	lw	r2,8(r30)
 1383  00001f34  0022082a	slt	r1,r1,r2
 1384  00001f38  1420000c	bnez	r1,L98_LF2
 1385  00001f3c  54000000	nop; delay slot nop
 1386  00001f40  0800000c	j	L89_LF2
 1387  00001f44  54000000	nop; delay slot nop
 1388  00001f48          	L98_LF2:
 1389  00001f48  0bfffec8	j	L88_LF2
 1390  00001f4c  54000000	nop; delay slot nop
 1391  00001f50          	L89_LF2:
 1392  00001f50  8fc10004	lw	r1,4(r30)
 1393  00001f54  64220000	snei	r2,r1,#0
 1394  00001f58  10400010	beqz	r2,L99_LF2
 1395  00001f5c  54000000	nop; delay slot nop
 1396  00001f60  8fc10004	lw	r1,4(r30)
 1397  00001f64  8fc20000	lw	r2,(r30)
 1398  00001f68  ac220000	sw	(r1),r2
 1399  00001f6c          	L99_LF2:
 1400  00001f6c  8fc1fff4	lw	r1,-12(r30)
 1401  00001f70  8fc2ffec	lw	r2,-20(r30)
 1402  00001f74  00200035	movi2fp	f0,r1
 1403  00001f78  00400835	movi2fp	f1,r2
 1404  00001f7c  0401000e	mult	f0,f0,f1
 1405  00001f80  00000834	movfp2i	r1,f0
 1406  00001f84  afc1fff4	sw	-12(r30),r1
 1407  00001f88  8fc1fff4	lw	r1,-12(r30)
 1408  00001f8c  08000004	j	L72_LF2
 1409  00001f90  54000000	nop; delay slot nop
 1410  00001f94          	L72_LF2:
 1411  00001f94  8fa20000	lw	r2,0(r29)
 1412  00001f98  8fdffff8	lw	r31,-8(r30)
 1413  00001f9c  001ee820	add	r29,r0,r30
 1414  00001fa0  8fdefffc	lw	r30,-4(r30)
 1415  00001fa4  4be00000	jr	r31
 1416  00001fa8  54000000	nop
 1417  00001fac          	.endproc _dstrtol
 1418  00001fac          	.align 2
 1419  00001fac          	.proc _bcopy
 1420  00001fac          	.global _bcopy
 1421  00001fac          	_bcopy:
 1422                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1423  00001fac  afbefffc	sw	-4(r29),r30; push fp
 1424  00001fb0  001df020	add	r30,r0,r29; fp = sp
 1425  00001fb4  afbffff8	sw	-8(r29),r31; push ret addr
 1426  00001fb8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1427  00001fbc  afa20000	sw	0(r29),r2
 1428  00001fc0  afa30004	sw	4(r29),r3
 1429  00001fc4  54000000	nop
 1430  00001fc8          	L101_LF2:
 1431  00001fc8  8fc10008	lw	r1,8(r30)
 1432  00001fcc  2022ffff	addi	r2,r1,#-1
 1433  00001fd0  afc20008	sw	8(r30),r2
 1434  00001fd4  6c210000	sgti	r1,r1,#0
 1435  00001fd8  1420000c	bnez	r1,L103_LF2
 1436  00001fdc  54000000	nop; delay slot nop
 1437  00001fe0  0800002c	j	L102_LF2
 1438  00001fe4  54000000	nop; delay slot nop
 1439  00001fe8          	L103_LF2:
 1440  00001fe8  8fc10004	lw	r1,4(r30)
 1441  00001fec  20220001	addi	r2,r1,#1
 1442  00001ff0  afc20004	sw	4(r30),r2
 1443  00001ff4  8fc20000	lw	r2,(r30)
 1444  00001ff8  20430001	addi	r3,r2,#1
 1445  00001ffc  afc30000	sw	(r30),r3
 1446  00002000  80420000	lb	r2,(r2)
 1447  00002004  a0220000	sb	(r1),r2
 1448  00002008  0bffffbc	j	L101_LF2
 1449  0000200c  54000000	nop; delay slot nop
 1450  00002010          	L102_LF2:
 1451  00002010          	L100_LF2:
 1452  00002010  8fa20000	lw	r2,0(r29)
 1453  00002014  8fa30004	lw	r3,4(r29)
 1454  00002018  8fdffff8	lw	r31,-8(r30)
 1455  0000201c  001ee820	add	r29,r0,r30
 1456  00002020  8fdefffc	lw	r30,-4(r30)
 1457  00002024  4be00000	jr	r31
 1458  00002028  54000000	nop
 1459  0000202c          	.endproc _bcopy
 1460  0000202c          	.align 2
 1461  0000202c          	.proc _bzero
 1462  0000202c          	.global _bzero
 1463  0000202c          	_bzero:
 1464                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1465  0000202c  afbefffc	sw	-4(r29),r30; push fp
 1466  00002030  001df020	add	r30,r0,r29; fp = sp
 1467  00002034  afbffff8	sw	-8(r29),r31; push ret addr
 1468  00002038  2fbd0010	subui	r29,r29,#16; alloc local storage
 1469  0000203c  afa20000	sw	0(r29),r2
 1470  00002040  54000000	nop
 1471  00002044          	L105_LF2:
 1472  00002044  8fc10004	lw	r1,4(r30)
 1473  00002048  2022ffff	addi	r2,r1,#-1
 1474  0000204c  afc20004	sw	4(r30),r2
 1475  00002050  6c210000	sgti	r1,r1,#0
 1476  00002054  1420000c	bnez	r1,L107_LF2
 1477  00002058  54000000	nop; delay slot nop
 1478  0000205c  08000020	j	L106_LF2
 1479  00002060  54000000	nop; delay slot nop
 1480  00002064          	L107_LF2:
 1481  00002064  8fc10000	lw	r1,(r30)
 1482  00002068  20220001	addi	r2,r1,#1
 1483  0000206c  afc20000	sw	(r30),r2
 1484  00002070  20020000	addi	r2,r0,(#0x0)&0xff
 1485  00002074  a0220000	sb	(r1),r2
 1486  00002078  0bffffc8	j	L105_LF2
 1487  0000207c  54000000	nop; delay slot nop
 1488  00002080          	L106_LF2:
 1489  00002080          	L104_LF2:
 1490  00002080  8fa20000	lw	r2,0(r29)
 1491  00002084  8fdffff8	lw	r31,-8(r30)
 1492  00002088  001ee820	add	r29,r0,r30
 1493  0000208c  8fdefffc	lw	r30,-4(r30)
 1494  00002090  4be00000	jr	r31
 1495  00002094  54000000	nop
 1496  00002098          	.endproc _bzero
 1497  00002098          	.align 2
 1498  00002098          	.proc _min
 1499  00002098          	.global _min
 1500  00002098          	_min:
 1501                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1502  00002098  afbefffc	sw	-4(r29),r30; push fp
 1503  0000209c  001df020	add	r30,r0,r29; fp = sp
 1504  000020a0  afbffff8	sw	-8(r29),r31; push ret addr
 1505  000020a4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1506  000020a8  afa20000	sw	0(r29),r2
 1507  000020ac  afa30004	sw	4(r29),r3
 1508  000020b0  8fc10000	lw	r1,(r30)
 1509  000020b4  8fc20004	lw	r2,4(r30)
 1510  000020b8  0022182c	sle	r3,r1,r2
 1511  000020bc  14600008	bnez	r3,L109_LF2
 1512  000020c0  54000000	nop; delay slot nop
 1513  000020c4  8fc10004	lw	r1,4(r30)
 1514  000020c8          	L109_LF2:
 1515  000020c8  08000004	j	L108_LF2
 1516  000020cc  54000000	nop; delay slot nop
 1517  000020d0          	L108_LF2:
 1518  000020d0  8fa20000	lw	r2,0(r29)
 1519  000020d4  8fa30004	lw	r3,4(r29)
 1520  000020d8  8fdffff8	lw	r31,-8(r30)
 1521  000020dc  001ee820	add	r29,r0,r30
 1522  000020e0  8fdefffc	lw	r30,-4(r30)
 1523  000020e4  4be00000	jr	r31
 1524  000020e8  54000000	nop
 1525  000020ec          	.endproc _min
 1526  000020ec          	.align 2
 1527  000020ec          	.proc _max
 1528  000020ec          	.global _max
 1529  000020ec          	_max:
 1530                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1531  000020ec  afbefffc	sw	-4(r29),r30; push fp
 1532  000020f0  001df020	add	r30,r0,r29; fp = sp
 1533  000020f4  afbffff8	sw	-8(r29),r31; push ret addr
 1534  000020f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1535  000020fc  afa20000	sw	0(r29),r2
 1536  00002100  afa30004	sw	4(r29),r3
 1537  00002104  8fc10000	lw	r1,(r30)
 1538  00002108  8fc20004	lw	r2,4(r30)
 1539  0000210c  0022182d	sge	r3,r1,r2
 1540  00002110  14600008	bnez	r3,L111_LF2
 1541  00002114  54000000	nop; delay slot nop
 1542  00002118  8fc10004	lw	r1,4(r30)
 1543  0000211c          	L111_LF2:
 1544  0000211c  08000004	j	L110_LF2
 1545  00002120  54000000	nop; delay slot nop
 1546  00002124          	L110_LF2:
 1547  00002124  8fa20000	lw	r2,0(r29)
 1548  00002128  8fa30004	lw	r3,4(r29)
 1549  0000212c  8fdffff8	lw	r31,-8(r30)
 1550  00002130  001ee820	add	r29,r0,r30
 1551  00002134  8fdefffc	lw	r30,-4(r30)
 1552  00002138  4be00000	jr	r31
 1553  0000213c  54000000	nop
 1554  00002140          	.endproc _max
 1555                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1556                      ;;;
 1557                      ;;; Most of the traps are called in files from libtraps.
 1560  00002140          	.align 2
 1561  00002140          	.proc _exit
 1562  00002140          	.global _exit
 1563  00002140          	_exit:
 1564  00002140  44000300	trap	#0x300
 1565  00002144  4be00000	jr	r31
 1566  00002148  54000000	nop
 1567  0000214c          	.endproc _exit
 1569                      ; for the benefit of gcc.
 1570  0000214c          	.proc ___main
 1571  0000214c          	.global ___main
 1572  0000214c          	___main:
 1573  0000214c  4be00000	jr	r31
 1574  00002150  54000000	nop
 1575  00002154          	.endproc ___main
 1576  00002154          	.text
 1577  00002154          	.global _etext
 1578  00002154          	_etext:
 1579  00002154          	.align 3
 1580  00002158          	.data
 1581  0000310c          	.global _edata
 1582  0000310c          	_edata:
