 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 207
    4                      ; Text size: 4564
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4c6f6361	.ascii "Local Var Location: %d\n\000"
   82  00003004  6c205661	
   82  00003008  72204c6f	
   82  0000300c  63617469	
   82  00003010  6f6e3a20	
   82  00003014  25640a00	
   83  00003018          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _stack
   86  000010d4          	.global _stack
   87  000010d4          	_stack:
   88                      ;  Function 'stack'; 8 bytes of locals, 3 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0020	subui	r29,r29,#32; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  8fc30000	lw	r3,(r30)
   97  000010f4  afc3fff4	sw	-12(r30),r3
   98  000010f8  23bdfff8	addi	r29,r29,#-8
   99  000010fc  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  100  00001100  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  101  00001104  afa40000	sw	(r29),r4
  102  00001108  23c2fff4	addi	r2,r30,#-12
  103  0000110c  afa20004	sw	4(r29),r2
  104  00001110  0c0001f8	jal	_Printf
  105  00001114  54000000	nop; not filled.
  106  00001118  23bd0008	addi	r29,r29,#8
  107  0000111c  3c04000f	lhi	r4,#15
  108  00001120  2484dfff	addui	r4,r4,#57343
  109  00001124  0044082c	sleu	r1,r2,r4
  110  00001128  14200020	bnez	r1,L16_LF0
  111  0000112c  54000000	nop; not filled.
  112  00001130  23bdfff8	addi	r29,r29,#-8
  113  00001134  afa30000	sw	(r29),r3
  114  00001138  0fffff98	jal	_stack
  115  0000113c  54000000	nop; not filled.
  116  00001140  23bd0008	addi	r29,r29,#8
  117  00001144  08000008	j	L15_LF0
  118  00001148  54000000	nop; not filled.
  119  0000114c          	L16_LF0:
  120  0000114c  20010000	addi	r1,r0,#0
  121  00001150          	L15_LF0:
  122  00001150  8fa20000	lw	r2,0(r29)
  123  00001154  8fa30004	lw	r3,4(r29)
  124  00001158  8fa40008	lw	r4,8(r29)
  125  0000115c  8fdffff8	lw	r31,-8(r30)
  126  00001160  001ee820	add	r29,r0,r30
  127  00001164  8fdefffc	lw	r30,-4(r30)
  128  00001168  4be00000	jr	r31
  129  0000116c  54000000	nop
  130  00001170          	.endproc _stack
  131  00001170          	.data
  132  00003018          	.align 2
  133  00003018          	LC1_LF0:
  134  00003018  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  134  0000301c  653a2025	
  134  00003020  73203c68	
  134  00003024  616e646c	
  134  00003028  655f746f	
  134  0000302c  5f70726f	
  134  00003030  63735f63	
  134  00003034  6f6d706c	
  134  00003038  65746564	
  134  0000303c  5f73656d	
  134  00003040  6170686f	
  134  00003044  72653e0a	
  134  00003048  00      	
  135  00003049          	.align 2
  136  0000304c          	LC2_LF0:
  137  0000304c  70617274	.ascii "part4 : testing user function call stack to grow larger than 1 page\n\000"
  137  00003050  34203a20	
  137  00003054  74657374	
  137  00003058  696e6720	
  137  0000305c  75736572	
  137  00003060  2066756e	
  137  00003064  6374696f	
  137  00003068  6e206361	
  137  0000306c  6c6c2073	
  137  00003070  7461636b	
  137  00003074  20746f20	
  137  00003078  67726f77	
  137  0000307c  206c6172	
  137  00003080  67657220	
  137  00003084  7468616e	
  137  00003088  20312070	
  137  0000308c  6167650a	
  137  00003090  00      	
  138  00003091          	.align 2
  139  00003094          	LC3_LF0:
  140  00003094  70617274	.ascii "part4 : Bad semaphore s_procs_completed !\n\000"
  140  00003098  34203a20	
  140  0000309c  42616420	
  140  000030a0  73656d61	
  140  000030a4  70686f72	
  140  000030a8  6520735f	
  140  000030ac  70726f63	
  140  000030b0  735f636f	
  140  000030b4  6d706c65	
  140  000030b8  74656420	
  140  000030bc  210a00  	
  141  000030bf          	.align 2
  142  000030c0          	LC4_LF0:
  143  000030c0  70617274	.ascii "part4 : done!\n\000"
  143  000030c4  34203a20	
  143  000030c8  646f6e65	
  143  000030cc  210a00  	
  144  000030cf          	.text
  145  00001170          	.align 2
  146  00001170          	.proc _main
  147  00001170          	.global _main
  148  00001170          	_main:
  149                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  150  00001170  afbefffc	sw	-4(r29),r30; push fp
  151  00001174  001df020	add	r30,r0,r29; fp = sp
  152  00001178  afbffff8	sw	-8(r29),r31; push ret addr
  153  0000117c  2fbd0010	subui	r29,r29,#16; alloc local storage
  154  00001180  8fc20000	lw	r2,(r30)
  155  00001184  8fc30004	lw	r3,4(r30)
  156  00001188  0c001040	jal	___main
  157  0000118c  54000000	nop; not filled.
  158  00001190  64410002	snei	r1,r2,#2
  159  00001194  10200028	beqz	r1,L24_LF0
  160  00001198  54000000	nop; not filled.
  161  0000119c  23bdfff8	addi	r29,r29,#-8
  162  000011a0  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  163  000011a4  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  164  000011a8  afa40000	sw	(r29),r4
  165  000011ac  0c00015c	jal	_Printf
  166  000011b0  54000000	nop; not filled.
  167  000011b4  0c00025c	jal	_Exit
  168  000011b8  54000000	nop; not filled.
  169  000011bc  23bd0008	addi	r29,r29,#8
  170  000011c0          	L24_LF0:
  171  000011c0  23bdfff0	addi	r29,r29,#-16
  172  000011c4  8c630004	lw	r3,4(r3)
  173  000011c8  afa30000	sw	(r29),r3
  174  000011cc  20040000	addi	r4,r0,#0
  175  000011d0  afa40004	sw	4(r29),r4
  176  000011d4  2004000a	addi	r4,r0,#10
  177  000011d8  afa40008	sw	8(r29),r4
  178  000011dc  0c000af0	jal	_dstrtol
  179  000011e0  54000000	nop; not filled.
  180  000011e4  00011820	add	r3,r0,r1
  181  000011e8  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  182  000011ec  2484304c	addui	r4,r4,(LC2_LF0)&0xffff
  183  000011f0  afa40000	sw	(r29),r4
  184  000011f4  0c000114	jal	_Printf
  185  000011f8  54000000	nop; not filled.
  186  000011fc  23bd0010	addi	r29,r29,#16
  187  00001200  20040064	addi	r4,r0,#100
  188  00001204  afc4fff4	sw	-12(r30),r4
  189  00001208  23bdfff8	addi	r29,r29,#-8
  190  0000120c  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  191  00001210  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  192  00001214  afa40000	sw	(r29),r4
  193  00001218  23c2fff4	addi	r2,r30,#-12
  194  0000121c  afa20004	sw	4(r29),r2
  195  00001220  0c0000e8	jal	_Printf
  196  00001224  54000000	nop; not filled.
  197  00001228  23bd0008	addi	r29,r29,#8
  198  0000122c  3c04000f	lhi	r4,#15
  199  00001230  2484dfff	addui	r4,r4,#57343
  200  00001234  0044082c	sleu	r1,r2,r4
  201  00001238  1420001c	bnez	r1,L25_LF0
  202  0000123c  54000000	nop; not filled.
  203  00001240  23bdfff8	addi	r29,r29,#-8
  204  00001244  20040064	addi	r4,r0,#100
  205  00001248  afa40000	sw	(r29),r4
  206  0000124c  0ffffe84	jal	_stack
  207  00001250  54000000	nop; not filled.
  208  00001254  23bd0008	addi	r29,r29,#8
  209  00001258          	L25_LF0:
  210  00001258  23bdfff8	addi	r29,r29,#-8
  211  0000125c  afa30000	sw	(r29),r3
  212  00001260  0c0000fc	jal	_sem_signal
  213  00001264  54000000	nop; not filled.
  214  00001268  23bd0008	addi	r29,r29,#8
  215  0000126c  64210001	snei	r1,r1,#1
  216  00001270  1020002c	beqz	r1,L27_LF0
  217  00001274  54000000	nop; not filled.
  218  00001278  23bdfff8	addi	r29,r29,#-8
  219  0000127c  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  220  00001280  24843094	addui	r4,r4,(LC3_LF0)&0xffff
  221  00001284  afa40000	sw	(r29),r4
  222  00001288  afa30004	sw	4(r29),r3
  223  0000128c  0c00007c	jal	_Printf
  224  00001290  54000000	nop; not filled.
  225  00001294  0c00017c	jal	_Exit
  226  00001298  54000000	nop; not filled.
  227  0000129c  23bd0008	addi	r29,r29,#8
  228  000012a0          	L27_LF0:
  229  000012a0  23bdfff8	addi	r29,r29,#-8
  230  000012a4  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  231  000012a8  248430c0	addui	r4,r4,(LC4_LF0)&0xffff
  232  000012ac  afa40000	sw	(r29),r4
  233  000012b0  0c000058	jal	_Printf
  234  000012b4  54000000	nop; not filled.
  235  000012b8  23bd0008	addi	r29,r29,#8
  236  000012bc  0c000f00	jal	_exit
  237  000012c0  54000000	nop
  238  000012c4          	.endproc _main
  239                      ;;;
  240                      ;;; Stub functions for DLX traps.
  241                      ;;;
  242                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  243                      ;;;
  244                      ;;; The traps such as Open and Close
  245                      ;;; (note the capital letters) are for use by user programs.  The traps
  246                      ;;; with names such as open and close (lower case) are for use by the OS.
  247                      ;;;
  250  000012c4          	.align 2
  252                      ;;; The following are the traps to be used by user-level programs
  253                      ;;;
  255  000012c4          	.align 2
  256  000012c4          	.proc _Open
  257  000012c4          	.global _Open
  258  000012c4          	_Open:
  259                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  260                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  261                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  262  000012c4  44000213	trap	#0x213
  263  000012c8  4be00000	jr	r31
  264  000012cc  54000000	nop
  265  000012d0          	.endproc _Open
  267  000012d0          	.proc _Close
  268  000012d0          	.global _Close
  269  000012d0          	_Close:
  270  000012d0  44000214	trap	#0x214
  271  000012d4  4be00000	jr	r31
  272  000012d8  54000000	nop
  273  000012dc          	.endproc _Close
  275  000012dc          	.proc _Read
  276  000012dc          	.global _Read
  277  000012dc          	_Read:
  278  000012dc  44000210	trap	#0x210
  279  000012e0  4be00000	jr	r31
  280  000012e4  54000000	nop
  281  000012e8          	.endproc _Read
  283  000012e8          	.proc _Write
  284  000012e8          	.global _Write
  285  000012e8          	_Write:
  286  000012e8  44000211	trap	#0x211
  287  000012ec  4be00000	jr	r31
  288  000012f0  54000000	nop
  289  000012f4          	.endproc _Write
  291  000012f4          	.proc _Lseek
  292  000012f4          	.global _Lseek
  293  000012f4          	_Lseek:
  294  000012f4  44000212	trap	#0x212
  295  000012f8  4be00000	jr	r31
  296  000012fc  54000000	nop
  297  00001300          	.endproc _Lseek
  299  00001300          	.proc _Putchar
  300  00001300          	.global _Putchar
  301  00001300          	_Putchar:
  302  00001300  44000280	trap	#0x280
  303  00001304  4be00000	jr	r31
  304  00001308  54000000	nop
  305  0000130c          	.endproc _Putchar
  307  0000130c          	.proc _Printf
  308  0000130c          	.global _Printf
  309  0000130c          	_Printf:
  310  0000130c  44000201	trap	#0x201
  311  00001310  4be00000	jr	r31
  312  00001314  54000000	nop
  313  00001318          	.endproc _Printf
  315  00001318          	.proc _getpid
  316  00001318          	.global _getpid
  317  00001318          	_getpid:
  318  00001318  44000431	trap	#0x431
  319  0000131c  4be00000	jr	r31
  320  00001320  54000000	nop
  321  00001324          	.endproc _getpid
  323  00001324          	.proc _process_create
  324  00001324          	.global _process_create
  325  00001324          	_process_create:
  326  00001324  44000432	trap	#0x432
  327  00001328  4be00000	jr	r31
  328  0000132c  54000000	nop
  329  00001330          	.endproc _process_create
  331  00001330          	.proc _shmget
  332  00001330          	.global _shmget
  333  00001330          	_shmget:
  334  00001330  44000440	trap	#0x440
  335  00001334  4be00000	jr	r31
  336  00001338  54000000	nop
  337  0000133c          	.endproc _shmget
  339  0000133c          	.proc _shmat
  340  0000133c          	.global _shmat
  341  0000133c          	_shmat:
  342  0000133c  44000441	trap	#0x441
  343  00001340  4be00000	jr	r31
  344  00001344  54000000	nop
  345  00001348          	.endproc _shmat
  347  00001348          	.proc _sem_create
  348  00001348          	.global _sem_create
  349  00001348          	_sem_create:
  350  00001348  44000450	trap	#0x450
  351  0000134c  4be00000	jr	r31
  352  00001350  54000000	nop
  353  00001354          	.endproc _sem_create
  355  00001354          	.proc _sem_wait
  356  00001354          	.global _sem_wait
  357  00001354          	_sem_wait:
  358  00001354  44000451	trap	#0x451
  359  00001358  4be00000	jr	r31
  360  0000135c  54000000	nop
  361  00001360          	.endproc _sem_wait
  363  00001360          	.proc _sem_signal
  364  00001360          	.global _sem_signal
  365  00001360          	_sem_signal:
  366  00001360  44000452	trap	#0x452
  367  00001364  4be00000	jr	r31
  368  00001368  54000000	nop
  369  0000136c          	.endproc _sem_signal
  371  0000136c          	.proc _lock_create
  372  0000136c          	.global _lock_create
  373  0000136c          	_lock_create:
  374  0000136c  44000453	trap	#0x453
  375  00001370  4be00000	jr	r31
  376  00001374  54000000	nop
  377  00001378          	.endproc _lock_create
  379  00001378          	.proc _lock_acquire
  380  00001378          	.global _lock_acquire
  381  00001378          	_lock_acquire:
  382  00001378  44000454	trap	#0x454
  383  0000137c  4be00000	jr	r31
  384  00001380  54000000	nop
  385  00001384          	.endproc _lock_acquire
  387  00001384          	.proc _lock_release
  388  00001384          	.global _lock_release
  389  00001384          	_lock_release:
  390  00001384  44000455	trap	#0x455
  391  00001388  4be00000	jr	r31
  392  0000138c  54000000	nop
  393  00001390          	.endproc _lock_release
  395  00001390          	.proc _cond_create
  396  00001390          	.global _cond_create
  397  00001390          	_cond_create:
  398  00001390  44000456	trap	#0x456
  399  00001394  4be00000	jr	r31
  400  00001398  54000000	nop
  401  0000139c          	.endproc _cond_create
  403  0000139c          	.proc _cond_wait
  404  0000139c          	.global _cond_wait
  405  0000139c          	_cond_wait:
  406  0000139c  44000457	trap	#0x457
  407  000013a0  4be00000	jr	r31
  408  000013a4  54000000	nop
  409  000013a8          	.endproc _cond_wait
  411  000013a8          	.proc _cond_signal
  412  000013a8          	.global _cond_signal
  413  000013a8          	_cond_signal:
  414  000013a8  44000458	trap	#0x458
  415  000013ac  4be00000	jr	r31
  416  000013b0  54000000	nop
  417  000013b4          	.endproc _cond_signal
  419  000013b4          	.proc _cond_broadcast
  420  000013b4          	.global _cond_broadcast
  421  000013b4          	_cond_broadcast:
  422  000013b4  44000459	trap	#0x459
  423  000013b8  4be00000	jr	r31
  424  000013bc  54000000	nop
  425  000013c0          	.endproc _cond_broadcast
  427  000013c0          	.proc _mbox_create
  428  000013c0          	.global _mbox_create
  429  000013c0          	_mbox_create:
  430  000013c0  44000460	trap	#0x460
  431  000013c4  4be00000	jr	r31
  432  000013c8  54000000	nop
  433  000013cc          	.endproc _mbox_create
  435  000013cc          	.proc _mbox_open
  436  000013cc          	.global _mbox_open
  437  000013cc          	_mbox_open:
  438  000013cc  44000461	trap	#0x461
  439  000013d0  4be00000	jr	r31
  440  000013d4  54000000	nop
  441  000013d8          	.endproc _mbox_open
  443  000013d8          	.proc _mbox_close
  444  000013d8          	.global _mbox_close
  445  000013d8          	_mbox_close:
  446  000013d8  44000462	trap	#0x462
  447  000013dc  4be00000	jr	r31
  448  000013e0  54000000	nop
  449  000013e4          	.endproc _mbox_close
  451  000013e4          	.proc _mbox_send
  452  000013e4          	.global _mbox_send
  453  000013e4          	_mbox_send:
  454  000013e4  44000463	trap	#0x463
  455  000013e8  4be00000	jr	r31
  456  000013ec  54000000	nop
  457  000013f0          	.endproc _mbox_send
  459  000013f0          	.proc _mbox_recv
  460  000013f0          	.global _mbox_recv
  461  000013f0          	_mbox_recv:
  462  000013f0  44000464	trap	#0x464
  463  000013f4  4be00000	jr	r31
  464  000013f8  54000000	nop
  465  000013fc          	.endproc _mbox_recv
  467  000013fc          	.proc _sleep
  468  000013fc          	.global _sleep
  469  000013fc          	_sleep:
  470  000013fc  44000465	trap	#0x465
  471  00001400  4be00000	jr	r31
  472  00001404  54000000	nop
  473  00001408          	.endproc _sleep
  475  00001408          	.proc _yield
  476  00001408          	.global _yield
  477  00001408          	_yield:
  478  00001408  44000466	trap	#0x466
  479  0000140c  4be00000	jr	r31
  480  00001410  54000000	nop
  481  00001414          	.endproc _yield
  484  00001414          	.proc _Exit
  485  00001414          	.global _Exit
  486  00001414          	_Exit:
  487  00001414  44000500	trap	#0x500
  488  00001418  4be00000	jr	r31
  489  0000141c  54000000	nop
  490  00001420          	.endproc _Exit
  493  00001420          	.proc _malloc
  494  00001420          	.global _malloc
  495  00001420          	_malloc:
  496  00001420  44000467	trap	#0x467
  497  00001424  4be00000	jr	r31
  498  00001428          	.endproc _malloc
  501  00001428          	.proc _mfree
  502  00001428          	.global _mfree
  503  00001428          	_mfree:
  504  00001428  44000468	trap	#0x468
  505  0000142c  4be00000	jr	r31
  506  00001430          	.endproc _mfree
  507                      ; Compiled by GCC
  509  00001430          	.align 2
  510  00001430          	.proc _isspace
  511  00001430          	.global _isspace
  512  00001430          	_isspace:
  513                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  514  00001430  afbefffc	sw	-4(r29),r30; push fp
  515  00001434  001df020	add	r30,r0,r29; fp = sp
  516  00001438  afbffff8	sw	-8(r29),r31; push ret addr
  517  0000143c  2fbd0018	subui	r29,r29,#24; alloc local storage
  518  00001440  afa20000	sw	0(r29),r2
  519  00001444  afa30004	sw	4(r29),r3
  520  00001448  afa40008	sw	8(r29),r4
  521  0000144c  83c20003	lb	r2,3(r30)
  522  00001450  20010000	addi	r1,r0,#0
  523  00001454  304300ff	andi	r3,r2,#0x00ff
  524  00001458  60640020	seqi	r4,r3,#32
  525  0000145c  1480002c	bnez	r4,L3_LF2
  526  00001460  54000000	nop; delay slot nop
  527  00001464  304300ff	andi	r3,r2,#0x00ff
  528  00001468  60640009	seqi	r4,r3,#9
  529  0000146c  1480001c	bnez	r4,L3_LF2
  530  00001470  54000000	nop; delay slot nop
  531  00001474  304300ff	andi	r3,r2,#0x00ff
  532  00001478  6064000a	seqi	r4,r3,#10
  533  0000147c  1480000c	bnez	r4,L3_LF2
  534  00001480  54000000	nop; delay slot nop
  535  00001484  08000008	j	L2_LF2
  536  00001488  54000000	nop; delay slot nop
  537  0000148c          	L3_LF2:
  538  0000148c  20010001	addi	r1,r0,#1
  539  00001490          	L2_LF2:
  540  00001490  08000004	j	L1_LF2
  541  00001494  54000000	nop; delay slot nop
  542  00001498          	L1_LF2:
  543  00001498  8fa20000	lw	r2,0(r29)
  544  0000149c  8fa30004	lw	r3,4(r29)
  545  000014a0  8fa40008	lw	r4,8(r29)
  546  000014a4  8fdffff8	lw	r31,-8(r30)
  547  000014a8  001ee820	add	r29,r0,r30
  548  000014ac  8fdefffc	lw	r30,-4(r30)
  549  000014b0  4be00000	jr	r31
  550  000014b4  54000000	nop
  551  000014b8          	.endproc _isspace
  552  000014b8          	.align 2
  553  000014b8          	.proc _isxdigit
  554  000014b8          	.global _isxdigit
  555  000014b8          	_isxdigit:
  556                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  557  000014b8  afbefffc	sw	-4(r29),r30; push fp
  558  000014bc  001df020	add	r30,r0,r29; fp = sp
  559  000014c0  afbffff8	sw	-8(r29),r31; push ret addr
  560  000014c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  561  000014c8  afa20000	sw	0(r29),r2
  562  000014cc  afa30004	sw	4(r29),r3
  563  000014d0  afa40008	sw	8(r29),r4
  564  000014d4  83c20003	lb	r2,3(r30)
  565  000014d8  20010000	addi	r1,r0,#0
  566  000014dc  304300ff	andi	r3,r2,#0x00ff
  567  000014e0  6c64002f	sgtui	r4,r3,#47
  568  000014e4  1080001c	beqz	r4,L7_LF2
  569  000014e8  54000000	nop; delay slot nop
  570  000014ec  304300ff	andi	r3,r2,#0x00ff
  571  000014f0  70640039	sleui	r4,r3,#57
  572  000014f4  1480005c	bnez	r4,L6_LF2
  573  000014f8  54000000	nop; delay slot nop
  574  000014fc  08000004	j	L7_LF2
  575  00001500  54000000	nop; delay slot nop
  576  00001504          	L7_LF2:
  577  00001504  304300ff	andi	r3,r2,#0x00ff
  578  00001508  6c640060	sgtui	r4,r3,#96
  579  0000150c  1080001c	beqz	r4,L8_LF2
  580  00001510  54000000	nop; delay slot nop
  581  00001514  304300ff	andi	r3,r2,#0x00ff
  582  00001518  70640066	sleui	r4,r3,#102
  583  0000151c  14800034	bnez	r4,L6_LF2
  584  00001520  54000000	nop; delay slot nop
  585  00001524  08000004	j	L8_LF2
  586  00001528  54000000	nop; delay slot nop
  587  0000152c          	L8_LF2:
  588  0000152c  304300ff	andi	r3,r2,#0x00ff
  589  00001530  6c640040	sgtui	r4,r3,#64
  590  00001534  10800020	beqz	r4,L5_LF2
  591  00001538  54000000	nop; delay slot nop
  592  0000153c  304300ff	andi	r3,r2,#0x00ff
  593  00001540  70640041	sleui	r4,r3,#65
  594  00001544  1480000c	bnez	r4,L6_LF2
  595  00001548  54000000	nop; delay slot nop
  596  0000154c  08000008	j	L5_LF2
  597  00001550  54000000	nop; delay slot nop
  598  00001554          	L6_LF2:
  599  00001554  20010001	addi	r1,r0,#1
  600  00001558          	L5_LF2:
  601  00001558  08000004	j	L4_LF2
  602  0000155c  54000000	nop; delay slot nop
  603  00001560          	L4_LF2:
  604  00001560  8fa20000	lw	r2,0(r29)
  605  00001564  8fa30004	lw	r3,4(r29)
  606  00001568  8fa40008	lw	r4,8(r29)
  607  0000156c  8fdffff8	lw	r31,-8(r30)
  608  00001570  001ee820	add	r29,r0,r30
  609  00001574  8fdefffc	lw	r30,-4(r30)
  610  00001578  4be00000	jr	r31
  611  0000157c  54000000	nop
  612  00001580          	.endproc _isxdigit
  613  00001580          	.align 2
  614  00001580          	.proc _dstrcpy
  615  00001580          	.global _dstrcpy
  616  00001580          	_dstrcpy:
  617                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  618  00001580  afbefffc	sw	-4(r29),r30; push fp
  619  00001584  001df020	add	r30,r0,r29; fp = sp
  620  00001588  afbffff8	sw	-8(r29),r31; push ret addr
  621  0000158c  2fbd0018	subui	r29,r29,#24; alloc local storage
  622  00001590  afa20000	sw	0(r29),r2
  623  00001594  afa30004	sw	4(r29),r3
  624  00001598  8fc10000	lw	r1,(r30)
  625  0000159c  afc1fff4	sw	-12(r30),r1
  626  000015a0          	L10_LF2:
  627  000015a0  8fc10000	lw	r1,(r30)
  628  000015a4  20220001	addi	r2,r1,#1
  629  000015a8  afc20000	sw	(r30),r2
  630  000015ac  8fc20004	lw	r2,4(r30)
  631  000015b0  20430001	addi	r3,r2,#1
  632  000015b4  afc30004	sw	4(r30),r3
  633  000015b8  80420000	lb	r2,(r2)
  634  000015bc  a0220000	sb	(r1),r2
  635  000015c0  a3c2fff3	sb	-13(r30),r2
  636  000015c4          	L12_LF2:
  637  000015c4  93c1fff3	lbu	r1,-13(r30)
  638  000015c8  64220000	snei	r2,r1,#0
  639  000015cc  1440000c	bnez	r2,L13_LF2
  640  000015d0  54000000	nop; delay slot nop
  641  000015d4  0800000c	j	L11_LF2
  642  000015d8  54000000	nop; delay slot nop
  643  000015dc          	L13_LF2:
  644  000015dc  0bffffc0	j	L10_LF2
  645  000015e0  54000000	nop; delay slot nop
  646  000015e4          	L11_LF2:
  647  000015e4  8fc1fff4	lw	r1,-12(r30)
  648  000015e8  08000004	j	L9_LF2
  649  000015ec  54000000	nop; delay slot nop
  650  000015f0          	L9_LF2:
  651  000015f0  8fa20000	lw	r2,0(r29)
  652  000015f4  8fa30004	lw	r3,4(r29)
  653  000015f8  8fdffff8	lw	r31,-8(r30)
  654  000015fc  001ee820	add	r29,r0,r30
  655  00001600  8fdefffc	lw	r30,-4(r30)
  656  00001604  4be00000	jr	r31
  657  00001608  54000000	nop
  658  0000160c          	.endproc _dstrcpy
  659  0000160c          	.align 2
  660  0000160c          	.proc _dstrncpy
  661  0000160c          	.global _dstrncpy
  662  0000160c          	_dstrncpy:
  663                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  664  0000160c  afbefffc	sw	-4(r29),r30; push fp
  665  00001610  001df020	add	r30,r0,r29; fp = sp
  666  00001614  afbffff8	sw	-8(r29),r31; push ret addr
  667  00001618  2fbd0018	subui	r29,r29,#24; alloc local storage
  668  0000161c  afa20000	sw	0(r29),r2
  669  00001620  afa30004	sw	4(r29),r3
  670  00001624  8fc10000	lw	r1,(r30)
  671  00001628  afc1fff4	sw	-12(r30),r1
  672  0000162c          	L15_LF2:
  673  0000162c  8fc10008	lw	r1,8(r30)
  674  00001630  2022ffff	addi	r2,r1,#-1
  675  00001634  afc20008	sw	8(r30),r2
  676  00001638  70210000	slei	r1,r1,#0
  677  0000163c  1020000c	beqz	r1,L18_LF2
  678  00001640  54000000	nop; delay slot nop
  679  00001644  08000048	j	L16_LF2
  680  00001648  54000000	nop; delay slot nop
  681  0000164c          	L18_LF2:
  682  0000164c  8fc10000	lw	r1,(r30)
  683  00001650  20220001	addi	r2,r1,#1
  684  00001654  afc20000	sw	(r30),r2
  685  00001658  8fc20004	lw	r2,4(r30)
  686  0000165c  20430001	addi	r3,r2,#1
  687  00001660  afc30004	sw	4(r30),r3
  688  00001664  80420000	lb	r2,(r2)
  689  00001668  a0220000	sb	(r1),r2
  690  0000166c  a3c2fff3	sb	-13(r30),r2
  691  00001670          	L17_LF2:
  692  00001670  93c1fff3	lbu	r1,-13(r30)
  693  00001674  64220000	snei	r2,r1,#0
  694  00001678  1440000c	bnez	r2,L19_LF2
  695  0000167c  54000000	nop; delay slot nop
  696  00001680  0800000c	j	L16_LF2
  697  00001684  54000000	nop; delay slot nop
  698  00001688          	L19_LF2:
  699  00001688  0bffffa0	j	L15_LF2
  700  0000168c  54000000	nop; delay slot nop
  701  00001690          	L16_LF2:
  702  00001690  8fc1fff4	lw	r1,-12(r30)
  703  00001694  08000004	j	L14_LF2
  704  00001698  54000000	nop; delay slot nop
  705  0000169c          	L14_LF2:
  706  0000169c  8fa20000	lw	r2,0(r29)
  707  000016a0  8fa30004	lw	r3,4(r29)
  708  000016a4  8fdffff8	lw	r31,-8(r30)
  709  000016a8  001ee820	add	r29,r0,r30
  710  000016ac  8fdefffc	lw	r30,-4(r30)
  711  000016b0  4be00000	jr	r31
  712  000016b4  54000000	nop
  713  000016b8          	.endproc _dstrncpy
  714  000016b8          	.align 2
  715  000016b8          	.proc _dstrcat
  716  000016b8          	.global _dstrcat
  717  000016b8          	_dstrcat:
  718                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  719  000016b8  afbefffc	sw	-4(r29),r30; push fp
  720  000016bc  001df020	add	r30,r0,r29; fp = sp
  721  000016c0  afbffff8	sw	-8(r29),r31; push ret addr
  722  000016c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  723  000016c8  afa20000	sw	0(r29),r2
  724  000016cc  8fc10000	lw	r1,(r30)
  725  000016d0  afc1fff4	sw	-12(r30),r1
  726  000016d4          	L21_LF2:
  727  000016d4  8fc10000	lw	r1,(r30)
  728  000016d8  90220000	lbu	r2,(r1)
  729  000016dc  64410000	snei	r1,r2,#0
  730  000016e0  1420000c	bnez	r1,L23_LF2
  731  000016e4  54000000	nop; delay slot nop
  732  000016e8  0800001c	j	L22_LF2
  733  000016ec  54000000	nop; delay slot nop
  734  000016f0          	L23_LF2:
  735  000016f0  8fc20000	lw	r2,(r30)
  736  000016f4  20410001	addi	r1,r2,#1
  737  000016f8  00011020	add	r2,r0,r1
  738  000016fc  afc20000	sw	(r30),r2
  739  00001700  0bffffd0	j	L21_LF2
  740  00001704  54000000	nop; delay slot nop
  741  00001708          	L22_LF2:
  742  00001708  23bdfff8	addi	r29,r29,#-8
  743  0000170c  001d0820	add	r1,r0,r29
  744  00001710  8fc20000	lw	r2,(r30)
  745  00001714  ac220000	sw	(r1),r2
  746  00001718  8fc20004	lw	r2,4(r30)
  747  0000171c  ac220004	sw	4(r1),r2
  748  00001720  0ffffe5c	jal	_dstrcpy
  749  00001724  54000000	nop; delay slot nop
  750  00001728  23bd0008	addi	r29,r29,#8
  751  0000172c  8fc1fff4	lw	r1,-12(r30)
  752  00001730  08000004	j	L20_LF2
  753  00001734  54000000	nop; delay slot nop
  754  00001738          	L20_LF2:
  755  00001738  8fa20000	lw	r2,0(r29)
  756  0000173c  8fdffff8	lw	r31,-8(r30)
  757  00001740  001ee820	add	r29,r0,r30
  758  00001744  8fdefffc	lw	r30,-4(r30)
  759  00001748  4be00000	jr	r31
  760  0000174c  54000000	nop
  761  00001750          	.endproc _dstrcat
  762  00001750          	.align 2
  763  00001750          	.proc _dstrncmp
  764  00001750          	.global _dstrncmp
  765  00001750          	_dstrncmp:
  766                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  767  00001750  afbefffc	sw	-4(r29),r30; push fp
  768  00001754  001df020	add	r30,r0,r29; fp = sp
  769  00001758  afbffff8	sw	-8(r29),r31; push ret addr
  770  0000175c  2fbd0018	subui	r29,r29,#24; alloc local storage
  771  00001760  afa20000	sw	0(r29),r2
  772  00001764  afa30004	sw	4(r29),r3
  773  00001768  54000000	nop
  774  0000176c  20010000	addi	r1,r0,#0
  775  00001770  afc1fff4	sw	-12(r30),r1
  776  00001774          	L25_LF2:
  777  00001774  8fc1fff4	lw	r1,-12(r30)
  778  00001778  8fc20008	lw	r2,8(r30)
  779  0000177c  0022082a	slt	r1,r1,r2
  780  00001780  1420000c	bnez	r1,L28_LF2
  781  00001784  54000000	nop; delay slot nop
  782  00001788  08000088	j	L26_LF2
  783  0000178c  54000000	nop; delay slot nop
  784  00001790          	L28_LF2:
  785  00001790  8fc10004	lw	r1,4(r30)
  786  00001794  90220000	lbu	r2,(r1)
  787  00001798  64410000	snei	r1,r2,#0
  788  0000179c  14200018	bnez	r1,L29_LF2
  789  000017a0  54000000	nop; delay slot nop
  790  000017a4  20010000	addi	r1,r0,#0
  791  000017a8  080000d8	j	L24_LF2
  792  000017ac  54000000	nop; delay slot nop
  793  000017b0  08000028	j	L30_LF2
  794  000017b4  54000000	nop; delay slot nop
  795  000017b8          	L29_LF2:
  796  000017b8  8fc10000	lw	r1,(r30)
  797  000017bc  8fc20004	lw	r2,4(r30)
  798  000017c0  90210000	lbu	r1,(r1)
  799  000017c4  90420000	lbu	r2,(r2)
  800  000017c8  00220829	sne	r1,r1,r2
  801  000017cc  1020000c	beqz	r1,L30_LF2
  802  000017d0  54000000	nop; delay slot nop
  803  000017d4  0800003c	j	L26_LF2
  804  000017d8  54000000	nop; delay slot nop
  805  000017dc          	L31_LF2:
  806  000017dc          	L30_LF2:
  807  000017dc  8fc20000	lw	r2,(r30)
  808  000017e0  20410001	addi	r1,r2,#1
  809  000017e4  00011020	add	r2,r0,r1
  810  000017e8  afc20000	sw	(r30),r2
  811  000017ec  8fc20004	lw	r2,4(r30)
  812  000017f0  20410001	addi	r1,r2,#1
  813  000017f4  00011020	add	r2,r0,r1
  814  000017f8  afc20004	sw	4(r30),r2
  815  000017fc          	L27_LF2:
  816  000017fc  8fc2fff4	lw	r2,-12(r30)
  817  00001800  20410001	addi	r1,r2,#1
  818  00001804  00011020	add	r2,r0,r1
  819  00001808  afc2fff4	sw	-12(r30),r2
  820  0000180c  0bffff64	j	L25_LF2
  821  00001810  54000000	nop; delay slot nop
  822  00001814          	L26_LF2:
  823  00001814  8fc1fff4	lw	r1,-12(r30)
  824  00001818  8fc20008	lw	r2,8(r30)
  825  0000181c  00220828	seq	r1,r1,r2
  826  00001820  10200018	beqz	r1,L32_LF2
  827  00001824  54000000	nop; delay slot nop
  828  00001828  20010000	addi	r1,r0,#0
  829  0000182c  08000054	j	L24_LF2
  830  00001830  54000000	nop; delay slot nop
  831  00001834  0800004c	j	L33_LF2
  832  00001838  54000000	nop; delay slot nop
  833  0000183c          	L32_LF2:
  834  0000183c  8fc20000	lw	r2,(r30)
  835  00001840  90410000	lbu	r1,(r2)
  836  00001844  8fc20004	lw	r2,4(r30)
  837  00001848  90430000	lbu	r3,(r2)
  838  0000184c  00230822	sub	r1,r1,r3
  839  00001850  74220000	sgei	r2,r1,#0
  840  00001854  10400020	beqz	r2,L34_LF2
  841  00001858  54000000	nop; delay slot nop
  842  0000185c  8fc10000	lw	r1,(r30)
  843  00001860  8fc20004	lw	r2,4(r30)
  844  00001864  90210000	lbu	r1,(r1)
  845  00001868  90420000	lbu	r2,(r2)
  846  0000186c  00220829	sne	r1,r1,r2
  847  00001870  08000008	j	L35_LF2
  848  00001874  54000000	nop; delay slot nop
  849  00001878          	L34_LF2:
  850  00001878  2001ffff	addi	r1,r0,#-1
  851  0000187c          	L35_LF2:
  852  0000187c  08000004	j	L24_LF2
  853  00001880  54000000	nop; delay slot nop
  854  00001884          	L33_LF2:
  855  00001884          	L24_LF2:
  856  00001884  8fa20000	lw	r2,0(r29)
  857  00001888  8fa30004	lw	r3,4(r29)
  858  0000188c  8fdffff8	lw	r31,-8(r30)
  859  00001890  001ee820	add	r29,r0,r30
  860  00001894  8fdefffc	lw	r30,-4(r30)
  861  00001898  4be00000	jr	r31
  862  0000189c  54000000	nop
  863  000018a0          	.endproc _dstrncmp
  864  000018a0          	.align 2
  865  000018a0          	.proc _dstrlen
  866  000018a0          	.global _dstrlen
  867  000018a0          	_dstrlen:
  868                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  869  000018a0  afbefffc	sw	-4(r29),r30; push fp
  870  000018a4  001df020	add	r30,r0,r29; fp = sp
  871  000018a8  afbffff8	sw	-8(r29),r31; push ret addr
  872  000018ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  873  000018b0  afa20000	sw	0(r29),r2
  874  000018b4  20010000	addi	r1,r0,#0
  875  000018b8  afc1fff4	sw	-12(r30),r1
  876  000018bc          	L37_LF2:
  877  000018bc  8fc10000	lw	r1,(r30)
  878  000018c0  20220001	addi	r2,r1,#1
  879  000018c4  afc20000	sw	(r30),r2
  880  000018c8  90210000	lbu	r1,(r1)
  881  000018cc  64220000	snei	r2,r1,#0
  882  000018d0  1440000c	bnez	r2,L39_LF2
  883  000018d4  54000000	nop; delay slot nop
  884  000018d8  0800001c	j	L38_LF2
  885  000018dc  54000000	nop; delay slot nop
  886  000018e0          	L39_LF2:
  887  000018e0  8fc2fff4	lw	r2,-12(r30)
  888  000018e4  20410001	addi	r1,r2,#1
  889  000018e8  00011020	add	r2,r0,r1
  890  000018ec  afc2fff4	sw	-12(r30),r2
  891  000018f0  0bffffc8	j	L37_LF2
  892  000018f4  54000000	nop; delay slot nop
  893  000018f8          	L38_LF2:
  894  000018f8  8fc1fff4	lw	r1,-12(r30)
  895  000018fc  08000004	j	L36_LF2
  896  00001900  54000000	nop; delay slot nop
  897  00001904          	L36_LF2:
  898  00001904  8fa20000	lw	r2,0(r29)
  899  00001908  8fdffff8	lw	r31,-8(r30)
  900  0000190c  001ee820	add	r29,r0,r30
  901  00001910  8fdefffc	lw	r30,-4(r30)
  902  00001914  4be00000	jr	r31
  903  00001918  54000000	nop
  904  0000191c          	.endproc _dstrlen
  905  0000191c          	.align 2
  906  0000191c          	.proc _dstrstr
  907  0000191c          	.global _dstrstr
  908  0000191c          	_dstrstr:
  909                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  910  0000191c  afbefffc	sw	-4(r29),r30; push fp
  911  00001920  001df020	add	r30,r0,r29; fp = sp
  912  00001924  afbffff8	sw	-8(r29),r31; push ret addr
  913  00001928  2fbd0018	subui	r29,r29,#24; alloc local storage
  914  0000192c  afa20000	sw	0(r29),r2
  915  00001930  23bdfff8	addi	r29,r29,#-8
  916  00001934  001d0820	add	r1,r0,r29
  917  00001938  8fc20004	lw	r2,4(r30)
  918  0000193c  ac220000	sw	(r1),r2
  919  00001940  0fffff5c	jal	_dstrlen
  920  00001944  54000000	nop; delay slot nop
  921  00001948  23bd0008	addi	r29,r29,#8
  922  0000194c  afc1fff4	sw	-12(r30),r1
  923  00001950          	L41_LF2:
  924  00001950  8fc10000	lw	r1,(r30)
  925  00001954  90220000	lbu	r2,(r1)
  926  00001958  64410000	snei	r1,r2,#0
  927  0000195c  1420000c	bnez	r1,L43_LF2
  928  00001960  54000000	nop; delay slot nop
  929  00001964  08000060	j	L42_LF2
  930  00001968  54000000	nop; delay slot nop
  931  0000196c          	L43_LF2:
  932  0000196c  23bdfff0	addi	r29,r29,#-16
  933  00001970  001d0820	add	r1,r0,r29
  934  00001974  8fc20000	lw	r2,(r30)
  935  00001978  ac220000	sw	(r1),r2
  936  0000197c  8fc20004	lw	r2,4(r30)
  937  00001980  ac220004	sw	4(r1),r2
  938  00001984  8fc2fff4	lw	r2,-12(r30)
  939  00001988  ac220008	sw	8(r1),r2
  940  0000198c  0ffffdc0	jal	_dstrncmp
  941  00001990  54000000	nop; delay slot nop
  942  00001994  23bd0010	addi	r29,r29,#16
  943  00001998  64220000	snei	r2,r1,#0
  944  0000199c  14400010	bnez	r2,L44_LF2
  945  000019a0  54000000	nop; delay slot nop
  946  000019a4  8fc10000	lw	r1,(r30)
  947  000019a8  08000028	j	L40_LF2
  948  000019ac  54000000	nop; delay slot nop
  949  000019b0          	L44_LF2:
  950  000019b0  8fc20000	lw	r2,(r30)
  951  000019b4  20410001	addi	r1,r2,#1
  952  000019b8  00011020	add	r2,r0,r1
  953  000019bc  afc20000	sw	(r30),r2
  954  000019c0  0bffff8c	j	L41_LF2
  955  000019c4  54000000	nop; delay slot nop
  956  000019c8          	L42_LF2:
  957  000019c8  20010000	addi	r1,r0,#0
  958  000019cc  08000004	j	L40_LF2
  959  000019d0  54000000	nop; delay slot nop
  960  000019d4          	L40_LF2:
  961  000019d4  8fa20000	lw	r2,0(r29)
  962  000019d8  8fdffff8	lw	r31,-8(r30)
  963  000019dc  001ee820	add	r29,r0,r30
  964  000019e0  8fdefffc	lw	r30,-4(r30)
  965  000019e4  4be00000	jr	r31
  966  000019e8  54000000	nop
  967  000019ec          	.endproc _dstrstr
  968  000019ec          	.align 2
  969  000019ec          	.proc _dmindex
  970  000019ec          	.global _dmindex
  971  000019ec          	_dmindex:
  972                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  973  000019ec  afbefffc	sw	-4(r29),r30; push fp
  974  000019f0  001df020	add	r30,r0,r29; fp = sp
  975  000019f4  afbffff8	sw	-8(r29),r31; push ret addr
  976  000019f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  977  000019fc  afa20000	sw	0(r29),r2
  978  00001a00  54000000	nop
  979  00001a04          	L46_LF2:
  980  00001a04  8fc10000	lw	r1,(r30)
  981  00001a08  90220000	lbu	r2,(r1)
  982  00001a0c  64410000	snei	r1,r2,#0
  983  00001a10  1420000c	bnez	r1,L48_LF2
  984  00001a14  54000000	nop; delay slot nop
  985  00001a18  08000070	j	L47_LF2
  986  00001a1c  54000000	nop; delay slot nop
  987  00001a20          	L48_LF2:
  988  00001a20  8fc10004	lw	r1,4(r30)
  989  00001a24  afc1fff4	sw	-12(r30),r1
  990  00001a28          	L49_LF2:
  991  00001a28  8fc1fff4	lw	r1,-12(r30)
  992  00001a2c  90220000	lbu	r2,(r1)
  993  00001a30  64410000	snei	r1,r2,#0
  994  00001a34  1420000c	bnez	r1,L52_LF2
  995  00001a38  54000000	nop; delay slot nop
  996  00001a3c  08000044	j	L50_LF2
  997  00001a40  54000000	nop; delay slot nop
  998  00001a44          	L52_LF2:
  999  00001a44  8fc10000	lw	r1,(r30)
 1000  00001a48  8fc2fff4	lw	r2,-12(r30)
 1001  00001a4c  90210000	lbu	r1,(r1)
 1002  00001a50  90420000	lbu	r2,(r2)
 1003  00001a54  00220828	seq	r1,r1,r2
 1004  00001a58  10200010	beqz	r1,L51_LF2
 1005  00001a5c  54000000	nop; delay slot nop
 1006  00001a60  8fc10000	lw	r1,(r30)
 1007  00001a64  08000030	j	L45_LF2
 1008  00001a68  54000000	nop; delay slot nop
 1009  00001a6c          	L53_LF2:
 1010  00001a6c          	L51_LF2:
 1011  00001a6c  8fc2fff4	lw	r2,-12(r30)
 1012  00001a70  20410001	addi	r1,r2,#1
 1013  00001a74  00011020	add	r2,r0,r1
 1014  00001a78  afc2fff4	sw	-12(r30),r2
 1015  00001a7c  0bffffa8	j	L49_LF2
 1016  00001a80  54000000	nop; delay slot nop
 1017  00001a84          	L50_LF2:
 1018  00001a84  0bffff7c	j	L46_LF2
 1019  00001a88  54000000	nop; delay slot nop
 1020  00001a8c          	L47_LF2:
 1021  00001a8c  20010000	addi	r1,r0,#0
 1022  00001a90  08000004	j	L45_LF2
 1023  00001a94  54000000	nop; delay slot nop
 1024  00001a98          	L45_LF2:
 1025  00001a98  8fa20000	lw	r2,0(r29)
 1026  00001a9c  8fdffff8	lw	r31,-8(r30)
 1027  00001aa0  001ee820	add	r29,r0,r30
 1028  00001aa4  8fdefffc	lw	r30,-4(r30)
 1029  00001aa8  4be00000	jr	r31
 1030  00001aac  54000000	nop
 1031  00001ab0          	.endproc _dmindex
 1032  00001ab0          	.align 2
 1033  00001ab0          	.proc _dindex
 1034  00001ab0          	.global _dindex
 1035  00001ab0          	_dindex:
 1036                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1037  00001ab0  afbefffc	sw	-4(r29),r30; push fp
 1038  00001ab4  001df020	add	r30,r0,r29; fp = sp
 1039  00001ab8  afbffff8	sw	-8(r29),r31; push ret addr
 1040  00001abc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1041  00001ac0  afa20000	sw	0(r29),r2
 1042  00001ac4  54000000	nop
 1043  00001ac8          	L55_LF2:
 1044  00001ac8  8fc10000	lw	r1,(r30)
 1045  00001acc  90220000	lbu	r2,(r1)
 1046  00001ad0  64410000	snei	r1,r2,#0
 1047  00001ad4  1420000c	bnez	r1,L57_LF2
 1048  00001ad8  54000000	nop; delay slot nop
 1049  00001adc  08000040	j	L56_LF2
 1050  00001ae0  54000000	nop; delay slot nop
 1051  00001ae4          	L57_LF2:
 1052  00001ae4  8fc10000	lw	r1,(r30)
 1053  00001ae8  90220000	lbu	r2,(r1)
 1054  00001aec  8fc10004	lw	r1,4(r30)
 1055  00001af0  00411028	seq	r2,r2,r1
 1056  00001af4  10400010	beqz	r2,L58_LF2
 1057  00001af8  54000000	nop; delay slot nop
 1058  00001afc  8fc10000	lw	r1,(r30)
 1059  00001b00  08000028	j	L54_LF2
 1060  00001b04  54000000	nop; delay slot nop
 1061  00001b08          	L58_LF2:
 1062  00001b08  8fc20000	lw	r2,(r30)
 1063  00001b0c  20410001	addi	r1,r2,#1
 1064  00001b10  00011020	add	r2,r0,r1
 1065  00001b14  afc20000	sw	(r30),r2
 1066  00001b18  0bffffac	j	L55_LF2
 1067  00001b1c  54000000	nop; delay slot nop
 1068  00001b20          	L56_LF2:
 1069  00001b20  20010000	addi	r1,r0,#0
 1070  00001b24  08000004	j	L54_LF2
 1071  00001b28  54000000	nop; delay slot nop
 1072  00001b2c          	L54_LF2:
 1073  00001b2c  8fa20000	lw	r2,0(r29)
 1074  00001b30  8fdffff8	lw	r31,-8(r30)
 1075  00001b34  001ee820	add	r29,r0,r30
 1076  00001b38  8fdefffc	lw	r30,-4(r30)
 1077  00001b3c  4be00000	jr	r31
 1078  00001b40  54000000	nop
 1079  00001b44          	.endproc _dindex
 1080  00001b44          	.align 2
 1081  00001b44          	.proc _ditoa
 1082  00001b44          	.global _ditoa
 1083  00001b44          	_ditoa:
 1084                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1085  00001b44  afbefffc	sw	-4(r29),r30; push fp
 1086  00001b48  001df020	add	r30,r0,r29; fp = sp
 1087  00001b4c  afbffff8	sw	-8(r29),r31; push ret addr
 1088  00001b50  2fbd0018	subui	r29,r29,#24; alloc local storage
 1089  00001b54  afa20000	sw	0(r29),r2
 1090  00001b58  afa30004	sw	4(r29),r3
 1091  00001b5c  8fc10000	lw	r1,(r30)
 1092  00001b60  68220000	slti	r2,r1,#0
 1093  00001b64  1040002c	beqz	r2,L60_LF2
 1094  00001b68  54000000	nop; delay slot nop
 1095  00001b6c  8fc10004	lw	r1,4(r30)
 1096  00001b70  20220001	addi	r2,r1,#1
 1097  00001b74  afc20004	sw	4(r30),r2
 1098  00001b78  2002002d	addi	r2,r0,(#0x2d)&0xff
 1099  00001b7c  a0220000	sb	(r1),r2
 1100  00001b80  8fc10000	lw	r1,(r30)
 1101  00001b84  00011022	sub	r2,r0,r1
 1102  00001b88  afc20000	sw	(r30),r2
 1103  00001b8c  08000118	j	L61_LF2
 1104  00001b90  54000000	nop; delay slot nop
 1105  00001b94          	L60_LF2:
 1106  00001b94  8fc10000	lw	r1,(r30)
 1107  00001b98  64220000	snei	r2,r1,#0
 1108  00001b9c  14400020	bnez	r2,L62_LF2
 1109  00001ba0  54000000	nop; delay slot nop
 1110  00001ba4  8fc10004	lw	r1,4(r30)
 1111  00001ba8  20220001	addi	r2,r1,#1
 1112  00001bac  afc20004	sw	4(r30),r2
 1113  00001bb0  20020030	addi	r2,r0,(#0x30)&0xff
 1114  00001bb4  a0220000	sb	(r1),r2
 1115  00001bb8  080000ec	j	L61_LF2
 1116  00001bbc  54000000	nop; delay slot nop
 1117  00001bc0          	L62_LF2:
 1118  00001bc0  20010001	addi	r1,r0,#1
 1119  00001bc4  afc1fff4	sw	-12(r30),r1
 1120  00001bc8          	L64_LF2:
 1121  00001bc8  8fc1fff4	lw	r1,-12(r30)
 1122  00001bcc  8fc20000	lw	r2,(r30)
 1123  00001bd0  0022082c	sle	r1,r1,r2
 1124  00001bd4  1420000c	bnez	r1,L66_LF2
 1125  00001bd8  54000000	nop; delay slot nop
 1126  00001bdc  08000024	j	L65_LF2
 1127  00001be0  54000000	nop; delay slot nop
 1128  00001be4          	L67_LF2:
 1129  00001be4          	L66_LF2:
 1130  00001be4  8fc1fff4	lw	r1,-12(r30)
 1131  00001be8  00011820	add	r3,r0,r1
 1132  00001bec  50620002	slli	r2,r3,#0x2
 1133  00001bf0  00411020	add	r2,r2,r1
 1134  00001bf4  50410001	slli	r1,r2,#0x1
 1135  00001bf8  afc1fff4	sw	-12(r30),r1
 1136  00001bfc  0bffffc8	j	L64_LF2
 1137  00001c00  54000000	nop; delay slot nop
 1138  00001c04          	L65_LF2:
 1139  00001c04  54000000	nop
 1140  00001c08          	L68_LF2:
 1141  00001c08  8fc1fff4	lw	r1,-12(r30)
 1142  00001c0c  2002000a	addi	r2,r0,#10
 1143  00001c10  00200035	movi2fp	f0,r1
 1144  00001c14  00400835	movi2fp	f1,r2
 1145  00001c18  0401000f	div	f0,f0,f1
 1146  00001c1c  00000834	movfp2i	r1,f0
 1147  00001c20  afc1fff4	sw	-12(r30),r1
 1148  00001c24  8fc10004	lw	r1,4(r30)
 1149  00001c28  20220001	addi	r2,r1,#1
 1150  00001c2c  afc20004	sw	4(r30),r2
 1151  00001c30  8fc20000	lw	r2,(r30)
 1152  00001c34  8fc3fff4	lw	r3,-12(r30)
 1153  00001c38  00400035	movi2fp	f0,r2
 1154  00001c3c  00600835	movi2fp	f1,r3
 1155  00001c40  0401000f	div	f0,f0,f1
 1156  00001c44  00001034	movfp2i	r2,f0
 1157  00001c48  00021820	add	r3,r0,r2
 1158  00001c4c  20620030	addi	r2,r3,#48
 1159  00001c50  a0220000	sb	(r1),r2
 1160  00001c54  8fc10000	lw	r1,(r30)
 1161  00001c58  8fc3fff4	lw	r3,-12(r30)
 1162  00001c5c  00200035	movi2fp	f0,r1
 1163  00001c60  00600835	movi2fp	f1,r3
 1164  00001c64  0401000f	div	f0,f0,f1
 1165  00001c68  00001034	movfp2i	r2,f0
 1166  00001c6c  8fc3fff4	lw	r3,-12(r30)
 1167  00001c70  00400035	movi2fp	f0,r2
 1168  00001c74  00600835	movi2fp	f1,r3
 1169  00001c78  0401000e	mult	f0,f0,f1
 1170  00001c7c  00001034	movfp2i	r2,f0
 1171  00001c80  00220822	sub	r1,r1,r2
 1172  00001c84  afc10000	sw	(r30),r1
 1173  00001c88          	L70_LF2:
 1174  00001c88  8fc1fff4	lw	r1,-12(r30)
 1175  00001c8c  6c220001	sgti	r2,r1,#1
 1176  00001c90  1440000c	bnez	r2,L71_LF2
 1177  00001c94  54000000	nop; delay slot nop
 1178  00001c98  0800000c	j	L61_LF2
 1179  00001c9c  54000000	nop; delay slot nop
 1180  00001ca0          	L71_LF2:
 1181  00001ca0  0bffff64	j	L68_LF2
 1182  00001ca4  54000000	nop; delay slot nop
 1183  00001ca8          	L69_LF2:
 1184  00001ca8          	L63_LF2:
 1185  00001ca8          	L61_LF2:
 1186  00001ca8  8fc10004	lw	r1,4(r30)
 1187  00001cac  20020000	addi	r2,r0,(#0x0)&0xff
 1188  00001cb0  a0220000	sb	(r1),r2
 1189  00001cb4          	L59_LF2:
 1190  00001cb4  8fa20000	lw	r2,0(r29)
 1191  00001cb8  8fa30004	lw	r3,4(r29)
 1192  00001cbc  8fdffff8	lw	r31,-8(r30)
 1193  00001cc0  001ee820	add	r29,r0,r30
 1194  00001cc4  8fdefffc	lw	r30,-4(r30)
 1195  00001cc8  4be00000	jr	r31
 1196  00001ccc  54000000	nop
 1197  00001cd0          	.endproc _ditoa
 1198  00001cd0          	.align 2
 1199  00001cd0          	.proc _dstrtol
 1200  00001cd0          	.global _dstrtol
 1201  00001cd0          	_dstrtol:
 1202                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1203  00001cd0  afbefffc	sw	-4(r29),r30; push fp
 1204  00001cd4  001df020	add	r30,r0,r29; fp = sp
 1205  00001cd8  afbffff8	sw	-8(r29),r31; push ret addr
 1206  00001cdc  2fbd0020	subui	r29,r29,#32; alloc local storage
 1207  00001ce0  afa20000	sw	0(r29),r2
 1208  00001ce4  20010000	addi	r1,r0,#0
 1209  00001ce8  afc1fff4	sw	-12(r30),r1
 1210  00001cec          	L73_LF2:
 1211  00001cec  8fc10000	lw	r1,(r30)
 1212  00001cf0  90220000	lbu	r2,(r1)
 1213  00001cf4  60410020	seqi	r1,r2,#32
 1214  00001cf8  14200034	bnez	r1,L75_LF2
 1215  00001cfc  54000000	nop; delay slot nop
 1216  00001d00  8fc10000	lw	r1,(r30)
 1217  00001d04  90220000	lbu	r2,(r1)
 1218  00001d08  60410009	seqi	r1,r2,#9
 1219  00001d0c  14200020	bnez	r1,L75_LF2
 1220  00001d10  54000000	nop; delay slot nop
 1221  00001d14  8fc10000	lw	r1,(r30)
 1222  00001d18  90220000	lbu	r2,(r1)
 1223  00001d1c  6041000a	seqi	r1,r2,#10
 1224  00001d20  1420000c	bnez	r1,L75_LF2
 1225  00001d24  54000000	nop; delay slot nop
 1226  00001d28  0800001c	j	L74_LF2
 1227  00001d2c  54000000	nop; delay slot nop
 1228  00001d30          	L75_LF2:
 1229  00001d30  8fc20000	lw	r2,(r30)
 1230  00001d34  20410001	addi	r1,r2,#1
 1231  00001d38  00011020	add	r2,r0,r1
 1232  00001d3c  afc20000	sw	(r30),r2
 1233  00001d40  0bffffa8	j	L73_LF2
 1234  00001d44  54000000	nop; delay slot nop
 1235  00001d48          	L74_LF2:
 1236  00001d48  8fc10004	lw	r1,4(r30)
 1237  00001d4c  64220000	snei	r2,r1,#0
 1238  00001d50  10400010	beqz	r2,L76_LF2
 1239  00001d54  54000000	nop; delay slot nop
 1240  00001d58  8fc10004	lw	r1,4(r30)
 1241  00001d5c  8fc20000	lw	r2,(r30)
 1242  00001d60  ac220000	sw	(r1),r2
 1243  00001d64          	L76_LF2:
 1244  00001d64  8fc10000	lw	r1,(r30)
 1245  00001d68  90220000	lbu	r2,(r1)
 1246  00001d6c  64410000	snei	r1,r2,#0
 1247  00001d70  14200010	bnez	r1,L77_LF2
 1248  00001d74  54000000	nop; delay slot nop
 1249  00001d78  8fc1fff4	lw	r1,-12(r30)
 1250  00001d7c  08000294	j	L72_LF2
 1251  00001d80  54000000	nop; delay slot nop
 1252  00001d84          	L77_LF2:
 1253  00001d84  8fc10000	lw	r1,(r30)
 1254  00001d88  90220000	lbu	r2,(r1)
 1255  00001d8c  6041002d	seqi	r1,r2,#45
 1256  00001d90  10200024	beqz	r1,L78_LF2
 1257  00001d94  54000000	nop; delay slot nop
 1258  00001d98  2001ffff	addi	r1,r0,#-1
 1259  00001d9c  afc1ffec	sw	-20(r30),r1
 1260  00001da0  8fc20000	lw	r2,(r30)
 1261  00001da4  20410001	addi	r1,r2,#1
 1262  00001da8  00011020	add	r2,r0,r1
 1263  00001dac  afc20000	sw	(r30),r2
 1264  00001db0  0800000c	j	L79_LF2
 1265  00001db4  54000000	nop; delay slot nop
 1266  00001db8          	L78_LF2:
 1267  00001db8  20010001	addi	r1,r0,#1
 1268  00001dbc  afc1ffec	sw	-20(r30),r1
 1269  00001dc0          	L79_LF2:
 1270  00001dc0  8fc10008	lw	r1,8(r30)
 1271  00001dc4  64220000	snei	r2,r1,#0
 1272  00001dc8  14400090	bnez	r2,L80_LF2
 1273  00001dcc  54000000	nop; delay slot nop
 1274  00001dd0  8fc10000	lw	r1,(r30)
 1275  00001dd4  90220000	lbu	r2,(r1)
 1276  00001dd8  60410030	seqi	r1,r2,#48
 1277  00001ddc  10200074	beqz	r1,L81_LF2
 1278  00001de0  54000000	nop; delay slot nop
 1279  00001de4  8fc20000	lw	r2,(r30)
 1280  00001de8  20410001	addi	r1,r2,#1
 1281  00001dec  00011020	add	r2,r0,r1
 1282  00001df0  afc20000	sw	(r30),r2
 1283  00001df4  8fc10000	lw	r1,(r30)
 1284  00001df8  90220000	lbu	r2,(r1)
 1285  00001dfc  60410078	seqi	r1,r2,#120
 1286  00001e00  14200020	bnez	r1,L83_LF2
 1287  00001e04  54000000	nop; delay slot nop
 1288  00001e08  8fc10000	lw	r1,(r30)
 1289  00001e0c  90220000	lbu	r2,(r1)
 1290  00001e10  60410058	seqi	r1,r2,#88
 1291  00001e14  1420000c	bnez	r1,L83_LF2
 1292  00001e18  54000000	nop; delay slot nop
 1293  00001e1c  08000024	j	L82_LF2
 1294  00001e20  54000000	nop; delay slot nop
 1295  00001e24          	L83_LF2:
 1296  00001e24  20010010	addi	r1,r0,#16
 1297  00001e28  afc10008	sw	8(r30),r1
 1298  00001e2c  8fc20000	lw	r2,(r30)
 1299  00001e30  20410001	addi	r1,r2,#1
 1300  00001e34  00011020	add	r2,r0,r1
 1301  00001e38  afc20000	sw	(r30),r2
 1302  00001e3c  0800000c	j	L84_LF2
 1303  00001e40  54000000	nop; delay slot nop
 1304  00001e44          	L82_LF2:
 1305  00001e44  20010008	addi	r1,r0,#8
 1306  00001e48  afc10008	sw	8(r30),r1
 1307  00001e4c          	L84_LF2:
 1308  00001e4c  0800000c	j	L80_LF2
 1309  00001e50  54000000	nop; delay slot nop
 1310  00001e54          	L81_LF2:
 1311  00001e54  2001000a	addi	r1,r0,#10
 1312  00001e58  afc10008	sw	8(r30),r1
 1313  00001e5c          	L85_LF2:
 1314  00001e5c          	L80_LF2:
 1315  00001e5c  8fc10008	lw	r1,8(r30)
 1316  00001e60  70220000	slei	r2,r1,#0
 1317  00001e64  1440001c	bnez	r2,L87_LF2
 1318  00001e68  54000000	nop; delay slot nop
 1319  00001e6c  8fc10008	lw	r1,8(r30)
 1320  00001e70  6c220010	sgti	r2,r1,#16
 1321  00001e74  1440000c	bnez	r2,L87_LF2
 1322  00001e78  54000000	nop; delay slot nop
 1323  00001e7c  08000010	j	L86_LF2
 1324  00001e80  54000000	nop; delay slot nop
 1325  00001e84          	L87_LF2:
 1326  00001e84  8fc1fff4	lw	r1,-12(r30)
 1327  00001e88  08000188	j	L72_LF2
 1328  00001e8c  54000000	nop; delay slot nop
 1329  00001e90          	L86_LF2:
 1330  00001e90  54000000	nop
 1331  00001e94          	L88_LF2:
 1332  00001e94  8fc10000	lw	r1,(r30)
 1333  00001e98  90220000	lbu	r2,(r1)
 1334  00001e9c  6c41002f	sgtui	r1,r2,#47
 1335  00001ea0  10200030	beqz	r1,L91_LF2
 1336  00001ea4  54000000	nop; delay slot nop
 1337  00001ea8  8fc10000	lw	r1,(r30)
 1338  00001eac  90220000	lbu	r2,(r1)
 1339  00001eb0  70410039	sleui	r1,r2,#57
 1340  00001eb4  1020001c	beqz	r1,L91_LF2
 1341  00001eb8  54000000	nop; delay slot nop
 1342  00001ebc  8fc10000	lw	r1,(r30)
 1343  00001ec0  90220000	lbu	r2,(r1)
 1344  00001ec4  2041ffd0	addi	r1,r2,#-48
 1345  00001ec8  afc1fff0	sw	-16(r30),r1
 1346  00001ecc  0800008c	j	L92_LF2
 1347  00001ed0  54000000	nop; delay slot nop
 1348  00001ed4          	L91_LF2:
 1349  00001ed4  8fc10000	lw	r1,(r30)
 1350  00001ed8  90220000	lbu	r2,(r1)
 1351  00001edc  6c410060	sgtui	r1,r2,#96
 1352  00001ee0  10200030	beqz	r1,L93_LF2
 1353  00001ee4  54000000	nop; delay slot nop
 1354  00001ee8  8fc10000	lw	r1,(r30)
 1355  00001eec  90220000	lbu	r2,(r1)
 1356  00001ef0  7041007a	sleui	r1,r2,#122
 1357  00001ef4  1020001c	beqz	r1,L93_LF2
 1358  00001ef8  54000000	nop; delay slot nop
 1359  00001efc  8fc10000	lw	r1,(r30)
 1360  00001f00  90220000	lbu	r2,(r1)
 1361  00001f04  2041ffa9	addi	r1,r2,#-87
 1362  00001f08  afc1fff0	sw	-16(r30),r1
 1363  00001f0c  0800004c	j	L92_LF2
 1364  00001f10  54000000	nop; delay slot nop
 1365  00001f14          	L93_LF2:
 1366  00001f14  8fc10000	lw	r1,(r30)
 1367  00001f18  90220000	lbu	r2,(r1)
 1368  00001f1c  6c410040	sgtui	r1,r2,#64
 1369  00001f20  10200030	beqz	r1,L95_LF2
 1370  00001f24  54000000	nop; delay slot nop
 1371  00001f28  8fc10000	lw	r1,(r30)
 1372  00001f2c  90220000	lbu	r2,(r1)
 1373  00001f30  7041005a	sleui	r1,r2,#90
 1374  00001f34  1020001c	beqz	r1,L95_LF2
 1375  00001f38  54000000	nop; delay slot nop
 1376  00001f3c  8fc10000	lw	r1,(r30)
 1377  00001f40  90220000	lbu	r2,(r1)
 1378  00001f44  2041ffc9	addi	r1,r2,#-55
 1379  00001f48  afc1fff0	sw	-16(r30),r1
 1380  00001f4c  0800000c	j	L92_LF2
 1381  00001f50  54000000	nop; delay slot nop
 1382  00001f54          	L95_LF2:
 1383  00001f54  200103e8	addi	r1,r0,#1000
 1384  00001f58  afc1fff0	sw	-16(r30),r1
 1385  00001f5c          	L96_LF2:
 1386  00001f5c          	L94_LF2:
 1387  00001f5c          	L92_LF2:
 1388  00001f5c  8fc1fff0	lw	r1,-16(r30)
 1389  00001f60  8fc20008	lw	r2,8(r30)
 1390  00001f64  0022082a	slt	r1,r1,r2
 1391  00001f68  10200040	beqz	r1,L90_LF2
 1392  00001f6c  54000000	nop; delay slot nop
 1393  00001f70  8fc1fff4	lw	r1,-12(r30)
 1394  00001f74  8fc20008	lw	r2,8(r30)
 1395  00001f78  00200035	movi2fp	f0,r1
 1396  00001f7c  00400835	movi2fp	f1,r2
 1397  00001f80  0401000e	mult	f0,f0,f1
 1398  00001f84  00000834	movfp2i	r1,f0
 1399  00001f88  afc1fff4	sw	-12(r30),r1
 1400  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1401  00001f90  8fc2fff0	lw	r2,-16(r30)
 1402  00001f94  00220820	add	r1,r1,r2
 1403  00001f98  afc1fff4	sw	-12(r30),r1
 1404  00001f9c  8fc20000	lw	r2,(r30)
 1405  00001fa0  20410001	addi	r1,r2,#1
 1406  00001fa4  00011020	add	r2,r0,r1
 1407  00001fa8  afc20000	sw	(r30),r2
 1408  00001fac          	L97_LF2:
 1409  00001fac          	L90_LF2:
 1410  00001fac  8fc1fff0	lw	r1,-16(r30)
 1411  00001fb0  8fc20008	lw	r2,8(r30)
 1412  00001fb4  0022082a	slt	r1,r1,r2
 1413  00001fb8  1420000c	bnez	r1,L98_LF2
 1414  00001fbc  54000000	nop; delay slot nop
 1415  00001fc0  0800000c	j	L89_LF2
 1416  00001fc4  54000000	nop; delay slot nop
 1417  00001fc8          	L98_LF2:
 1418  00001fc8  0bfffec8	j	L88_LF2
 1419  00001fcc  54000000	nop; delay slot nop
 1420  00001fd0          	L89_LF2:
 1421  00001fd0  8fc10004	lw	r1,4(r30)
 1422  00001fd4  64220000	snei	r2,r1,#0
 1423  00001fd8  10400010	beqz	r2,L99_LF2
 1424  00001fdc  54000000	nop; delay slot nop
 1425  00001fe0  8fc10004	lw	r1,4(r30)
 1426  00001fe4  8fc20000	lw	r2,(r30)
 1427  00001fe8  ac220000	sw	(r1),r2
 1428  00001fec          	L99_LF2:
 1429  00001fec  8fc1fff4	lw	r1,-12(r30)
 1430  00001ff0  8fc2ffec	lw	r2,-20(r30)
 1431  00001ff4  00200035	movi2fp	f0,r1
 1432  00001ff8  00400835	movi2fp	f1,r2
 1433  00001ffc  0401000e	mult	f0,f0,f1
 1434  00002000  00000834	movfp2i	r1,f0
 1435  00002004  afc1fff4	sw	-12(r30),r1
 1436  00002008  8fc1fff4	lw	r1,-12(r30)
 1437  0000200c  08000004	j	L72_LF2
 1438  00002010  54000000	nop; delay slot nop
 1439  00002014          	L72_LF2:
 1440  00002014  8fa20000	lw	r2,0(r29)
 1441  00002018  8fdffff8	lw	r31,-8(r30)
 1442  0000201c  001ee820	add	r29,r0,r30
 1443  00002020  8fdefffc	lw	r30,-4(r30)
 1444  00002024  4be00000	jr	r31
 1445  00002028  54000000	nop
 1446  0000202c          	.endproc _dstrtol
 1447  0000202c          	.align 2
 1448  0000202c          	.proc _bcopy
 1449  0000202c          	.global _bcopy
 1450  0000202c          	_bcopy:
 1451                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1452  0000202c  afbefffc	sw	-4(r29),r30; push fp
 1453  00002030  001df020	add	r30,r0,r29; fp = sp
 1454  00002034  afbffff8	sw	-8(r29),r31; push ret addr
 1455  00002038  2fbd0010	subui	r29,r29,#16; alloc local storage
 1456  0000203c  afa20000	sw	0(r29),r2
 1457  00002040  afa30004	sw	4(r29),r3
 1458  00002044  54000000	nop
 1459  00002048          	L101_LF2:
 1460  00002048  8fc10008	lw	r1,8(r30)
 1461  0000204c  2022ffff	addi	r2,r1,#-1
 1462  00002050  afc20008	sw	8(r30),r2
 1463  00002054  6c210000	sgti	r1,r1,#0
 1464  00002058  1420000c	bnez	r1,L103_LF2
 1465  0000205c  54000000	nop; delay slot nop
 1466  00002060  0800002c	j	L102_LF2
 1467  00002064  54000000	nop; delay slot nop
 1468  00002068          	L103_LF2:
 1469  00002068  8fc10004	lw	r1,4(r30)
 1470  0000206c  20220001	addi	r2,r1,#1
 1471  00002070  afc20004	sw	4(r30),r2
 1472  00002074  8fc20000	lw	r2,(r30)
 1473  00002078  20430001	addi	r3,r2,#1
 1474  0000207c  afc30000	sw	(r30),r3
 1475  00002080  80420000	lb	r2,(r2)
 1476  00002084  a0220000	sb	(r1),r2
 1477  00002088  0bffffbc	j	L101_LF2
 1478  0000208c  54000000	nop; delay slot nop
 1479  00002090          	L102_LF2:
 1480  00002090          	L100_LF2:
 1481  00002090  8fa20000	lw	r2,0(r29)
 1482  00002094  8fa30004	lw	r3,4(r29)
 1483  00002098  8fdffff8	lw	r31,-8(r30)
 1484  0000209c  001ee820	add	r29,r0,r30
 1485  000020a0  8fdefffc	lw	r30,-4(r30)
 1486  000020a4  4be00000	jr	r31
 1487  000020a8  54000000	nop
 1488  000020ac          	.endproc _bcopy
 1489  000020ac          	.align 2
 1490  000020ac          	.proc _bzero
 1491  000020ac          	.global _bzero
 1492  000020ac          	_bzero:
 1493                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1494  000020ac  afbefffc	sw	-4(r29),r30; push fp
 1495  000020b0  001df020	add	r30,r0,r29; fp = sp
 1496  000020b4  afbffff8	sw	-8(r29),r31; push ret addr
 1497  000020b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1498  000020bc  afa20000	sw	0(r29),r2
 1499  000020c0  54000000	nop
 1500  000020c4          	L105_LF2:
 1501  000020c4  8fc10004	lw	r1,4(r30)
 1502  000020c8  2022ffff	addi	r2,r1,#-1
 1503  000020cc  afc20004	sw	4(r30),r2
 1504  000020d0  6c210000	sgti	r1,r1,#0
 1505  000020d4  1420000c	bnez	r1,L107_LF2
 1506  000020d8  54000000	nop; delay slot nop
 1507  000020dc  08000020	j	L106_LF2
 1508  000020e0  54000000	nop; delay slot nop
 1509  000020e4          	L107_LF2:
 1510  000020e4  8fc10000	lw	r1,(r30)
 1511  000020e8  20220001	addi	r2,r1,#1
 1512  000020ec  afc20000	sw	(r30),r2
 1513  000020f0  20020000	addi	r2,r0,(#0x0)&0xff
 1514  000020f4  a0220000	sb	(r1),r2
 1515  000020f8  0bffffc8	j	L105_LF2
 1516  000020fc  54000000	nop; delay slot nop
 1517  00002100          	L106_LF2:
 1518  00002100          	L104_LF2:
 1519  00002100  8fa20000	lw	r2,0(r29)
 1520  00002104  8fdffff8	lw	r31,-8(r30)
 1521  00002108  001ee820	add	r29,r0,r30
 1522  0000210c  8fdefffc	lw	r30,-4(r30)
 1523  00002110  4be00000	jr	r31
 1524  00002114  54000000	nop
 1525  00002118          	.endproc _bzero
 1526  00002118          	.align 2
 1527  00002118          	.proc _min
 1528  00002118          	.global _min
 1529  00002118          	_min:
 1530                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1531  00002118  afbefffc	sw	-4(r29),r30; push fp
 1532  0000211c  001df020	add	r30,r0,r29; fp = sp
 1533  00002120  afbffff8	sw	-8(r29),r31; push ret addr
 1534  00002124  2fbd0010	subui	r29,r29,#16; alloc local storage
 1535  00002128  afa20000	sw	0(r29),r2
 1536  0000212c  afa30004	sw	4(r29),r3
 1537  00002130  8fc10000	lw	r1,(r30)
 1538  00002134  8fc20004	lw	r2,4(r30)
 1539  00002138  0022182c	sle	r3,r1,r2
 1540  0000213c  14600008	bnez	r3,L109_LF2
 1541  00002140  54000000	nop; delay slot nop
 1542  00002144  8fc10004	lw	r1,4(r30)
 1543  00002148          	L109_LF2:
 1544  00002148  08000004	j	L108_LF2
 1545  0000214c  54000000	nop; delay slot nop
 1546  00002150          	L108_LF2:
 1547  00002150  8fa20000	lw	r2,0(r29)
 1548  00002154  8fa30004	lw	r3,4(r29)
 1549  00002158  8fdffff8	lw	r31,-8(r30)
 1550  0000215c  001ee820	add	r29,r0,r30
 1551  00002160  8fdefffc	lw	r30,-4(r30)
 1552  00002164  4be00000	jr	r31
 1553  00002168  54000000	nop
 1554  0000216c          	.endproc _min
 1555  0000216c          	.align 2
 1556  0000216c          	.proc _max
 1557  0000216c          	.global _max
 1558  0000216c          	_max:
 1559                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1560  0000216c  afbefffc	sw	-4(r29),r30; push fp
 1561  00002170  001df020	add	r30,r0,r29; fp = sp
 1562  00002174  afbffff8	sw	-8(r29),r31; push ret addr
 1563  00002178  2fbd0010	subui	r29,r29,#16; alloc local storage
 1564  0000217c  afa20000	sw	0(r29),r2
 1565  00002180  afa30004	sw	4(r29),r3
 1566  00002184  8fc10000	lw	r1,(r30)
 1567  00002188  8fc20004	lw	r2,4(r30)
 1568  0000218c  0022182d	sge	r3,r1,r2
 1569  00002190  14600008	bnez	r3,L111_LF2
 1570  00002194  54000000	nop; delay slot nop
 1571  00002198  8fc10004	lw	r1,4(r30)
 1572  0000219c          	L111_LF2:
 1573  0000219c  08000004	j	L110_LF2
 1574  000021a0  54000000	nop; delay slot nop
 1575  000021a4          	L110_LF2:
 1576  000021a4  8fa20000	lw	r2,0(r29)
 1577  000021a8  8fa30004	lw	r3,4(r29)
 1578  000021ac  8fdffff8	lw	r31,-8(r30)
 1579  000021b0  001ee820	add	r29,r0,r30
 1580  000021b4  8fdefffc	lw	r30,-4(r30)
 1581  000021b8  4be00000	jr	r31
 1582  000021bc  54000000	nop
 1583  000021c0          	.endproc _max
 1584                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1585                      ;;;
 1586                      ;;; Most of the traps are called in files from libtraps.
 1589  000021c0          	.align 2
 1590  000021c0          	.proc _exit
 1591  000021c0          	.global _exit
 1592  000021c0          	_exit:
 1593  000021c0  44000300	trap	#0x300
 1594  000021c4  4be00000	jr	r31
 1595  000021c8  54000000	nop
 1596  000021cc          	.endproc _exit
 1598                      ; for the benefit of gcc.
 1599  000021cc          	.proc ___main
 1600  000021cc          	.global ___main
 1601  000021cc          	___main:
 1602  000021cc  4be00000	jr	r31
 1603  000021d0  54000000	nop
 1604  000021d4          	.endproc ___main
 1605  000021d4          	.text
 1606  000021d4          	.global _etext
 1607  000021d4          	_etext:
 1608  000021d4          	.align 3
 1609  000021d8          	.data
 1610  000030cf          	.global _edata
 1611  000030cf          	_edata:
