 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 142
    4                      ; Text size: 4324
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  70617274	.ascii "part1: testing hello world\n\000"
   85  00003038  313a2074	
   85  0000303c  65737469	
   85  00003040  6e672068	
   85  00003044  656c6c6f	
   85  00003048  20776f72	
   85  0000304c  6c640a00	
   86  00003050          	.align 2
   87  00003050          	LC2_LF0:
   88  00003050  70617274	.ascii "part1: Bad semaphore s_procs_completed (%d)!\n\000"
   88  00003054  313a2042	
   88  00003058  61642073	
   88  0000305c  656d6170	
   88  00003060  686f7265	
   88  00003064  20735f70	
   88  00003068  726f6373	
   88  0000306c  5f636f6d	
   88  00003070  706c6574	
   88  00003074  65642028	
   88  00003078  25642921	
   88  0000307c  0a00    	
   89  0000307e          	.align 2
   90  00003080          	LC3_LF0:
   91  00003080  70617274	.ascii "part1: done!\n\000"
   91  00003084  313a2064	
   91  00003088  6f6e6521	
   91  0000308c  0a00    	
   92  0000308e          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c000fec	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c000108	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c000208	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000a9c	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011020	add	r2,r0,r1
  129  0000114c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  130  00001150  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  131  00001154  afa40000	sw	(r29),r4
  132  00001158  0c0000c0	jal	_Printf
  133  0000115c  54000000	nop; not filled.
  134  00001160  afa20000	sw	(r29),r2
  135  00001164  0c000108	jal	_sem_signal
  136  00001168  54000000	nop; not filled.
  137  0000116c  23bd0010	addi	r29,r29,#16
  138  00001170  64210001	snei	r1,r1,#1
  139  00001174  10200038	beqz	r1,L18_LF0
  140  00001178  54000000	nop; not filled.
  141  0000117c  0c0000a8	jal	_getpid
  142  00001180  54000000	nop; not filled.
  143  00001184  23bdfff0	addi	r29,r29,#-16
  144  00001188  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  145  0000118c  24843050	addui	r4,r4,(LC2_LF0)&0xffff
  146  00001190  afa40000	sw	(r29),r4
  147  00001194  afa10004	sw	4(r29),r1
  148  00001198  afa20008	sw	8(r29),r2
  149  0000119c  0c00007c	jal	_Printf
  150  000011a0  54000000	nop; not filled.
  151  000011a4  0c00017c	jal	_Exit
  152  000011a8  54000000	nop; not filled.
  153  000011ac  23bd0010	addi	r29,r29,#16
  154  000011b0          	L18_LF0:
  155  000011b0  23bdfff8	addi	r29,r29,#-8
  156  000011b4  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  157  000011b8  24843080	addui	r4,r4,(LC3_LF0)&0xffff
  158  000011bc  afa40000	sw	(r29),r4
  159  000011c0  0c000058	jal	_Printf
  160  000011c4  54000000	nop; not filled.
  161  000011c8  23bd0008	addi	r29,r29,#8
  162  000011cc  0c000f00	jal	_exit
  163  000011d0  54000000	nop
  164  000011d4          	.endproc _main
  165                      ;;;
  166                      ;;; Stub functions for DLX traps.
  167                      ;;;
  168                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  169                      ;;;
  170                      ;;; The traps such as Open and Close
  171                      ;;; (note the capital letters) are for use by user programs.  The traps
  172                      ;;; with names such as open and close (lower case) are for use by the OS.
  173                      ;;;
  176  000011d4          	.align 2
  178                      ;;; The following are the traps to be used by user-level programs
  179                      ;;;
  181  000011d4          	.align 2
  182  000011d4          	.proc _Open
  183  000011d4          	.global _Open
  184  000011d4          	_Open:
  185                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  186                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  187                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  188  000011d4  44000213	trap	#0x213
  189  000011d8  4be00000	jr	r31
  190  000011dc  54000000	nop
  191  000011e0          	.endproc _Open
  193  000011e0          	.proc _Close
  194  000011e0          	.global _Close
  195  000011e0          	_Close:
  196  000011e0  44000214	trap	#0x214
  197  000011e4  4be00000	jr	r31
  198  000011e8  54000000	nop
  199  000011ec          	.endproc _Close
  201  000011ec          	.proc _Read
  202  000011ec          	.global _Read
  203  000011ec          	_Read:
  204  000011ec  44000210	trap	#0x210
  205  000011f0  4be00000	jr	r31
  206  000011f4  54000000	nop
  207  000011f8          	.endproc _Read
  209  000011f8          	.proc _Write
  210  000011f8          	.global _Write
  211  000011f8          	_Write:
  212  000011f8  44000211	trap	#0x211
  213  000011fc  4be00000	jr	r31
  214  00001200  54000000	nop
  215  00001204          	.endproc _Write
  217  00001204          	.proc _Lseek
  218  00001204          	.global _Lseek
  219  00001204          	_Lseek:
  220  00001204  44000212	trap	#0x212
  221  00001208  4be00000	jr	r31
  222  0000120c  54000000	nop
  223  00001210          	.endproc _Lseek
  225  00001210          	.proc _Putchar
  226  00001210          	.global _Putchar
  227  00001210          	_Putchar:
  228  00001210  44000280	trap	#0x280
  229  00001214  4be00000	jr	r31
  230  00001218  54000000	nop
  231  0000121c          	.endproc _Putchar
  233  0000121c          	.proc _Printf
  234  0000121c          	.global _Printf
  235  0000121c          	_Printf:
  236  0000121c  44000201	trap	#0x201
  237  00001220  4be00000	jr	r31
  238  00001224  54000000	nop
  239  00001228          	.endproc _Printf
  241  00001228          	.proc _getpid
  242  00001228          	.global _getpid
  243  00001228          	_getpid:
  244  00001228  44000431	trap	#0x431
  245  0000122c  4be00000	jr	r31
  246  00001230  54000000	nop
  247  00001234          	.endproc _getpid
  249  00001234          	.proc _process_create
  250  00001234          	.global _process_create
  251  00001234          	_process_create:
  252  00001234  44000432	trap	#0x432
  253  00001238  4be00000	jr	r31
  254  0000123c  54000000	nop
  255  00001240          	.endproc _process_create
  257  00001240          	.proc _shmget
  258  00001240          	.global _shmget
  259  00001240          	_shmget:
  260  00001240  44000440	trap	#0x440
  261  00001244  4be00000	jr	r31
  262  00001248  54000000	nop
  263  0000124c          	.endproc _shmget
  265  0000124c          	.proc _shmat
  266  0000124c          	.global _shmat
  267  0000124c          	_shmat:
  268  0000124c  44000441	trap	#0x441
  269  00001250  4be00000	jr	r31
  270  00001254  54000000	nop
  271  00001258          	.endproc _shmat
  273  00001258          	.proc _sem_create
  274  00001258          	.global _sem_create
  275  00001258          	_sem_create:
  276  00001258  44000450	trap	#0x450
  277  0000125c  4be00000	jr	r31
  278  00001260  54000000	nop
  279  00001264          	.endproc _sem_create
  281  00001264          	.proc _sem_wait
  282  00001264          	.global _sem_wait
  283  00001264          	_sem_wait:
  284  00001264  44000451	trap	#0x451
  285  00001268  4be00000	jr	r31
  286  0000126c  54000000	nop
  287  00001270          	.endproc _sem_wait
  289  00001270          	.proc _sem_signal
  290  00001270          	.global _sem_signal
  291  00001270          	_sem_signal:
  292  00001270  44000452	trap	#0x452
  293  00001274  4be00000	jr	r31
  294  00001278  54000000	nop
  295  0000127c          	.endproc _sem_signal
  297  0000127c          	.proc _lock_create
  298  0000127c          	.global _lock_create
  299  0000127c          	_lock_create:
  300  0000127c  44000453	trap	#0x453
  301  00001280  4be00000	jr	r31
  302  00001284  54000000	nop
  303  00001288          	.endproc _lock_create
  305  00001288          	.proc _lock_acquire
  306  00001288          	.global _lock_acquire
  307  00001288          	_lock_acquire:
  308  00001288  44000454	trap	#0x454
  309  0000128c  4be00000	jr	r31
  310  00001290  54000000	nop
  311  00001294          	.endproc _lock_acquire
  313  00001294          	.proc _lock_release
  314  00001294          	.global _lock_release
  315  00001294          	_lock_release:
  316  00001294  44000455	trap	#0x455
  317  00001298  4be00000	jr	r31
  318  0000129c  54000000	nop
  319  000012a0          	.endproc _lock_release
  321  000012a0          	.proc _cond_create
  322  000012a0          	.global _cond_create
  323  000012a0          	_cond_create:
  324  000012a0  44000456	trap	#0x456
  325  000012a4  4be00000	jr	r31
  326  000012a8  54000000	nop
  327  000012ac          	.endproc _cond_create
  329  000012ac          	.proc _cond_wait
  330  000012ac          	.global _cond_wait
  331  000012ac          	_cond_wait:
  332  000012ac  44000457	trap	#0x457
  333  000012b0  4be00000	jr	r31
  334  000012b4  54000000	nop
  335  000012b8          	.endproc _cond_wait
  337  000012b8          	.proc _cond_signal
  338  000012b8          	.global _cond_signal
  339  000012b8          	_cond_signal:
  340  000012b8  44000458	trap	#0x458
  341  000012bc  4be00000	jr	r31
  342  000012c0  54000000	nop
  343  000012c4          	.endproc _cond_signal
  345  000012c4          	.proc _cond_broadcast
  346  000012c4          	.global _cond_broadcast
  347  000012c4          	_cond_broadcast:
  348  000012c4  44000459	trap	#0x459
  349  000012c8  4be00000	jr	r31
  350  000012cc  54000000	nop
  351  000012d0          	.endproc _cond_broadcast
  353  000012d0          	.proc _mbox_create
  354  000012d0          	.global _mbox_create
  355  000012d0          	_mbox_create:
  356  000012d0  44000460	trap	#0x460
  357  000012d4  4be00000	jr	r31
  358  000012d8  54000000	nop
  359  000012dc          	.endproc _mbox_create
  361  000012dc          	.proc _mbox_open
  362  000012dc          	.global _mbox_open
  363  000012dc          	_mbox_open:
  364  000012dc  44000461	trap	#0x461
  365  000012e0  4be00000	jr	r31
  366  000012e4  54000000	nop
  367  000012e8          	.endproc _mbox_open
  369  000012e8          	.proc _mbox_close
  370  000012e8          	.global _mbox_close
  371  000012e8          	_mbox_close:
  372  000012e8  44000462	trap	#0x462
  373  000012ec  4be00000	jr	r31
  374  000012f0  54000000	nop
  375  000012f4          	.endproc _mbox_close
  377  000012f4          	.proc _mbox_send
  378  000012f4          	.global _mbox_send
  379  000012f4          	_mbox_send:
  380  000012f4  44000463	trap	#0x463
  381  000012f8  4be00000	jr	r31
  382  000012fc  54000000	nop
  383  00001300          	.endproc _mbox_send
  385  00001300          	.proc _mbox_recv
  386  00001300          	.global _mbox_recv
  387  00001300          	_mbox_recv:
  388  00001300  44000464	trap	#0x464
  389  00001304  4be00000	jr	r31
  390  00001308  54000000	nop
  391  0000130c          	.endproc _mbox_recv
  393  0000130c          	.proc _sleep
  394  0000130c          	.global _sleep
  395  0000130c          	_sleep:
  396  0000130c  44000465	trap	#0x465
  397  00001310  4be00000	jr	r31
  398  00001314  54000000	nop
  399  00001318          	.endproc _sleep
  401  00001318          	.proc _yield
  402  00001318          	.global _yield
  403  00001318          	_yield:
  404  00001318  44000466	trap	#0x466
  405  0000131c  4be00000	jr	r31
  406  00001320  54000000	nop
  407  00001324          	.endproc _yield
  410  00001324          	.proc _Exit
  411  00001324          	.global _Exit
  412  00001324          	_Exit:
  413  00001324  44000500	trap	#0x500
  414  00001328  4be00000	jr	r31
  415  0000132c  54000000	nop
  416  00001330          	.endproc _Exit
  419  00001330          	.proc _malloc
  420  00001330          	.global _malloc
  421  00001330          	_malloc:
  422  00001330  44000467	trap	#0x467
  423  00001334  4be00000	jr	r31
  424  00001338          	.endproc _malloc
  427  00001338          	.proc _mfree
  428  00001338          	.global _mfree
  429  00001338          	_mfree:
  430  00001338  44000468	trap	#0x468
  431  0000133c  4be00000	jr	r31
  432  00001340          	.endproc _mfree
  433                      ; Compiled by GCC
  435  00001340          	.align 2
  436  00001340          	.proc _isspace
  437  00001340          	.global _isspace
  438  00001340          	_isspace:
  439                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  440  00001340  afbefffc	sw	-4(r29),r30; push fp
  441  00001344  001df020	add	r30,r0,r29; fp = sp
  442  00001348  afbffff8	sw	-8(r29),r31; push ret addr
  443  0000134c  2fbd0018	subui	r29,r29,#24; alloc local storage
  444  00001350  afa20000	sw	0(r29),r2
  445  00001354  afa30004	sw	4(r29),r3
  446  00001358  afa40008	sw	8(r29),r4
  447  0000135c  83c20003	lb	r2,3(r30)
  448  00001360  20010000	addi	r1,r0,#0
  449  00001364  304300ff	andi	r3,r2,#0x00ff
  450  00001368  60640020	seqi	r4,r3,#32
  451  0000136c  1480002c	bnez	r4,L3_LF2
  452  00001370  54000000	nop; delay slot nop
  453  00001374  304300ff	andi	r3,r2,#0x00ff
  454  00001378  60640009	seqi	r4,r3,#9
  455  0000137c  1480001c	bnez	r4,L3_LF2
  456  00001380  54000000	nop; delay slot nop
  457  00001384  304300ff	andi	r3,r2,#0x00ff
  458  00001388  6064000a	seqi	r4,r3,#10
  459  0000138c  1480000c	bnez	r4,L3_LF2
  460  00001390  54000000	nop; delay slot nop
  461  00001394  08000008	j	L2_LF2
  462  00001398  54000000	nop; delay slot nop
  463  0000139c          	L3_LF2:
  464  0000139c  20010001	addi	r1,r0,#1
  465  000013a0          	L2_LF2:
  466  000013a0  08000004	j	L1_LF2
  467  000013a4  54000000	nop; delay slot nop
  468  000013a8          	L1_LF2:
  469  000013a8  8fa20000	lw	r2,0(r29)
  470  000013ac  8fa30004	lw	r3,4(r29)
  471  000013b0  8fa40008	lw	r4,8(r29)
  472  000013b4  8fdffff8	lw	r31,-8(r30)
  473  000013b8  001ee820	add	r29,r0,r30
  474  000013bc  8fdefffc	lw	r30,-4(r30)
  475  000013c0  4be00000	jr	r31
  476  000013c4  54000000	nop
  477  000013c8          	.endproc _isspace
  478  000013c8          	.align 2
  479  000013c8          	.proc _isxdigit
  480  000013c8          	.global _isxdigit
  481  000013c8          	_isxdigit:
  482                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  483  000013c8  afbefffc	sw	-4(r29),r30; push fp
  484  000013cc  001df020	add	r30,r0,r29; fp = sp
  485  000013d0  afbffff8	sw	-8(r29),r31; push ret addr
  486  000013d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  487  000013d8  afa20000	sw	0(r29),r2
  488  000013dc  afa30004	sw	4(r29),r3
  489  000013e0  afa40008	sw	8(r29),r4
  490  000013e4  83c20003	lb	r2,3(r30)
  491  000013e8  20010000	addi	r1,r0,#0
  492  000013ec  304300ff	andi	r3,r2,#0x00ff
  493  000013f0  6c64002f	sgtui	r4,r3,#47
  494  000013f4  1080001c	beqz	r4,L7_LF2
  495  000013f8  54000000	nop; delay slot nop
  496  000013fc  304300ff	andi	r3,r2,#0x00ff
  497  00001400  70640039	sleui	r4,r3,#57
  498  00001404  1480005c	bnez	r4,L6_LF2
  499  00001408  54000000	nop; delay slot nop
  500  0000140c  08000004	j	L7_LF2
  501  00001410  54000000	nop; delay slot nop
  502  00001414          	L7_LF2:
  503  00001414  304300ff	andi	r3,r2,#0x00ff
  504  00001418  6c640060	sgtui	r4,r3,#96
  505  0000141c  1080001c	beqz	r4,L8_LF2
  506  00001420  54000000	nop; delay slot nop
  507  00001424  304300ff	andi	r3,r2,#0x00ff
  508  00001428  70640066	sleui	r4,r3,#102
  509  0000142c  14800034	bnez	r4,L6_LF2
  510  00001430  54000000	nop; delay slot nop
  511  00001434  08000004	j	L8_LF2
  512  00001438  54000000	nop; delay slot nop
  513  0000143c          	L8_LF2:
  514  0000143c  304300ff	andi	r3,r2,#0x00ff
  515  00001440  6c640040	sgtui	r4,r3,#64
  516  00001444  10800020	beqz	r4,L5_LF2
  517  00001448  54000000	nop; delay slot nop
  518  0000144c  304300ff	andi	r3,r2,#0x00ff
  519  00001450  70640041	sleui	r4,r3,#65
  520  00001454  1480000c	bnez	r4,L6_LF2
  521  00001458  54000000	nop; delay slot nop
  522  0000145c  08000008	j	L5_LF2
  523  00001460  54000000	nop; delay slot nop
  524  00001464          	L6_LF2:
  525  00001464  20010001	addi	r1,r0,#1
  526  00001468          	L5_LF2:
  527  00001468  08000004	j	L4_LF2
  528  0000146c  54000000	nop; delay slot nop
  529  00001470          	L4_LF2:
  530  00001470  8fa20000	lw	r2,0(r29)
  531  00001474  8fa30004	lw	r3,4(r29)
  532  00001478  8fa40008	lw	r4,8(r29)
  533  0000147c  8fdffff8	lw	r31,-8(r30)
  534  00001480  001ee820	add	r29,r0,r30
  535  00001484  8fdefffc	lw	r30,-4(r30)
  536  00001488  4be00000	jr	r31
  537  0000148c  54000000	nop
  538  00001490          	.endproc _isxdigit
  539  00001490          	.align 2
  540  00001490          	.proc _dstrcpy
  541  00001490          	.global _dstrcpy
  542  00001490          	_dstrcpy:
  543                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  544  00001490  afbefffc	sw	-4(r29),r30; push fp
  545  00001494  001df020	add	r30,r0,r29; fp = sp
  546  00001498  afbffff8	sw	-8(r29),r31; push ret addr
  547  0000149c  2fbd0018	subui	r29,r29,#24; alloc local storage
  548  000014a0  afa20000	sw	0(r29),r2
  549  000014a4  afa30004	sw	4(r29),r3
  550  000014a8  8fc10000	lw	r1,(r30)
  551  000014ac  afc1fff4	sw	-12(r30),r1
  552  000014b0          	L10_LF2:
  553  000014b0  8fc10000	lw	r1,(r30)
  554  000014b4  20220001	addi	r2,r1,#1
  555  000014b8  afc20000	sw	(r30),r2
  556  000014bc  8fc20004	lw	r2,4(r30)
  557  000014c0  20430001	addi	r3,r2,#1
  558  000014c4  afc30004	sw	4(r30),r3
  559  000014c8  80420000	lb	r2,(r2)
  560  000014cc  a0220000	sb	(r1),r2
  561  000014d0  a3c2fff3	sb	-13(r30),r2
  562  000014d4          	L12_LF2:
  563  000014d4  93c1fff3	lbu	r1,-13(r30)
  564  000014d8  64220000	snei	r2,r1,#0
  565  000014dc  1440000c	bnez	r2,L13_LF2
  566  000014e0  54000000	nop; delay slot nop
  567  000014e4  0800000c	j	L11_LF2
  568  000014e8  54000000	nop; delay slot nop
  569  000014ec          	L13_LF2:
  570  000014ec  0bffffc0	j	L10_LF2
  571  000014f0  54000000	nop; delay slot nop
  572  000014f4          	L11_LF2:
  573  000014f4  8fc1fff4	lw	r1,-12(r30)
  574  000014f8  08000004	j	L9_LF2
  575  000014fc  54000000	nop; delay slot nop
  576  00001500          	L9_LF2:
  577  00001500  8fa20000	lw	r2,0(r29)
  578  00001504  8fa30004	lw	r3,4(r29)
  579  00001508  8fdffff8	lw	r31,-8(r30)
  580  0000150c  001ee820	add	r29,r0,r30
  581  00001510  8fdefffc	lw	r30,-4(r30)
  582  00001514  4be00000	jr	r31
  583  00001518  54000000	nop
  584  0000151c          	.endproc _dstrcpy
  585  0000151c          	.align 2
  586  0000151c          	.proc _dstrncpy
  587  0000151c          	.global _dstrncpy
  588  0000151c          	_dstrncpy:
  589                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  590  0000151c  afbefffc	sw	-4(r29),r30; push fp
  591  00001520  001df020	add	r30,r0,r29; fp = sp
  592  00001524  afbffff8	sw	-8(r29),r31; push ret addr
  593  00001528  2fbd0018	subui	r29,r29,#24; alloc local storage
  594  0000152c  afa20000	sw	0(r29),r2
  595  00001530  afa30004	sw	4(r29),r3
  596  00001534  8fc10000	lw	r1,(r30)
  597  00001538  afc1fff4	sw	-12(r30),r1
  598  0000153c          	L15_LF2:
  599  0000153c  8fc10008	lw	r1,8(r30)
  600  00001540  2022ffff	addi	r2,r1,#-1
  601  00001544  afc20008	sw	8(r30),r2
  602  00001548  70210000	slei	r1,r1,#0
  603  0000154c  1020000c	beqz	r1,L18_LF2
  604  00001550  54000000	nop; delay slot nop
  605  00001554  08000048	j	L16_LF2
  606  00001558  54000000	nop; delay slot nop
  607  0000155c          	L18_LF2:
  608  0000155c  8fc10000	lw	r1,(r30)
  609  00001560  20220001	addi	r2,r1,#1
  610  00001564  afc20000	sw	(r30),r2
  611  00001568  8fc20004	lw	r2,4(r30)
  612  0000156c  20430001	addi	r3,r2,#1
  613  00001570  afc30004	sw	4(r30),r3
  614  00001574  80420000	lb	r2,(r2)
  615  00001578  a0220000	sb	(r1),r2
  616  0000157c  a3c2fff3	sb	-13(r30),r2
  617  00001580          	L17_LF2:
  618  00001580  93c1fff3	lbu	r1,-13(r30)
  619  00001584  64220000	snei	r2,r1,#0
  620  00001588  1440000c	bnez	r2,L19_LF2
  621  0000158c  54000000	nop; delay slot nop
  622  00001590  0800000c	j	L16_LF2
  623  00001594  54000000	nop; delay slot nop
  624  00001598          	L19_LF2:
  625  00001598  0bffffa0	j	L15_LF2
  626  0000159c  54000000	nop; delay slot nop
  627  000015a0          	L16_LF2:
  628  000015a0  8fc1fff4	lw	r1,-12(r30)
  629  000015a4  08000004	j	L14_LF2
  630  000015a8  54000000	nop; delay slot nop
  631  000015ac          	L14_LF2:
  632  000015ac  8fa20000	lw	r2,0(r29)
  633  000015b0  8fa30004	lw	r3,4(r29)
  634  000015b4  8fdffff8	lw	r31,-8(r30)
  635  000015b8  001ee820	add	r29,r0,r30
  636  000015bc  8fdefffc	lw	r30,-4(r30)
  637  000015c0  4be00000	jr	r31
  638  000015c4  54000000	nop
  639  000015c8          	.endproc _dstrncpy
  640  000015c8          	.align 2
  641  000015c8          	.proc _dstrcat
  642  000015c8          	.global _dstrcat
  643  000015c8          	_dstrcat:
  644                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  645  000015c8  afbefffc	sw	-4(r29),r30; push fp
  646  000015cc  001df020	add	r30,r0,r29; fp = sp
  647  000015d0  afbffff8	sw	-8(r29),r31; push ret addr
  648  000015d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  649  000015d8  afa20000	sw	0(r29),r2
  650  000015dc  8fc10000	lw	r1,(r30)
  651  000015e0  afc1fff4	sw	-12(r30),r1
  652  000015e4          	L21_LF2:
  653  000015e4  8fc10000	lw	r1,(r30)
  654  000015e8  90220000	lbu	r2,(r1)
  655  000015ec  64410000	snei	r1,r2,#0
  656  000015f0  1420000c	bnez	r1,L23_LF2
  657  000015f4  54000000	nop; delay slot nop
  658  000015f8  0800001c	j	L22_LF2
  659  000015fc  54000000	nop; delay slot nop
  660  00001600          	L23_LF2:
  661  00001600  8fc20000	lw	r2,(r30)
  662  00001604  20410001	addi	r1,r2,#1
  663  00001608  00011020	add	r2,r0,r1
  664  0000160c  afc20000	sw	(r30),r2
  665  00001610  0bffffd0	j	L21_LF2
  666  00001614  54000000	nop; delay slot nop
  667  00001618          	L22_LF2:
  668  00001618  23bdfff8	addi	r29,r29,#-8
  669  0000161c  001d0820	add	r1,r0,r29
  670  00001620  8fc20000	lw	r2,(r30)
  671  00001624  ac220000	sw	(r1),r2
  672  00001628  8fc20004	lw	r2,4(r30)
  673  0000162c  ac220004	sw	4(r1),r2
  674  00001630  0ffffe5c	jal	_dstrcpy
  675  00001634  54000000	nop; delay slot nop
  676  00001638  23bd0008	addi	r29,r29,#8
  677  0000163c  8fc1fff4	lw	r1,-12(r30)
  678  00001640  08000004	j	L20_LF2
  679  00001644  54000000	nop; delay slot nop
  680  00001648          	L20_LF2:
  681  00001648  8fa20000	lw	r2,0(r29)
  682  0000164c  8fdffff8	lw	r31,-8(r30)
  683  00001650  001ee820	add	r29,r0,r30
  684  00001654  8fdefffc	lw	r30,-4(r30)
  685  00001658  4be00000	jr	r31
  686  0000165c  54000000	nop
  687  00001660          	.endproc _dstrcat
  688  00001660          	.align 2
  689  00001660          	.proc _dstrncmp
  690  00001660          	.global _dstrncmp
  691  00001660          	_dstrncmp:
  692                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  693  00001660  afbefffc	sw	-4(r29),r30; push fp
  694  00001664  001df020	add	r30,r0,r29; fp = sp
  695  00001668  afbffff8	sw	-8(r29),r31; push ret addr
  696  0000166c  2fbd0018	subui	r29,r29,#24; alloc local storage
  697  00001670  afa20000	sw	0(r29),r2
  698  00001674  afa30004	sw	4(r29),r3
  699  00001678  54000000	nop
  700  0000167c  20010000	addi	r1,r0,#0
  701  00001680  afc1fff4	sw	-12(r30),r1
  702  00001684          	L25_LF2:
  703  00001684  8fc1fff4	lw	r1,-12(r30)
  704  00001688  8fc20008	lw	r2,8(r30)
  705  0000168c  0022082a	slt	r1,r1,r2
  706  00001690  1420000c	bnez	r1,L28_LF2
  707  00001694  54000000	nop; delay slot nop
  708  00001698  08000088	j	L26_LF2
  709  0000169c  54000000	nop; delay slot nop
  710  000016a0          	L28_LF2:
  711  000016a0  8fc10004	lw	r1,4(r30)
  712  000016a4  90220000	lbu	r2,(r1)
  713  000016a8  64410000	snei	r1,r2,#0
  714  000016ac  14200018	bnez	r1,L29_LF2
  715  000016b0  54000000	nop; delay slot nop
  716  000016b4  20010000	addi	r1,r0,#0
  717  000016b8  080000d8	j	L24_LF2
  718  000016bc  54000000	nop; delay slot nop
  719  000016c0  08000028	j	L30_LF2
  720  000016c4  54000000	nop; delay slot nop
  721  000016c8          	L29_LF2:
  722  000016c8  8fc10000	lw	r1,(r30)
  723  000016cc  8fc20004	lw	r2,4(r30)
  724  000016d0  90210000	lbu	r1,(r1)
  725  000016d4  90420000	lbu	r2,(r2)
  726  000016d8  00220829	sne	r1,r1,r2
  727  000016dc  1020000c	beqz	r1,L30_LF2
  728  000016e0  54000000	nop; delay slot nop
  729  000016e4  0800003c	j	L26_LF2
  730  000016e8  54000000	nop; delay slot nop
  731  000016ec          	L31_LF2:
  732  000016ec          	L30_LF2:
  733  000016ec  8fc20000	lw	r2,(r30)
  734  000016f0  20410001	addi	r1,r2,#1
  735  000016f4  00011020	add	r2,r0,r1
  736  000016f8  afc20000	sw	(r30),r2
  737  000016fc  8fc20004	lw	r2,4(r30)
  738  00001700  20410001	addi	r1,r2,#1
  739  00001704  00011020	add	r2,r0,r1
  740  00001708  afc20004	sw	4(r30),r2
  741  0000170c          	L27_LF2:
  742  0000170c  8fc2fff4	lw	r2,-12(r30)
  743  00001710  20410001	addi	r1,r2,#1
  744  00001714  00011020	add	r2,r0,r1
  745  00001718  afc2fff4	sw	-12(r30),r2
  746  0000171c  0bffff64	j	L25_LF2
  747  00001720  54000000	nop; delay slot nop
  748  00001724          	L26_LF2:
  749  00001724  8fc1fff4	lw	r1,-12(r30)
  750  00001728  8fc20008	lw	r2,8(r30)
  751  0000172c  00220828	seq	r1,r1,r2
  752  00001730  10200018	beqz	r1,L32_LF2
  753  00001734  54000000	nop; delay slot nop
  754  00001738  20010000	addi	r1,r0,#0
  755  0000173c  08000054	j	L24_LF2
  756  00001740  54000000	nop; delay slot nop
  757  00001744  0800004c	j	L33_LF2
  758  00001748  54000000	nop; delay slot nop
  759  0000174c          	L32_LF2:
  760  0000174c  8fc20000	lw	r2,(r30)
  761  00001750  90410000	lbu	r1,(r2)
  762  00001754  8fc20004	lw	r2,4(r30)
  763  00001758  90430000	lbu	r3,(r2)
  764  0000175c  00230822	sub	r1,r1,r3
  765  00001760  74220000	sgei	r2,r1,#0
  766  00001764  10400020	beqz	r2,L34_LF2
  767  00001768  54000000	nop; delay slot nop
  768  0000176c  8fc10000	lw	r1,(r30)
  769  00001770  8fc20004	lw	r2,4(r30)
  770  00001774  90210000	lbu	r1,(r1)
  771  00001778  90420000	lbu	r2,(r2)
  772  0000177c  00220829	sne	r1,r1,r2
  773  00001780  08000008	j	L35_LF2
  774  00001784  54000000	nop; delay slot nop
  775  00001788          	L34_LF2:
  776  00001788  2001ffff	addi	r1,r0,#-1
  777  0000178c          	L35_LF2:
  778  0000178c  08000004	j	L24_LF2
  779  00001790  54000000	nop; delay slot nop
  780  00001794          	L33_LF2:
  781  00001794          	L24_LF2:
  782  00001794  8fa20000	lw	r2,0(r29)
  783  00001798  8fa30004	lw	r3,4(r29)
  784  0000179c  8fdffff8	lw	r31,-8(r30)
  785  000017a0  001ee820	add	r29,r0,r30
  786  000017a4  8fdefffc	lw	r30,-4(r30)
  787  000017a8  4be00000	jr	r31
  788  000017ac  54000000	nop
  789  000017b0          	.endproc _dstrncmp
  790  000017b0          	.align 2
  791  000017b0          	.proc _dstrlen
  792  000017b0          	.global _dstrlen
  793  000017b0          	_dstrlen:
  794                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  795  000017b0  afbefffc	sw	-4(r29),r30; push fp
  796  000017b4  001df020	add	r30,r0,r29; fp = sp
  797  000017b8  afbffff8	sw	-8(r29),r31; push ret addr
  798  000017bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  799  000017c0  afa20000	sw	0(r29),r2
  800  000017c4  20010000	addi	r1,r0,#0
  801  000017c8  afc1fff4	sw	-12(r30),r1
  802  000017cc          	L37_LF2:
  803  000017cc  8fc10000	lw	r1,(r30)
  804  000017d0  20220001	addi	r2,r1,#1
  805  000017d4  afc20000	sw	(r30),r2
  806  000017d8  90210000	lbu	r1,(r1)
  807  000017dc  64220000	snei	r2,r1,#0
  808  000017e0  1440000c	bnez	r2,L39_LF2
  809  000017e4  54000000	nop; delay slot nop
  810  000017e8  0800001c	j	L38_LF2
  811  000017ec  54000000	nop; delay slot nop
  812  000017f0          	L39_LF2:
  813  000017f0  8fc2fff4	lw	r2,-12(r30)
  814  000017f4  20410001	addi	r1,r2,#1
  815  000017f8  00011020	add	r2,r0,r1
  816  000017fc  afc2fff4	sw	-12(r30),r2
  817  00001800  0bffffc8	j	L37_LF2
  818  00001804  54000000	nop; delay slot nop
  819  00001808          	L38_LF2:
  820  00001808  8fc1fff4	lw	r1,-12(r30)
  821  0000180c  08000004	j	L36_LF2
  822  00001810  54000000	nop; delay slot nop
  823  00001814          	L36_LF2:
  824  00001814  8fa20000	lw	r2,0(r29)
  825  00001818  8fdffff8	lw	r31,-8(r30)
  826  0000181c  001ee820	add	r29,r0,r30
  827  00001820  8fdefffc	lw	r30,-4(r30)
  828  00001824  4be00000	jr	r31
  829  00001828  54000000	nop
  830  0000182c          	.endproc _dstrlen
  831  0000182c          	.align 2
  832  0000182c          	.proc _dstrstr
  833  0000182c          	.global _dstrstr
  834  0000182c          	_dstrstr:
  835                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  836  0000182c  afbefffc	sw	-4(r29),r30; push fp
  837  00001830  001df020	add	r30,r0,r29; fp = sp
  838  00001834  afbffff8	sw	-8(r29),r31; push ret addr
  839  00001838  2fbd0018	subui	r29,r29,#24; alloc local storage
  840  0000183c  afa20000	sw	0(r29),r2
  841  00001840  23bdfff8	addi	r29,r29,#-8
  842  00001844  001d0820	add	r1,r0,r29
  843  00001848  8fc20004	lw	r2,4(r30)
  844  0000184c  ac220000	sw	(r1),r2
  845  00001850  0fffff5c	jal	_dstrlen
  846  00001854  54000000	nop; delay slot nop
  847  00001858  23bd0008	addi	r29,r29,#8
  848  0000185c  afc1fff4	sw	-12(r30),r1
  849  00001860          	L41_LF2:
  850  00001860  8fc10000	lw	r1,(r30)
  851  00001864  90220000	lbu	r2,(r1)
  852  00001868  64410000	snei	r1,r2,#0
  853  0000186c  1420000c	bnez	r1,L43_LF2
  854  00001870  54000000	nop; delay slot nop
  855  00001874  08000060	j	L42_LF2
  856  00001878  54000000	nop; delay slot nop
  857  0000187c          	L43_LF2:
  858  0000187c  23bdfff0	addi	r29,r29,#-16
  859  00001880  001d0820	add	r1,r0,r29
  860  00001884  8fc20000	lw	r2,(r30)
  861  00001888  ac220000	sw	(r1),r2
  862  0000188c  8fc20004	lw	r2,4(r30)
  863  00001890  ac220004	sw	4(r1),r2
  864  00001894  8fc2fff4	lw	r2,-12(r30)
  865  00001898  ac220008	sw	8(r1),r2
  866  0000189c  0ffffdc0	jal	_dstrncmp
  867  000018a0  54000000	nop; delay slot nop
  868  000018a4  23bd0010	addi	r29,r29,#16
  869  000018a8  64220000	snei	r2,r1,#0
  870  000018ac  14400010	bnez	r2,L44_LF2
  871  000018b0  54000000	nop; delay slot nop
  872  000018b4  8fc10000	lw	r1,(r30)
  873  000018b8  08000028	j	L40_LF2
  874  000018bc  54000000	nop; delay slot nop
  875  000018c0          	L44_LF2:
  876  000018c0  8fc20000	lw	r2,(r30)
  877  000018c4  20410001	addi	r1,r2,#1
  878  000018c8  00011020	add	r2,r0,r1
  879  000018cc  afc20000	sw	(r30),r2
  880  000018d0  0bffff8c	j	L41_LF2
  881  000018d4  54000000	nop; delay slot nop
  882  000018d8          	L42_LF2:
  883  000018d8  20010000	addi	r1,r0,#0
  884  000018dc  08000004	j	L40_LF2
  885  000018e0  54000000	nop; delay slot nop
  886  000018e4          	L40_LF2:
  887  000018e4  8fa20000	lw	r2,0(r29)
  888  000018e8  8fdffff8	lw	r31,-8(r30)
  889  000018ec  001ee820	add	r29,r0,r30
  890  000018f0  8fdefffc	lw	r30,-4(r30)
  891  000018f4  4be00000	jr	r31
  892  000018f8  54000000	nop
  893  000018fc          	.endproc _dstrstr
  894  000018fc          	.align 2
  895  000018fc          	.proc _dmindex
  896  000018fc          	.global _dmindex
  897  000018fc          	_dmindex:
  898                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  899  000018fc  afbefffc	sw	-4(r29),r30; push fp
  900  00001900  001df020	add	r30,r0,r29; fp = sp
  901  00001904  afbffff8	sw	-8(r29),r31; push ret addr
  902  00001908  2fbd0018	subui	r29,r29,#24; alloc local storage
  903  0000190c  afa20000	sw	0(r29),r2
  904  00001910  54000000	nop
  905  00001914          	L46_LF2:
  906  00001914  8fc10000	lw	r1,(r30)
  907  00001918  90220000	lbu	r2,(r1)
  908  0000191c  64410000	snei	r1,r2,#0
  909  00001920  1420000c	bnez	r1,L48_LF2
  910  00001924  54000000	nop; delay slot nop
  911  00001928  08000070	j	L47_LF2
  912  0000192c  54000000	nop; delay slot nop
  913  00001930          	L48_LF2:
  914  00001930  8fc10004	lw	r1,4(r30)
  915  00001934  afc1fff4	sw	-12(r30),r1
  916  00001938          	L49_LF2:
  917  00001938  8fc1fff4	lw	r1,-12(r30)
  918  0000193c  90220000	lbu	r2,(r1)
  919  00001940  64410000	snei	r1,r2,#0
  920  00001944  1420000c	bnez	r1,L52_LF2
  921  00001948  54000000	nop; delay slot nop
  922  0000194c  08000044	j	L50_LF2
  923  00001950  54000000	nop; delay slot nop
  924  00001954          	L52_LF2:
  925  00001954  8fc10000	lw	r1,(r30)
  926  00001958  8fc2fff4	lw	r2,-12(r30)
  927  0000195c  90210000	lbu	r1,(r1)
  928  00001960  90420000	lbu	r2,(r2)
  929  00001964  00220828	seq	r1,r1,r2
  930  00001968  10200010	beqz	r1,L51_LF2
  931  0000196c  54000000	nop; delay slot nop
  932  00001970  8fc10000	lw	r1,(r30)
  933  00001974  08000030	j	L45_LF2
  934  00001978  54000000	nop; delay slot nop
  935  0000197c          	L53_LF2:
  936  0000197c          	L51_LF2:
  937  0000197c  8fc2fff4	lw	r2,-12(r30)
  938  00001980  20410001	addi	r1,r2,#1
  939  00001984  00011020	add	r2,r0,r1
  940  00001988  afc2fff4	sw	-12(r30),r2
  941  0000198c  0bffffa8	j	L49_LF2
  942  00001990  54000000	nop; delay slot nop
  943  00001994          	L50_LF2:
  944  00001994  0bffff7c	j	L46_LF2
  945  00001998  54000000	nop; delay slot nop
  946  0000199c          	L47_LF2:
  947  0000199c  20010000	addi	r1,r0,#0
  948  000019a0  08000004	j	L45_LF2
  949  000019a4  54000000	nop; delay slot nop
  950  000019a8          	L45_LF2:
  951  000019a8  8fa20000	lw	r2,0(r29)
  952  000019ac  8fdffff8	lw	r31,-8(r30)
  953  000019b0  001ee820	add	r29,r0,r30
  954  000019b4  8fdefffc	lw	r30,-4(r30)
  955  000019b8  4be00000	jr	r31
  956  000019bc  54000000	nop
  957  000019c0          	.endproc _dmindex
  958  000019c0          	.align 2
  959  000019c0          	.proc _dindex
  960  000019c0          	.global _dindex
  961  000019c0          	_dindex:
  962                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  963  000019c0  afbefffc	sw	-4(r29),r30; push fp
  964  000019c4  001df020	add	r30,r0,r29; fp = sp
  965  000019c8  afbffff8	sw	-8(r29),r31; push ret addr
  966  000019cc  2fbd0010	subui	r29,r29,#16; alloc local storage
  967  000019d0  afa20000	sw	0(r29),r2
  968  000019d4  54000000	nop
  969  000019d8          	L55_LF2:
  970  000019d8  8fc10000	lw	r1,(r30)
  971  000019dc  90220000	lbu	r2,(r1)
  972  000019e0  64410000	snei	r1,r2,#0
  973  000019e4  1420000c	bnez	r1,L57_LF2
  974  000019e8  54000000	nop; delay slot nop
  975  000019ec  08000040	j	L56_LF2
  976  000019f0  54000000	nop; delay slot nop
  977  000019f4          	L57_LF2:
  978  000019f4  8fc10000	lw	r1,(r30)
  979  000019f8  90220000	lbu	r2,(r1)
  980  000019fc  8fc10004	lw	r1,4(r30)
  981  00001a00  00411028	seq	r2,r2,r1
  982  00001a04  10400010	beqz	r2,L58_LF2
  983  00001a08  54000000	nop; delay slot nop
  984  00001a0c  8fc10000	lw	r1,(r30)
  985  00001a10  08000028	j	L54_LF2
  986  00001a14  54000000	nop; delay slot nop
  987  00001a18          	L58_LF2:
  988  00001a18  8fc20000	lw	r2,(r30)
  989  00001a1c  20410001	addi	r1,r2,#1
  990  00001a20  00011020	add	r2,r0,r1
  991  00001a24  afc20000	sw	(r30),r2
  992  00001a28  0bffffac	j	L55_LF2
  993  00001a2c  54000000	nop; delay slot nop
  994  00001a30          	L56_LF2:
  995  00001a30  20010000	addi	r1,r0,#0
  996  00001a34  08000004	j	L54_LF2
  997  00001a38  54000000	nop; delay slot nop
  998  00001a3c          	L54_LF2:
  999  00001a3c  8fa20000	lw	r2,0(r29)
 1000  00001a40  8fdffff8	lw	r31,-8(r30)
 1001  00001a44  001ee820	add	r29,r0,r30
 1002  00001a48  8fdefffc	lw	r30,-4(r30)
 1003  00001a4c  4be00000	jr	r31
 1004  00001a50  54000000	nop
 1005  00001a54          	.endproc _dindex
 1006  00001a54          	.align 2
 1007  00001a54          	.proc _ditoa
 1008  00001a54          	.global _ditoa
 1009  00001a54          	_ditoa:
 1010                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1011  00001a54  afbefffc	sw	-4(r29),r30; push fp
 1012  00001a58  001df020	add	r30,r0,r29; fp = sp
 1013  00001a5c  afbffff8	sw	-8(r29),r31; push ret addr
 1014  00001a60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1015  00001a64  afa20000	sw	0(r29),r2
 1016  00001a68  afa30004	sw	4(r29),r3
 1017  00001a6c  8fc10000	lw	r1,(r30)
 1018  00001a70  68220000	slti	r2,r1,#0
 1019  00001a74  1040002c	beqz	r2,L60_LF2
 1020  00001a78  54000000	nop; delay slot nop
 1021  00001a7c  8fc10004	lw	r1,4(r30)
 1022  00001a80  20220001	addi	r2,r1,#1
 1023  00001a84  afc20004	sw	4(r30),r2
 1024  00001a88  2002002d	addi	r2,r0,(#0x2d)&0xff
 1025  00001a8c  a0220000	sb	(r1),r2
 1026  00001a90  8fc10000	lw	r1,(r30)
 1027  00001a94  00011022	sub	r2,r0,r1
 1028  00001a98  afc20000	sw	(r30),r2
 1029  00001a9c  08000118	j	L61_LF2
 1030  00001aa0  54000000	nop; delay slot nop
 1031  00001aa4          	L60_LF2:
 1032  00001aa4  8fc10000	lw	r1,(r30)
 1033  00001aa8  64220000	snei	r2,r1,#0
 1034  00001aac  14400020	bnez	r2,L62_LF2
 1035  00001ab0  54000000	nop; delay slot nop
 1036  00001ab4  8fc10004	lw	r1,4(r30)
 1037  00001ab8  20220001	addi	r2,r1,#1
 1038  00001abc  afc20004	sw	4(r30),r2
 1039  00001ac0  20020030	addi	r2,r0,(#0x30)&0xff
 1040  00001ac4  a0220000	sb	(r1),r2
 1041  00001ac8  080000ec	j	L61_LF2
 1042  00001acc  54000000	nop; delay slot nop
 1043  00001ad0          	L62_LF2:
 1044  00001ad0  20010001	addi	r1,r0,#1
 1045  00001ad4  afc1fff4	sw	-12(r30),r1
 1046  00001ad8          	L64_LF2:
 1047  00001ad8  8fc1fff4	lw	r1,-12(r30)
 1048  00001adc  8fc20000	lw	r2,(r30)
 1049  00001ae0  0022082c	sle	r1,r1,r2
 1050  00001ae4  1420000c	bnez	r1,L66_LF2
 1051  00001ae8  54000000	nop; delay slot nop
 1052  00001aec  08000024	j	L65_LF2
 1053  00001af0  54000000	nop; delay slot nop
 1054  00001af4          	L67_LF2:
 1055  00001af4          	L66_LF2:
 1056  00001af4  8fc1fff4	lw	r1,-12(r30)
 1057  00001af8  00011820	add	r3,r0,r1
 1058  00001afc  50620002	slli	r2,r3,#0x2
 1059  00001b00  00411020	add	r2,r2,r1
 1060  00001b04  50410001	slli	r1,r2,#0x1
 1061  00001b08  afc1fff4	sw	-12(r30),r1
 1062  00001b0c  0bffffc8	j	L64_LF2
 1063  00001b10  54000000	nop; delay slot nop
 1064  00001b14          	L65_LF2:
 1065  00001b14  54000000	nop
 1066  00001b18          	L68_LF2:
 1067  00001b18  8fc1fff4	lw	r1,-12(r30)
 1068  00001b1c  2002000a	addi	r2,r0,#10
 1069  00001b20  00200035	movi2fp	f0,r1
 1070  00001b24  00400835	movi2fp	f1,r2
 1071  00001b28  0401000f	div	f0,f0,f1
 1072  00001b2c  00000834	movfp2i	r1,f0
 1073  00001b30  afc1fff4	sw	-12(r30),r1
 1074  00001b34  8fc10004	lw	r1,4(r30)
 1075  00001b38  20220001	addi	r2,r1,#1
 1076  00001b3c  afc20004	sw	4(r30),r2
 1077  00001b40  8fc20000	lw	r2,(r30)
 1078  00001b44  8fc3fff4	lw	r3,-12(r30)
 1079  00001b48  00400035	movi2fp	f0,r2
 1080  00001b4c  00600835	movi2fp	f1,r3
 1081  00001b50  0401000f	div	f0,f0,f1
 1082  00001b54  00001034	movfp2i	r2,f0
 1083  00001b58  00021820	add	r3,r0,r2
 1084  00001b5c  20620030	addi	r2,r3,#48
 1085  00001b60  a0220000	sb	(r1),r2
 1086  00001b64  8fc10000	lw	r1,(r30)
 1087  00001b68  8fc3fff4	lw	r3,-12(r30)
 1088  00001b6c  00200035	movi2fp	f0,r1
 1089  00001b70  00600835	movi2fp	f1,r3
 1090  00001b74  0401000f	div	f0,f0,f1
 1091  00001b78  00001034	movfp2i	r2,f0
 1092  00001b7c  8fc3fff4	lw	r3,-12(r30)
 1093  00001b80  00400035	movi2fp	f0,r2
 1094  00001b84  00600835	movi2fp	f1,r3
 1095  00001b88  0401000e	mult	f0,f0,f1
 1096  00001b8c  00001034	movfp2i	r2,f0
 1097  00001b90  00220822	sub	r1,r1,r2
 1098  00001b94  afc10000	sw	(r30),r1
 1099  00001b98          	L70_LF2:
 1100  00001b98  8fc1fff4	lw	r1,-12(r30)
 1101  00001b9c  6c220001	sgti	r2,r1,#1
 1102  00001ba0  1440000c	bnez	r2,L71_LF2
 1103  00001ba4  54000000	nop; delay slot nop
 1104  00001ba8  0800000c	j	L61_LF2
 1105  00001bac  54000000	nop; delay slot nop
 1106  00001bb0          	L71_LF2:
 1107  00001bb0  0bffff64	j	L68_LF2
 1108  00001bb4  54000000	nop; delay slot nop
 1109  00001bb8          	L69_LF2:
 1110  00001bb8          	L63_LF2:
 1111  00001bb8          	L61_LF2:
 1112  00001bb8  8fc10004	lw	r1,4(r30)
 1113  00001bbc  20020000	addi	r2,r0,(#0x0)&0xff
 1114  00001bc0  a0220000	sb	(r1),r2
 1115  00001bc4          	L59_LF2:
 1116  00001bc4  8fa20000	lw	r2,0(r29)
 1117  00001bc8  8fa30004	lw	r3,4(r29)
 1118  00001bcc  8fdffff8	lw	r31,-8(r30)
 1119  00001bd0  001ee820	add	r29,r0,r30
 1120  00001bd4  8fdefffc	lw	r30,-4(r30)
 1121  00001bd8  4be00000	jr	r31
 1122  00001bdc  54000000	nop
 1123  00001be0          	.endproc _ditoa
 1124  00001be0          	.align 2
 1125  00001be0          	.proc _dstrtol
 1126  00001be0          	.global _dstrtol
 1127  00001be0          	_dstrtol:
 1128                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1129  00001be0  afbefffc	sw	-4(r29),r30; push fp
 1130  00001be4  001df020	add	r30,r0,r29; fp = sp
 1131  00001be8  afbffff8	sw	-8(r29),r31; push ret addr
 1132  00001bec  2fbd0020	subui	r29,r29,#32; alloc local storage
 1133  00001bf0  afa20000	sw	0(r29),r2
 1134  00001bf4  20010000	addi	r1,r0,#0
 1135  00001bf8  afc1fff4	sw	-12(r30),r1
 1136  00001bfc          	L73_LF2:
 1137  00001bfc  8fc10000	lw	r1,(r30)
 1138  00001c00  90220000	lbu	r2,(r1)
 1139  00001c04  60410020	seqi	r1,r2,#32
 1140  00001c08  14200034	bnez	r1,L75_LF2
 1141  00001c0c  54000000	nop; delay slot nop
 1142  00001c10  8fc10000	lw	r1,(r30)
 1143  00001c14  90220000	lbu	r2,(r1)
 1144  00001c18  60410009	seqi	r1,r2,#9
 1145  00001c1c  14200020	bnez	r1,L75_LF2
 1146  00001c20  54000000	nop; delay slot nop
 1147  00001c24  8fc10000	lw	r1,(r30)
 1148  00001c28  90220000	lbu	r2,(r1)
 1149  00001c2c  6041000a	seqi	r1,r2,#10
 1150  00001c30  1420000c	bnez	r1,L75_LF2
 1151  00001c34  54000000	nop; delay slot nop
 1152  00001c38  0800001c	j	L74_LF2
 1153  00001c3c  54000000	nop; delay slot nop
 1154  00001c40          	L75_LF2:
 1155  00001c40  8fc20000	lw	r2,(r30)
 1156  00001c44  20410001	addi	r1,r2,#1
 1157  00001c48  00011020	add	r2,r0,r1
 1158  00001c4c  afc20000	sw	(r30),r2
 1159  00001c50  0bffffa8	j	L73_LF2
 1160  00001c54  54000000	nop; delay slot nop
 1161  00001c58          	L74_LF2:
 1162  00001c58  8fc10004	lw	r1,4(r30)
 1163  00001c5c  64220000	snei	r2,r1,#0
 1164  00001c60  10400010	beqz	r2,L76_LF2
 1165  00001c64  54000000	nop; delay slot nop
 1166  00001c68  8fc10004	lw	r1,4(r30)
 1167  00001c6c  8fc20000	lw	r2,(r30)
 1168  00001c70  ac220000	sw	(r1),r2
 1169  00001c74          	L76_LF2:
 1170  00001c74  8fc10000	lw	r1,(r30)
 1171  00001c78  90220000	lbu	r2,(r1)
 1172  00001c7c  64410000	snei	r1,r2,#0
 1173  00001c80  14200010	bnez	r1,L77_LF2
 1174  00001c84  54000000	nop; delay slot nop
 1175  00001c88  8fc1fff4	lw	r1,-12(r30)
 1176  00001c8c  08000294	j	L72_LF2
 1177  00001c90  54000000	nop; delay slot nop
 1178  00001c94          	L77_LF2:
 1179  00001c94  8fc10000	lw	r1,(r30)
 1180  00001c98  90220000	lbu	r2,(r1)
 1181  00001c9c  6041002d	seqi	r1,r2,#45
 1182  00001ca0  10200024	beqz	r1,L78_LF2
 1183  00001ca4  54000000	nop; delay slot nop
 1184  00001ca8  2001ffff	addi	r1,r0,#-1
 1185  00001cac  afc1ffec	sw	-20(r30),r1
 1186  00001cb0  8fc20000	lw	r2,(r30)
 1187  00001cb4  20410001	addi	r1,r2,#1
 1188  00001cb8  00011020	add	r2,r0,r1
 1189  00001cbc  afc20000	sw	(r30),r2
 1190  00001cc0  0800000c	j	L79_LF2
 1191  00001cc4  54000000	nop; delay slot nop
 1192  00001cc8          	L78_LF2:
 1193  00001cc8  20010001	addi	r1,r0,#1
 1194  00001ccc  afc1ffec	sw	-20(r30),r1
 1195  00001cd0          	L79_LF2:
 1196  00001cd0  8fc10008	lw	r1,8(r30)
 1197  00001cd4  64220000	snei	r2,r1,#0
 1198  00001cd8  14400090	bnez	r2,L80_LF2
 1199  00001cdc  54000000	nop; delay slot nop
 1200  00001ce0  8fc10000	lw	r1,(r30)
 1201  00001ce4  90220000	lbu	r2,(r1)
 1202  00001ce8  60410030	seqi	r1,r2,#48
 1203  00001cec  10200074	beqz	r1,L81_LF2
 1204  00001cf0  54000000	nop; delay slot nop
 1205  00001cf4  8fc20000	lw	r2,(r30)
 1206  00001cf8  20410001	addi	r1,r2,#1
 1207  00001cfc  00011020	add	r2,r0,r1
 1208  00001d00  afc20000	sw	(r30),r2
 1209  00001d04  8fc10000	lw	r1,(r30)
 1210  00001d08  90220000	lbu	r2,(r1)
 1211  00001d0c  60410078	seqi	r1,r2,#120
 1212  00001d10  14200020	bnez	r1,L83_LF2
 1213  00001d14  54000000	nop; delay slot nop
 1214  00001d18  8fc10000	lw	r1,(r30)
 1215  00001d1c  90220000	lbu	r2,(r1)
 1216  00001d20  60410058	seqi	r1,r2,#88
 1217  00001d24  1420000c	bnez	r1,L83_LF2
 1218  00001d28  54000000	nop; delay slot nop
 1219  00001d2c  08000024	j	L82_LF2
 1220  00001d30  54000000	nop; delay slot nop
 1221  00001d34          	L83_LF2:
 1222  00001d34  20010010	addi	r1,r0,#16
 1223  00001d38  afc10008	sw	8(r30),r1
 1224  00001d3c  8fc20000	lw	r2,(r30)
 1225  00001d40  20410001	addi	r1,r2,#1
 1226  00001d44  00011020	add	r2,r0,r1
 1227  00001d48  afc20000	sw	(r30),r2
 1228  00001d4c  0800000c	j	L84_LF2
 1229  00001d50  54000000	nop; delay slot nop
 1230  00001d54          	L82_LF2:
 1231  00001d54  20010008	addi	r1,r0,#8
 1232  00001d58  afc10008	sw	8(r30),r1
 1233  00001d5c          	L84_LF2:
 1234  00001d5c  0800000c	j	L80_LF2
 1235  00001d60  54000000	nop; delay slot nop
 1236  00001d64          	L81_LF2:
 1237  00001d64  2001000a	addi	r1,r0,#10
 1238  00001d68  afc10008	sw	8(r30),r1
 1239  00001d6c          	L85_LF2:
 1240  00001d6c          	L80_LF2:
 1241  00001d6c  8fc10008	lw	r1,8(r30)
 1242  00001d70  70220000	slei	r2,r1,#0
 1243  00001d74  1440001c	bnez	r2,L87_LF2
 1244  00001d78  54000000	nop; delay slot nop
 1245  00001d7c  8fc10008	lw	r1,8(r30)
 1246  00001d80  6c220010	sgti	r2,r1,#16
 1247  00001d84  1440000c	bnez	r2,L87_LF2
 1248  00001d88  54000000	nop; delay slot nop
 1249  00001d8c  08000010	j	L86_LF2
 1250  00001d90  54000000	nop; delay slot nop
 1251  00001d94          	L87_LF2:
 1252  00001d94  8fc1fff4	lw	r1,-12(r30)
 1253  00001d98  08000188	j	L72_LF2
 1254  00001d9c  54000000	nop; delay slot nop
 1255  00001da0          	L86_LF2:
 1256  00001da0  54000000	nop
 1257  00001da4          	L88_LF2:
 1258  00001da4  8fc10000	lw	r1,(r30)
 1259  00001da8  90220000	lbu	r2,(r1)
 1260  00001dac  6c41002f	sgtui	r1,r2,#47
 1261  00001db0  10200030	beqz	r1,L91_LF2
 1262  00001db4  54000000	nop; delay slot nop
 1263  00001db8  8fc10000	lw	r1,(r30)
 1264  00001dbc  90220000	lbu	r2,(r1)
 1265  00001dc0  70410039	sleui	r1,r2,#57
 1266  00001dc4  1020001c	beqz	r1,L91_LF2
 1267  00001dc8  54000000	nop; delay slot nop
 1268  00001dcc  8fc10000	lw	r1,(r30)
 1269  00001dd0  90220000	lbu	r2,(r1)
 1270  00001dd4  2041ffd0	addi	r1,r2,#-48
 1271  00001dd8  afc1fff0	sw	-16(r30),r1
 1272  00001ddc  0800008c	j	L92_LF2
 1273  00001de0  54000000	nop; delay slot nop
 1274  00001de4          	L91_LF2:
 1275  00001de4  8fc10000	lw	r1,(r30)
 1276  00001de8  90220000	lbu	r2,(r1)
 1277  00001dec  6c410060	sgtui	r1,r2,#96
 1278  00001df0  10200030	beqz	r1,L93_LF2
 1279  00001df4  54000000	nop; delay slot nop
 1280  00001df8  8fc10000	lw	r1,(r30)
 1281  00001dfc  90220000	lbu	r2,(r1)
 1282  00001e00  7041007a	sleui	r1,r2,#122
 1283  00001e04  1020001c	beqz	r1,L93_LF2
 1284  00001e08  54000000	nop; delay slot nop
 1285  00001e0c  8fc10000	lw	r1,(r30)
 1286  00001e10  90220000	lbu	r2,(r1)
 1287  00001e14  2041ffa9	addi	r1,r2,#-87
 1288  00001e18  afc1fff0	sw	-16(r30),r1
 1289  00001e1c  0800004c	j	L92_LF2
 1290  00001e20  54000000	nop; delay slot nop
 1291  00001e24          	L93_LF2:
 1292  00001e24  8fc10000	lw	r1,(r30)
 1293  00001e28  90220000	lbu	r2,(r1)
 1294  00001e2c  6c410040	sgtui	r1,r2,#64
 1295  00001e30  10200030	beqz	r1,L95_LF2
 1296  00001e34  54000000	nop; delay slot nop
 1297  00001e38  8fc10000	lw	r1,(r30)
 1298  00001e3c  90220000	lbu	r2,(r1)
 1299  00001e40  7041005a	sleui	r1,r2,#90
 1300  00001e44  1020001c	beqz	r1,L95_LF2
 1301  00001e48  54000000	nop; delay slot nop
 1302  00001e4c  8fc10000	lw	r1,(r30)
 1303  00001e50  90220000	lbu	r2,(r1)
 1304  00001e54  2041ffc9	addi	r1,r2,#-55
 1305  00001e58  afc1fff0	sw	-16(r30),r1
 1306  00001e5c  0800000c	j	L92_LF2
 1307  00001e60  54000000	nop; delay slot nop
 1308  00001e64          	L95_LF2:
 1309  00001e64  200103e8	addi	r1,r0,#1000
 1310  00001e68  afc1fff0	sw	-16(r30),r1
 1311  00001e6c          	L96_LF2:
 1312  00001e6c          	L94_LF2:
 1313  00001e6c          	L92_LF2:
 1314  00001e6c  8fc1fff0	lw	r1,-16(r30)
 1315  00001e70  8fc20008	lw	r2,8(r30)
 1316  00001e74  0022082a	slt	r1,r1,r2
 1317  00001e78  10200040	beqz	r1,L90_LF2
 1318  00001e7c  54000000	nop; delay slot nop
 1319  00001e80  8fc1fff4	lw	r1,-12(r30)
 1320  00001e84  8fc20008	lw	r2,8(r30)
 1321  00001e88  00200035	movi2fp	f0,r1
 1322  00001e8c  00400835	movi2fp	f1,r2
 1323  00001e90  0401000e	mult	f0,f0,f1
 1324  00001e94  00000834	movfp2i	r1,f0
 1325  00001e98  afc1fff4	sw	-12(r30),r1
 1326  00001e9c  8fc1fff4	lw	r1,-12(r30)
 1327  00001ea0  8fc2fff0	lw	r2,-16(r30)
 1328  00001ea4  00220820	add	r1,r1,r2
 1329  00001ea8  afc1fff4	sw	-12(r30),r1
 1330  00001eac  8fc20000	lw	r2,(r30)
 1331  00001eb0  20410001	addi	r1,r2,#1
 1332  00001eb4  00011020	add	r2,r0,r1
 1333  00001eb8  afc20000	sw	(r30),r2
 1334  00001ebc          	L97_LF2:
 1335  00001ebc          	L90_LF2:
 1336  00001ebc  8fc1fff0	lw	r1,-16(r30)
 1337  00001ec0  8fc20008	lw	r2,8(r30)
 1338  00001ec4  0022082a	slt	r1,r1,r2
 1339  00001ec8  1420000c	bnez	r1,L98_LF2
 1340  00001ecc  54000000	nop; delay slot nop
 1341  00001ed0  0800000c	j	L89_LF2
 1342  00001ed4  54000000	nop; delay slot nop
 1343  00001ed8          	L98_LF2:
 1344  00001ed8  0bfffec8	j	L88_LF2
 1345  00001edc  54000000	nop; delay slot nop
 1346  00001ee0          	L89_LF2:
 1347  00001ee0  8fc10004	lw	r1,4(r30)
 1348  00001ee4  64220000	snei	r2,r1,#0
 1349  00001ee8  10400010	beqz	r2,L99_LF2
 1350  00001eec  54000000	nop; delay slot nop
 1351  00001ef0  8fc10004	lw	r1,4(r30)
 1352  00001ef4  8fc20000	lw	r2,(r30)
 1353  00001ef8  ac220000	sw	(r1),r2
 1354  00001efc          	L99_LF2:
 1355  00001efc  8fc1fff4	lw	r1,-12(r30)
 1356  00001f00  8fc2ffec	lw	r2,-20(r30)
 1357  00001f04  00200035	movi2fp	f0,r1
 1358  00001f08  00400835	movi2fp	f1,r2
 1359  00001f0c  0401000e	mult	f0,f0,f1
 1360  00001f10  00000834	movfp2i	r1,f0
 1361  00001f14  afc1fff4	sw	-12(r30),r1
 1362  00001f18  8fc1fff4	lw	r1,-12(r30)
 1363  00001f1c  08000004	j	L72_LF2
 1364  00001f20  54000000	nop; delay slot nop
 1365  00001f24          	L72_LF2:
 1366  00001f24  8fa20000	lw	r2,0(r29)
 1367  00001f28  8fdffff8	lw	r31,-8(r30)
 1368  00001f2c  001ee820	add	r29,r0,r30
 1369  00001f30  8fdefffc	lw	r30,-4(r30)
 1370  00001f34  4be00000	jr	r31
 1371  00001f38  54000000	nop
 1372  00001f3c          	.endproc _dstrtol
 1373  00001f3c          	.align 2
 1374  00001f3c          	.proc _bcopy
 1375  00001f3c          	.global _bcopy
 1376  00001f3c          	_bcopy:
 1377                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1378  00001f3c  afbefffc	sw	-4(r29),r30; push fp
 1379  00001f40  001df020	add	r30,r0,r29; fp = sp
 1380  00001f44  afbffff8	sw	-8(r29),r31; push ret addr
 1381  00001f48  2fbd0010	subui	r29,r29,#16; alloc local storage
 1382  00001f4c  afa20000	sw	0(r29),r2
 1383  00001f50  afa30004	sw	4(r29),r3
 1384  00001f54  54000000	nop
 1385  00001f58          	L101_LF2:
 1386  00001f58  8fc10008	lw	r1,8(r30)
 1387  00001f5c  2022ffff	addi	r2,r1,#-1
 1388  00001f60  afc20008	sw	8(r30),r2
 1389  00001f64  6c210000	sgti	r1,r1,#0
 1390  00001f68  1420000c	bnez	r1,L103_LF2
 1391  00001f6c  54000000	nop; delay slot nop
 1392  00001f70  0800002c	j	L102_LF2
 1393  00001f74  54000000	nop; delay slot nop
 1394  00001f78          	L103_LF2:
 1395  00001f78  8fc10004	lw	r1,4(r30)
 1396  00001f7c  20220001	addi	r2,r1,#1
 1397  00001f80  afc20004	sw	4(r30),r2
 1398  00001f84  8fc20000	lw	r2,(r30)
 1399  00001f88  20430001	addi	r3,r2,#1
 1400  00001f8c  afc30000	sw	(r30),r3
 1401  00001f90  80420000	lb	r2,(r2)
 1402  00001f94  a0220000	sb	(r1),r2
 1403  00001f98  0bffffbc	j	L101_LF2
 1404  00001f9c  54000000	nop; delay slot nop
 1405  00001fa0          	L102_LF2:
 1406  00001fa0          	L100_LF2:
 1407  00001fa0  8fa20000	lw	r2,0(r29)
 1408  00001fa4  8fa30004	lw	r3,4(r29)
 1409  00001fa8  8fdffff8	lw	r31,-8(r30)
 1410  00001fac  001ee820	add	r29,r0,r30
 1411  00001fb0  8fdefffc	lw	r30,-4(r30)
 1412  00001fb4  4be00000	jr	r31
 1413  00001fb8  54000000	nop
 1414  00001fbc          	.endproc _bcopy
 1415  00001fbc          	.align 2
 1416  00001fbc          	.proc _bzero
 1417  00001fbc          	.global _bzero
 1418  00001fbc          	_bzero:
 1419                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1420  00001fbc  afbefffc	sw	-4(r29),r30; push fp
 1421  00001fc0  001df020	add	r30,r0,r29; fp = sp
 1422  00001fc4  afbffff8	sw	-8(r29),r31; push ret addr
 1423  00001fc8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1424  00001fcc  afa20000	sw	0(r29),r2
 1425  00001fd0  54000000	nop
 1426  00001fd4          	L105_LF2:
 1427  00001fd4  8fc10004	lw	r1,4(r30)
 1428  00001fd8  2022ffff	addi	r2,r1,#-1
 1429  00001fdc  afc20004	sw	4(r30),r2
 1430  00001fe0  6c210000	sgti	r1,r1,#0
 1431  00001fe4  1420000c	bnez	r1,L107_LF2
 1432  00001fe8  54000000	nop; delay slot nop
 1433  00001fec  08000020	j	L106_LF2
 1434  00001ff0  54000000	nop; delay slot nop
 1435  00001ff4          	L107_LF2:
 1436  00001ff4  8fc10000	lw	r1,(r30)
 1437  00001ff8  20220001	addi	r2,r1,#1
 1438  00001ffc  afc20000	sw	(r30),r2
 1439  00002000  20020000	addi	r2,r0,(#0x0)&0xff
 1440  00002004  a0220000	sb	(r1),r2
 1441  00002008  0bffffc8	j	L105_LF2
 1442  0000200c  54000000	nop; delay slot nop
 1443  00002010          	L106_LF2:
 1444  00002010          	L104_LF2:
 1445  00002010  8fa20000	lw	r2,0(r29)
 1446  00002014  8fdffff8	lw	r31,-8(r30)
 1447  00002018  001ee820	add	r29,r0,r30
 1448  0000201c  8fdefffc	lw	r30,-4(r30)
 1449  00002020  4be00000	jr	r31
 1450  00002024  54000000	nop
 1451  00002028          	.endproc _bzero
 1452  00002028          	.align 2
 1453  00002028          	.proc _min
 1454  00002028          	.global _min
 1455  00002028          	_min:
 1456                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1457  00002028  afbefffc	sw	-4(r29),r30; push fp
 1458  0000202c  001df020	add	r30,r0,r29; fp = sp
 1459  00002030  afbffff8	sw	-8(r29),r31; push ret addr
 1460  00002034  2fbd0010	subui	r29,r29,#16; alloc local storage
 1461  00002038  afa20000	sw	0(r29),r2
 1462  0000203c  afa30004	sw	4(r29),r3
 1463  00002040  8fc10000	lw	r1,(r30)
 1464  00002044  8fc20004	lw	r2,4(r30)
 1465  00002048  0022182c	sle	r3,r1,r2
 1466  0000204c  14600008	bnez	r3,L109_LF2
 1467  00002050  54000000	nop; delay slot nop
 1468  00002054  8fc10004	lw	r1,4(r30)
 1469  00002058          	L109_LF2:
 1470  00002058  08000004	j	L108_LF2
 1471  0000205c  54000000	nop; delay slot nop
 1472  00002060          	L108_LF2:
 1473  00002060  8fa20000	lw	r2,0(r29)
 1474  00002064  8fa30004	lw	r3,4(r29)
 1475  00002068  8fdffff8	lw	r31,-8(r30)
 1476  0000206c  001ee820	add	r29,r0,r30
 1477  00002070  8fdefffc	lw	r30,-4(r30)
 1478  00002074  4be00000	jr	r31
 1479  00002078  54000000	nop
 1480  0000207c          	.endproc _min
 1481  0000207c          	.align 2
 1482  0000207c          	.proc _max
 1483  0000207c          	.global _max
 1484  0000207c          	_max:
 1485                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1486  0000207c  afbefffc	sw	-4(r29),r30; push fp
 1487  00002080  001df020	add	r30,r0,r29; fp = sp
 1488  00002084  afbffff8	sw	-8(r29),r31; push ret addr
 1489  00002088  2fbd0010	subui	r29,r29,#16; alloc local storage
 1490  0000208c  afa20000	sw	0(r29),r2
 1491  00002090  afa30004	sw	4(r29),r3
 1492  00002094  8fc10000	lw	r1,(r30)
 1493  00002098  8fc20004	lw	r2,4(r30)
 1494  0000209c  0022182d	sge	r3,r1,r2
 1495  000020a0  14600008	bnez	r3,L111_LF2
 1496  000020a4  54000000	nop; delay slot nop
 1497  000020a8  8fc10004	lw	r1,4(r30)
 1498  000020ac          	L111_LF2:
 1499  000020ac  08000004	j	L110_LF2
 1500  000020b0  54000000	nop; delay slot nop
 1501  000020b4          	L110_LF2:
 1502  000020b4  8fa20000	lw	r2,0(r29)
 1503  000020b8  8fa30004	lw	r3,4(r29)
 1504  000020bc  8fdffff8	lw	r31,-8(r30)
 1505  000020c0  001ee820	add	r29,r0,r30
 1506  000020c4  8fdefffc	lw	r30,-4(r30)
 1507  000020c8  4be00000	jr	r31
 1508  000020cc  54000000	nop
 1509  000020d0          	.endproc _max
 1510                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1511                      ;;;
 1512                      ;;; Most of the traps are called in files from libtraps.
 1515  000020d0          	.align 2
 1516  000020d0          	.proc _exit
 1517  000020d0          	.global _exit
 1518  000020d0          	_exit:
 1519  000020d0  44000300	trap	#0x300
 1520  000020d4  4be00000	jr	r31
 1521  000020d8  54000000	nop
 1522  000020dc          	.endproc _exit
 1524                      ; for the benefit of gcc.
 1525  000020dc          	.proc ___main
 1526  000020dc          	.global ___main
 1527  000020dc          	___main:
 1528  000020dc  4be00000	jr	r31
 1529  000020e0  54000000	nop
 1530  000020e4          	.endproc ___main
 1531  000020e4          	.text
 1532  000020e4          	.global _etext
 1533  000020e4          	_etext:
 1534  000020e4          	.align 3
 1535  000020e8          	.data
 1536  0000308e          	.global _edata
 1537  0000308e          	_edata:
