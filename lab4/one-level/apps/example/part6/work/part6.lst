 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 260
    4                      ; Text size: 4444
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: pid: %d, %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2070	
   82  00003008  69643a20	
   82  0000300c  25642c20	
   82  00003010  2573203c	
   82  00003014  68616e64	
   82  00003018  6c655f74	
   82  0000301c  6f5f7072	
   82  00003020  6f63735f	
   82  00003024  636f6d70	
   82  00003028  6c657465	
   82  0000302c  645f7365	
   82  00003030  6d617068	
   82  00003034  6f72653e	
   82  00003038  0a00    	
   83  0000303a          	.align 2
   84  0000303c          	LC1_LF0:
   85  0000303c  70617274	.ascii "part6 : pid: %d, Looping to a large number  \n\000"
   85  00003040  36203a20	
   85  00003044  7069643a	
   85  00003048  2025642c	
   85  0000304c  204c6f6f	
   85  00003050  70696e67	
   85  00003054  20746f20	
   85  00003058  61206c61	
   85  0000305c  72676520	
   85  00003060  6e756d62	
   85  00003064  65722020	
   85  00003068  0a00    	
   86  0000306a          	.align 2
   87  0000306c          	LC2_LF0:
   88  0000306c  70617274	.ascii "part6 : pid: %d, START! \n\000"
   88  00003070  36203a20	
   88  00003074  7069643a	
   88  00003078  2025642c	
   88  0000307c  20535441	
   88  00003080  52542120	
   88  00003084  0a00    	
   89  00003086          	.align 2
   90  00003088          	LC3_LF0:
   91  00003088  70617274	.ascii "part6 : pid: %d, looping complete  \n\000"
   91  0000308c  36203a20	
   91  00003090  7069643a	
   91  00003094  2025642c	
   91  00003098  206c6f6f	
   91  0000309c  70696e67	
   91  000030a0  20636f6d	
   91  000030a4  706c6574	
   91  000030a8  6520200a	
   91  000030ac  00      	
   92  000030ad          	.align 2
   93  000030b0          	LC4_LF0:
   94  000030b0  70617274	.ascii "part6 : pid: %d, Bad semaphore %d s_procs_completed !  \n\000"
   94  000030b4  36203a20	
   94  000030b8  7069643a	
   94  000030bc  2025642c	
   94  000030c0  20426164	
   94  000030c4  2073656d	
   94  000030c8  6170686f	
   94  000030cc  72652025	
   94  000030d0  6420735f	
   94  000030d4  70726f63	
   94  000030d8  735f636f	
   94  000030dc  6d706c65	
   94  000030e0  74656420	
   94  000030e4  2120200a	
   94  000030e8  00      	
   95  000030e9          	.align 2
   96  000030ec          	LC5_LF0:
   97  000030ec  70617274	.ascii "part6 : pid: %d, done \n\000"
   97  000030f0  36203a20	
   97  000030f4  7069643a	
   97  000030f8  2025642c	
   97  000030fc  20646f6e	
   97  00003100  65200a00	
   98  00003104          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc30004	lw	r3,4(r30)
  110  000010ec  0c001064	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  64410002	snei	r1,r2,#2
  113  000010f8  10200028	beqz	r1,L14_LF0
  114  000010fc  54000000	nop; not filled.
  115  00001100  23bdfff8	addi	r29,r29,#-8
  116  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  117  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  118  0000110c  afa40000	sw	(r29),r4
  119  00001110  0c000180	jal	_Printf
  120  00001114  54000000	nop; not filled.
  121  00001118  0c000280	jal	_Exit
  122  0000111c  54000000	nop; not filled.
  123  00001120  23bd0008	addi	r29,r29,#8
  124  00001124          	L14_LF0:
  125  00001124  23bdfff0	addi	r29,r29,#-16
  126  00001128  8c630004	lw	r3,4(r3)
  127  0000112c  afa30000	sw	(r29),r3
  128  00001130  20040000	addi	r4,r0,#0
  129  00001134  afa40004	sw	4(r29),r4
  130  00001138  2004000a	addi	r4,r0,#10
  131  0000113c  afa40008	sw	8(r29),r4
  132  00001140  0c000b14	jal	_dstrtol
  133  00001144  54000000	nop; not filled.
  134  00001148  00011820	add	r3,r0,r1
  135  0000114c  0c000150	jal	_getpid
  136  00001150  54000000	nop; not filled.
  137  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  138  00001158  2484303c	addui	r4,r4,(LC1_LF0)&0xffff
  139  0000115c  afa40000	sw	(r29),r4
  140  00001160  afa10004	sw	4(r29),r1
  141  00001164  0c00012c	jal	_Printf
  142  00001168  54000000	nop; not filled.
  143  0000116c  0c000130	jal	_getpid
  144  00001170  54000000	nop; not filled.
  145  00001174  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  146  00001178  2484306c	addui	r4,r4,(LC2_LF0)&0xffff
  147  0000117c  afa40000	sw	(r29),r4
  148  00001180  afa10004	sw	4(r29),r1
  149  00001184  0c00010c	jal	_Printf
  150  00001188  54000000	nop; not filled.
  151  0000118c  20020000	addi	r2,r0,#0
  152  00001190  23bd0010	addi	r29,r29,#16
  153  00001194  241fc34f	addui	r31,r0,#49999
  154  00001198          	L17_LF0:
  155  00001198  20420001	addi	r2,r2,#1
  156  0000119c  005f082c	sle	r1,r2,r31
  157  000011a0  1420fff4	bnez	r1,L17_LF0
  158  000011a4  54000000	nop; not filled.
  159  000011a8  0c0000f4	jal	_getpid
  160  000011ac  54000000	nop; not filled.
  161  000011b0  23bdfff8	addi	r29,r29,#-8
  162  000011b4  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  163  000011b8  24843088	addui	r4,r4,(LC3_LF0)&0xffff
  164  000011bc  afa40000	sw	(r29),r4
  165  000011c0  afa10004	sw	4(r29),r1
  166  000011c4  0c0000cc	jal	_Printf
  167  000011c8  54000000	nop; not filled.
  168  000011cc  afa30000	sw	(r29),r3
  169  000011d0  0c000114	jal	_sem_signal
  170  000011d4  54000000	nop; not filled.
  171  000011d8  23bd0008	addi	r29,r29,#8
  172  000011dc  64210001	snei	r1,r1,#1
  173  000011e0  10200038	beqz	r1,L20_LF0
  174  000011e4  54000000	nop; not filled.
  175  000011e8  0c0000b4	jal	_getpid
  176  000011ec  54000000	nop; not filled.
  177  000011f0  23bdfff0	addi	r29,r29,#-16
  178  000011f4  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  179  000011f8  248430b0	addui	r4,r4,(LC4_LF0)&0xffff
  180  000011fc  afa40000	sw	(r29),r4
  181  00001200  afa10004	sw	4(r29),r1
  182  00001204  afa30008	sw	8(r29),r3
  183  00001208  0c000088	jal	_Printf
  184  0000120c  54000000	nop; not filled.
  185  00001210  0c000188	jal	_Exit
  186  00001214  54000000	nop; not filled.
  187  00001218  23bd0010	addi	r29,r29,#16
  188  0000121c          	L20_LF0:
  189  0000121c  0c000080	jal	_getpid
  190  00001220  54000000	nop; not filled.
  191  00001224  23bdfff8	addi	r29,r29,#-8
  192  00001228  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  193  0000122c  248430ec	addui	r4,r4,(LC5_LF0)&0xffff
  194  00001230  afa40000	sw	(r29),r4
  195  00001234  afa10004	sw	4(r29),r1
  196  00001238  0c000058	jal	_Printf
  197  0000123c  54000000	nop; not filled.
  198  00001240  23bd0008	addi	r29,r29,#8
  199  00001244  0c000f00	jal	_exit
  200  00001248  54000000	nop
  201  0000124c          	.endproc _main
  202                      ;;;
  203                      ;;; Stub functions for DLX traps.
  204                      ;;;
  205                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  206                      ;;;
  207                      ;;; The traps such as Open and Close
  208                      ;;; (note the capital letters) are for use by user programs.  The traps
  209                      ;;; with names such as open and close (lower case) are for use by the OS.
  210                      ;;;
  213  0000124c          	.align 2
  215                      ;;; The following are the traps to be used by user-level programs
  216                      ;;;
  218  0000124c          	.align 2
  219  0000124c          	.proc _Open
  220  0000124c          	.global _Open
  221  0000124c          	_Open:
  222                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  223                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  224                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  225  0000124c  44000213	trap	#0x213
  226  00001250  4be00000	jr	r31
  227  00001254  54000000	nop
  228  00001258          	.endproc _Open
  230  00001258          	.proc _Close
  231  00001258          	.global _Close
  232  00001258          	_Close:
  233  00001258  44000214	trap	#0x214
  234  0000125c  4be00000	jr	r31
  235  00001260  54000000	nop
  236  00001264          	.endproc _Close
  238  00001264          	.proc _Read
  239  00001264          	.global _Read
  240  00001264          	_Read:
  241  00001264  44000210	trap	#0x210
  242  00001268  4be00000	jr	r31
  243  0000126c  54000000	nop
  244  00001270          	.endproc _Read
  246  00001270          	.proc _Write
  247  00001270          	.global _Write
  248  00001270          	_Write:
  249  00001270  44000211	trap	#0x211
  250  00001274  4be00000	jr	r31
  251  00001278  54000000	nop
  252  0000127c          	.endproc _Write
  254  0000127c          	.proc _Lseek
  255  0000127c          	.global _Lseek
  256  0000127c          	_Lseek:
  257  0000127c  44000212	trap	#0x212
  258  00001280  4be00000	jr	r31
  259  00001284  54000000	nop
  260  00001288          	.endproc _Lseek
  262  00001288          	.proc _Putchar
  263  00001288          	.global _Putchar
  264  00001288          	_Putchar:
  265  00001288  44000280	trap	#0x280
  266  0000128c  4be00000	jr	r31
  267  00001290  54000000	nop
  268  00001294          	.endproc _Putchar
  270  00001294          	.proc _Printf
  271  00001294          	.global _Printf
  272  00001294          	_Printf:
  273  00001294  44000201	trap	#0x201
  274  00001298  4be00000	jr	r31
  275  0000129c  54000000	nop
  276  000012a0          	.endproc _Printf
  278  000012a0          	.proc _getpid
  279  000012a0          	.global _getpid
  280  000012a0          	_getpid:
  281  000012a0  44000431	trap	#0x431
  282  000012a4  4be00000	jr	r31
  283  000012a8  54000000	nop
  284  000012ac          	.endproc _getpid
  286  000012ac          	.proc _process_create
  287  000012ac          	.global _process_create
  288  000012ac          	_process_create:
  289  000012ac  44000432	trap	#0x432
  290  000012b0  4be00000	jr	r31
  291  000012b4  54000000	nop
  292  000012b8          	.endproc _process_create
  294  000012b8          	.proc _shmget
  295  000012b8          	.global _shmget
  296  000012b8          	_shmget:
  297  000012b8  44000440	trap	#0x440
  298  000012bc  4be00000	jr	r31
  299  000012c0  54000000	nop
  300  000012c4          	.endproc _shmget
  302  000012c4          	.proc _shmat
  303  000012c4          	.global _shmat
  304  000012c4          	_shmat:
  305  000012c4  44000441	trap	#0x441
  306  000012c8  4be00000	jr	r31
  307  000012cc  54000000	nop
  308  000012d0          	.endproc _shmat
  310  000012d0          	.proc _sem_create
  311  000012d0          	.global _sem_create
  312  000012d0          	_sem_create:
  313  000012d0  44000450	trap	#0x450
  314  000012d4  4be00000	jr	r31
  315  000012d8  54000000	nop
  316  000012dc          	.endproc _sem_create
  318  000012dc          	.proc _sem_wait
  319  000012dc          	.global _sem_wait
  320  000012dc          	_sem_wait:
  321  000012dc  44000451	trap	#0x451
  322  000012e0  4be00000	jr	r31
  323  000012e4  54000000	nop
  324  000012e8          	.endproc _sem_wait
  326  000012e8          	.proc _sem_signal
  327  000012e8          	.global _sem_signal
  328  000012e8          	_sem_signal:
  329  000012e8  44000452	trap	#0x452
  330  000012ec  4be00000	jr	r31
  331  000012f0  54000000	nop
  332  000012f4          	.endproc _sem_signal
  334  000012f4          	.proc _lock_create
  335  000012f4          	.global _lock_create
  336  000012f4          	_lock_create:
  337  000012f4  44000453	trap	#0x453
  338  000012f8  4be00000	jr	r31
  339  000012fc  54000000	nop
  340  00001300          	.endproc _lock_create
  342  00001300          	.proc _lock_acquire
  343  00001300          	.global _lock_acquire
  344  00001300          	_lock_acquire:
  345  00001300  44000454	trap	#0x454
  346  00001304  4be00000	jr	r31
  347  00001308  54000000	nop
  348  0000130c          	.endproc _lock_acquire
  350  0000130c          	.proc _lock_release
  351  0000130c          	.global _lock_release
  352  0000130c          	_lock_release:
  353  0000130c  44000455	trap	#0x455
  354  00001310  4be00000	jr	r31
  355  00001314  54000000	nop
  356  00001318          	.endproc _lock_release
  358  00001318          	.proc _cond_create
  359  00001318          	.global _cond_create
  360  00001318          	_cond_create:
  361  00001318  44000456	trap	#0x456
  362  0000131c  4be00000	jr	r31
  363  00001320  54000000	nop
  364  00001324          	.endproc _cond_create
  366  00001324          	.proc _cond_wait
  367  00001324          	.global _cond_wait
  368  00001324          	_cond_wait:
  369  00001324  44000457	trap	#0x457
  370  00001328  4be00000	jr	r31
  371  0000132c  54000000	nop
  372  00001330          	.endproc _cond_wait
  374  00001330          	.proc _cond_signal
  375  00001330          	.global _cond_signal
  376  00001330          	_cond_signal:
  377  00001330  44000458	trap	#0x458
  378  00001334  4be00000	jr	r31
  379  00001338  54000000	nop
  380  0000133c          	.endproc _cond_signal
  382  0000133c          	.proc _cond_broadcast
  383  0000133c          	.global _cond_broadcast
  384  0000133c          	_cond_broadcast:
  385  0000133c  44000459	trap	#0x459
  386  00001340  4be00000	jr	r31
  387  00001344  54000000	nop
  388  00001348          	.endproc _cond_broadcast
  390  00001348          	.proc _mbox_create
  391  00001348          	.global _mbox_create
  392  00001348          	_mbox_create:
  393  00001348  44000460	trap	#0x460
  394  0000134c  4be00000	jr	r31
  395  00001350  54000000	nop
  396  00001354          	.endproc _mbox_create
  398  00001354          	.proc _mbox_open
  399  00001354          	.global _mbox_open
  400  00001354          	_mbox_open:
  401  00001354  44000461	trap	#0x461
  402  00001358  4be00000	jr	r31
  403  0000135c  54000000	nop
  404  00001360          	.endproc _mbox_open
  406  00001360          	.proc _mbox_close
  407  00001360          	.global _mbox_close
  408  00001360          	_mbox_close:
  409  00001360  44000462	trap	#0x462
  410  00001364  4be00000	jr	r31
  411  00001368  54000000	nop
  412  0000136c          	.endproc _mbox_close
  414  0000136c          	.proc _mbox_send
  415  0000136c          	.global _mbox_send
  416  0000136c          	_mbox_send:
  417  0000136c  44000463	trap	#0x463
  418  00001370  4be00000	jr	r31
  419  00001374  54000000	nop
  420  00001378          	.endproc _mbox_send
  422  00001378          	.proc _mbox_recv
  423  00001378          	.global _mbox_recv
  424  00001378          	_mbox_recv:
  425  00001378  44000464	trap	#0x464
  426  0000137c  4be00000	jr	r31
  427  00001380  54000000	nop
  428  00001384          	.endproc _mbox_recv
  430  00001384          	.proc _sleep
  431  00001384          	.global _sleep
  432  00001384          	_sleep:
  433  00001384  44000465	trap	#0x465
  434  00001388  4be00000	jr	r31
  435  0000138c  54000000	nop
  436  00001390          	.endproc _sleep
  438  00001390          	.proc _yield
  439  00001390          	.global _yield
  440  00001390          	_yield:
  441  00001390  44000466	trap	#0x466
  442  00001394  4be00000	jr	r31
  443  00001398  54000000	nop
  444  0000139c          	.endproc _yield
  447  0000139c          	.proc _Exit
  448  0000139c          	.global _Exit
  449  0000139c          	_Exit:
  450  0000139c  44000500	trap	#0x500
  451  000013a0  4be00000	jr	r31
  452  000013a4  54000000	nop
  453  000013a8          	.endproc _Exit
  456  000013a8          	.proc _malloc
  457  000013a8          	.global _malloc
  458  000013a8          	_malloc:
  459  000013a8  44000467	trap	#0x467
  460  000013ac  4be00000	jr	r31
  461  000013b0          	.endproc _malloc
  464  000013b0          	.proc _mfree
  465  000013b0          	.global _mfree
  466  000013b0          	_mfree:
  467  000013b0  44000468	trap	#0x468
  468  000013b4  4be00000	jr	r31
  469  000013b8          	.endproc _mfree
  470                      ; Compiled by GCC
  472  000013b8          	.align 2
  473  000013b8          	.proc _isspace
  474  000013b8          	.global _isspace
  475  000013b8          	_isspace:
  476                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  477  000013b8  afbefffc	sw	-4(r29),r30; push fp
  478  000013bc  001df020	add	r30,r0,r29; fp = sp
  479  000013c0  afbffff8	sw	-8(r29),r31; push ret addr
  480  000013c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  481  000013c8  afa20000	sw	0(r29),r2
  482  000013cc  afa30004	sw	4(r29),r3
  483  000013d0  afa40008	sw	8(r29),r4
  484  000013d4  83c20003	lb	r2,3(r30)
  485  000013d8  20010000	addi	r1,r0,#0
  486  000013dc  304300ff	andi	r3,r2,#0x00ff
  487  000013e0  60640020	seqi	r4,r3,#32
  488  000013e4  1480002c	bnez	r4,L3_LF2
  489  000013e8  54000000	nop; delay slot nop
  490  000013ec  304300ff	andi	r3,r2,#0x00ff
  491  000013f0  60640009	seqi	r4,r3,#9
  492  000013f4  1480001c	bnez	r4,L3_LF2
  493  000013f8  54000000	nop; delay slot nop
  494  000013fc  304300ff	andi	r3,r2,#0x00ff
  495  00001400  6064000a	seqi	r4,r3,#10
  496  00001404  1480000c	bnez	r4,L3_LF2
  497  00001408  54000000	nop; delay slot nop
  498  0000140c  08000008	j	L2_LF2
  499  00001410  54000000	nop; delay slot nop
  500  00001414          	L3_LF2:
  501  00001414  20010001	addi	r1,r0,#1
  502  00001418          	L2_LF2:
  503  00001418  08000004	j	L1_LF2
  504  0000141c  54000000	nop; delay slot nop
  505  00001420          	L1_LF2:
  506  00001420  8fa20000	lw	r2,0(r29)
  507  00001424  8fa30004	lw	r3,4(r29)
  508  00001428  8fa40008	lw	r4,8(r29)
  509  0000142c  8fdffff8	lw	r31,-8(r30)
  510  00001430  001ee820	add	r29,r0,r30
  511  00001434  8fdefffc	lw	r30,-4(r30)
  512  00001438  4be00000	jr	r31
  513  0000143c  54000000	nop
  514  00001440          	.endproc _isspace
  515  00001440          	.align 2
  516  00001440          	.proc _isxdigit
  517  00001440          	.global _isxdigit
  518  00001440          	_isxdigit:
  519                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  520  00001440  afbefffc	sw	-4(r29),r30; push fp
  521  00001444  001df020	add	r30,r0,r29; fp = sp
  522  00001448  afbffff8	sw	-8(r29),r31; push ret addr
  523  0000144c  2fbd0018	subui	r29,r29,#24; alloc local storage
  524  00001450  afa20000	sw	0(r29),r2
  525  00001454  afa30004	sw	4(r29),r3
  526  00001458  afa40008	sw	8(r29),r4
  527  0000145c  83c20003	lb	r2,3(r30)
  528  00001460  20010000	addi	r1,r0,#0
  529  00001464  304300ff	andi	r3,r2,#0x00ff
  530  00001468  6c64002f	sgtui	r4,r3,#47
  531  0000146c  1080001c	beqz	r4,L7_LF2
  532  00001470  54000000	nop; delay slot nop
  533  00001474  304300ff	andi	r3,r2,#0x00ff
  534  00001478  70640039	sleui	r4,r3,#57
  535  0000147c  1480005c	bnez	r4,L6_LF2
  536  00001480  54000000	nop; delay slot nop
  537  00001484  08000004	j	L7_LF2
  538  00001488  54000000	nop; delay slot nop
  539  0000148c          	L7_LF2:
  540  0000148c  304300ff	andi	r3,r2,#0x00ff
  541  00001490  6c640060	sgtui	r4,r3,#96
  542  00001494  1080001c	beqz	r4,L8_LF2
  543  00001498  54000000	nop; delay slot nop
  544  0000149c  304300ff	andi	r3,r2,#0x00ff
  545  000014a0  70640066	sleui	r4,r3,#102
  546  000014a4  14800034	bnez	r4,L6_LF2
  547  000014a8  54000000	nop; delay slot nop
  548  000014ac  08000004	j	L8_LF2
  549  000014b0  54000000	nop; delay slot nop
  550  000014b4          	L8_LF2:
  551  000014b4  304300ff	andi	r3,r2,#0x00ff
  552  000014b8  6c640040	sgtui	r4,r3,#64
  553  000014bc  10800020	beqz	r4,L5_LF2
  554  000014c0  54000000	nop; delay slot nop
  555  000014c4  304300ff	andi	r3,r2,#0x00ff
  556  000014c8  70640041	sleui	r4,r3,#65
  557  000014cc  1480000c	bnez	r4,L6_LF2
  558  000014d0  54000000	nop; delay slot nop
  559  000014d4  08000008	j	L5_LF2
  560  000014d8  54000000	nop; delay slot nop
  561  000014dc          	L6_LF2:
  562  000014dc  20010001	addi	r1,r0,#1
  563  000014e0          	L5_LF2:
  564  000014e0  08000004	j	L4_LF2
  565  000014e4  54000000	nop; delay slot nop
  566  000014e8          	L4_LF2:
  567  000014e8  8fa20000	lw	r2,0(r29)
  568  000014ec  8fa30004	lw	r3,4(r29)
  569  000014f0  8fa40008	lw	r4,8(r29)
  570  000014f4  8fdffff8	lw	r31,-8(r30)
  571  000014f8  001ee820	add	r29,r0,r30
  572  000014fc  8fdefffc	lw	r30,-4(r30)
  573  00001500  4be00000	jr	r31
  574  00001504  54000000	nop
  575  00001508          	.endproc _isxdigit
  576  00001508          	.align 2
  577  00001508          	.proc _dstrcpy
  578  00001508          	.global _dstrcpy
  579  00001508          	_dstrcpy:
  580                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  581  00001508  afbefffc	sw	-4(r29),r30; push fp
  582  0000150c  001df020	add	r30,r0,r29; fp = sp
  583  00001510  afbffff8	sw	-8(r29),r31; push ret addr
  584  00001514  2fbd0018	subui	r29,r29,#24; alloc local storage
  585  00001518  afa20000	sw	0(r29),r2
  586  0000151c  afa30004	sw	4(r29),r3
  587  00001520  8fc10000	lw	r1,(r30)
  588  00001524  afc1fff4	sw	-12(r30),r1
  589  00001528          	L10_LF2:
  590  00001528  8fc10000	lw	r1,(r30)
  591  0000152c  20220001	addi	r2,r1,#1
  592  00001530  afc20000	sw	(r30),r2
  593  00001534  8fc20004	lw	r2,4(r30)
  594  00001538  20430001	addi	r3,r2,#1
  595  0000153c  afc30004	sw	4(r30),r3
  596  00001540  80420000	lb	r2,(r2)
  597  00001544  a0220000	sb	(r1),r2
  598  00001548  a3c2fff3	sb	-13(r30),r2
  599  0000154c          	L12_LF2:
  600  0000154c  93c1fff3	lbu	r1,-13(r30)
  601  00001550  64220000	snei	r2,r1,#0
  602  00001554  1440000c	bnez	r2,L13_LF2
  603  00001558  54000000	nop; delay slot nop
  604  0000155c  0800000c	j	L11_LF2
  605  00001560  54000000	nop; delay slot nop
  606  00001564          	L13_LF2:
  607  00001564  0bffffc0	j	L10_LF2
  608  00001568  54000000	nop; delay slot nop
  609  0000156c          	L11_LF2:
  610  0000156c  8fc1fff4	lw	r1,-12(r30)
  611  00001570  08000004	j	L9_LF2
  612  00001574  54000000	nop; delay slot nop
  613  00001578          	L9_LF2:
  614  00001578  8fa20000	lw	r2,0(r29)
  615  0000157c  8fa30004	lw	r3,4(r29)
  616  00001580  8fdffff8	lw	r31,-8(r30)
  617  00001584  001ee820	add	r29,r0,r30
  618  00001588  8fdefffc	lw	r30,-4(r30)
  619  0000158c  4be00000	jr	r31
  620  00001590  54000000	nop
  621  00001594          	.endproc _dstrcpy
  622  00001594          	.align 2
  623  00001594          	.proc _dstrncpy
  624  00001594          	.global _dstrncpy
  625  00001594          	_dstrncpy:
  626                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  627  00001594  afbefffc	sw	-4(r29),r30; push fp
  628  00001598  001df020	add	r30,r0,r29; fp = sp
  629  0000159c  afbffff8	sw	-8(r29),r31; push ret addr
  630  000015a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  631  000015a4  afa20000	sw	0(r29),r2
  632  000015a8  afa30004	sw	4(r29),r3
  633  000015ac  8fc10000	lw	r1,(r30)
  634  000015b0  afc1fff4	sw	-12(r30),r1
  635  000015b4          	L15_LF2:
  636  000015b4  8fc10008	lw	r1,8(r30)
  637  000015b8  2022ffff	addi	r2,r1,#-1
  638  000015bc  afc20008	sw	8(r30),r2
  639  000015c0  70210000	slei	r1,r1,#0
  640  000015c4  1020000c	beqz	r1,L18_LF2
  641  000015c8  54000000	nop; delay slot nop
  642  000015cc  08000048	j	L16_LF2
  643  000015d0  54000000	nop; delay slot nop
  644  000015d4          	L18_LF2:
  645  000015d4  8fc10000	lw	r1,(r30)
  646  000015d8  20220001	addi	r2,r1,#1
  647  000015dc  afc20000	sw	(r30),r2
  648  000015e0  8fc20004	lw	r2,4(r30)
  649  000015e4  20430001	addi	r3,r2,#1
  650  000015e8  afc30004	sw	4(r30),r3
  651  000015ec  80420000	lb	r2,(r2)
  652  000015f0  a0220000	sb	(r1),r2
  653  000015f4  a3c2fff3	sb	-13(r30),r2
  654  000015f8          	L17_LF2:
  655  000015f8  93c1fff3	lbu	r1,-13(r30)
  656  000015fc  64220000	snei	r2,r1,#0
  657  00001600  1440000c	bnez	r2,L19_LF2
  658  00001604  54000000	nop; delay slot nop
  659  00001608  0800000c	j	L16_LF2
  660  0000160c  54000000	nop; delay slot nop
  661  00001610          	L19_LF2:
  662  00001610  0bffffa0	j	L15_LF2
  663  00001614  54000000	nop; delay slot nop
  664  00001618          	L16_LF2:
  665  00001618  8fc1fff4	lw	r1,-12(r30)
  666  0000161c  08000004	j	L14_LF2
  667  00001620  54000000	nop; delay slot nop
  668  00001624          	L14_LF2:
  669  00001624  8fa20000	lw	r2,0(r29)
  670  00001628  8fa30004	lw	r3,4(r29)
  671  0000162c  8fdffff8	lw	r31,-8(r30)
  672  00001630  001ee820	add	r29,r0,r30
  673  00001634  8fdefffc	lw	r30,-4(r30)
  674  00001638  4be00000	jr	r31
  675  0000163c  54000000	nop
  676  00001640          	.endproc _dstrncpy
  677  00001640          	.align 2
  678  00001640          	.proc _dstrcat
  679  00001640          	.global _dstrcat
  680  00001640          	_dstrcat:
  681                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  682  00001640  afbefffc	sw	-4(r29),r30; push fp
  683  00001644  001df020	add	r30,r0,r29; fp = sp
  684  00001648  afbffff8	sw	-8(r29),r31; push ret addr
  685  0000164c  2fbd0018	subui	r29,r29,#24; alloc local storage
  686  00001650  afa20000	sw	0(r29),r2
  687  00001654  8fc10000	lw	r1,(r30)
  688  00001658  afc1fff4	sw	-12(r30),r1
  689  0000165c          	L21_LF2:
  690  0000165c  8fc10000	lw	r1,(r30)
  691  00001660  90220000	lbu	r2,(r1)
  692  00001664  64410000	snei	r1,r2,#0
  693  00001668  1420000c	bnez	r1,L23_LF2
  694  0000166c  54000000	nop; delay slot nop
  695  00001670  0800001c	j	L22_LF2
  696  00001674  54000000	nop; delay slot nop
  697  00001678          	L23_LF2:
  698  00001678  8fc20000	lw	r2,(r30)
  699  0000167c  20410001	addi	r1,r2,#1
  700  00001680  00011020	add	r2,r0,r1
  701  00001684  afc20000	sw	(r30),r2
  702  00001688  0bffffd0	j	L21_LF2
  703  0000168c  54000000	nop; delay slot nop
  704  00001690          	L22_LF2:
  705  00001690  23bdfff8	addi	r29,r29,#-8
  706  00001694  001d0820	add	r1,r0,r29
  707  00001698  8fc20000	lw	r2,(r30)
  708  0000169c  ac220000	sw	(r1),r2
  709  000016a0  8fc20004	lw	r2,4(r30)
  710  000016a4  ac220004	sw	4(r1),r2
  711  000016a8  0ffffe5c	jal	_dstrcpy
  712  000016ac  54000000	nop; delay slot nop
  713  000016b0  23bd0008	addi	r29,r29,#8
  714  000016b4  8fc1fff4	lw	r1,-12(r30)
  715  000016b8  08000004	j	L20_LF2
  716  000016bc  54000000	nop; delay slot nop
  717  000016c0          	L20_LF2:
  718  000016c0  8fa20000	lw	r2,0(r29)
  719  000016c4  8fdffff8	lw	r31,-8(r30)
  720  000016c8  001ee820	add	r29,r0,r30
  721  000016cc  8fdefffc	lw	r30,-4(r30)
  722  000016d0  4be00000	jr	r31
  723  000016d4  54000000	nop
  724  000016d8          	.endproc _dstrcat
  725  000016d8          	.align 2
  726  000016d8          	.proc _dstrncmp
  727  000016d8          	.global _dstrncmp
  728  000016d8          	_dstrncmp:
  729                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  730  000016d8  afbefffc	sw	-4(r29),r30; push fp
  731  000016dc  001df020	add	r30,r0,r29; fp = sp
  732  000016e0  afbffff8	sw	-8(r29),r31; push ret addr
  733  000016e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  734  000016e8  afa20000	sw	0(r29),r2
  735  000016ec  afa30004	sw	4(r29),r3
  736  000016f0  54000000	nop
  737  000016f4  20010000	addi	r1,r0,#0
  738  000016f8  afc1fff4	sw	-12(r30),r1
  739  000016fc          	L25_LF2:
  740  000016fc  8fc1fff4	lw	r1,-12(r30)
  741  00001700  8fc20008	lw	r2,8(r30)
  742  00001704  0022082a	slt	r1,r1,r2
  743  00001708  1420000c	bnez	r1,L28_LF2
  744  0000170c  54000000	nop; delay slot nop
  745  00001710  08000088	j	L26_LF2
  746  00001714  54000000	nop; delay slot nop
  747  00001718          	L28_LF2:
  748  00001718  8fc10004	lw	r1,4(r30)
  749  0000171c  90220000	lbu	r2,(r1)
  750  00001720  64410000	snei	r1,r2,#0
  751  00001724  14200018	bnez	r1,L29_LF2
  752  00001728  54000000	nop; delay slot nop
  753  0000172c  20010000	addi	r1,r0,#0
  754  00001730  080000d8	j	L24_LF2
  755  00001734  54000000	nop; delay slot nop
  756  00001738  08000028	j	L30_LF2
  757  0000173c  54000000	nop; delay slot nop
  758  00001740          	L29_LF2:
  759  00001740  8fc10000	lw	r1,(r30)
  760  00001744  8fc20004	lw	r2,4(r30)
  761  00001748  90210000	lbu	r1,(r1)
  762  0000174c  90420000	lbu	r2,(r2)
  763  00001750  00220829	sne	r1,r1,r2
  764  00001754  1020000c	beqz	r1,L30_LF2
  765  00001758  54000000	nop; delay slot nop
  766  0000175c  0800003c	j	L26_LF2
  767  00001760  54000000	nop; delay slot nop
  768  00001764          	L31_LF2:
  769  00001764          	L30_LF2:
  770  00001764  8fc20000	lw	r2,(r30)
  771  00001768  20410001	addi	r1,r2,#1
  772  0000176c  00011020	add	r2,r0,r1
  773  00001770  afc20000	sw	(r30),r2
  774  00001774  8fc20004	lw	r2,4(r30)
  775  00001778  20410001	addi	r1,r2,#1
  776  0000177c  00011020	add	r2,r0,r1
  777  00001780  afc20004	sw	4(r30),r2
  778  00001784          	L27_LF2:
  779  00001784  8fc2fff4	lw	r2,-12(r30)
  780  00001788  20410001	addi	r1,r2,#1
  781  0000178c  00011020	add	r2,r0,r1
  782  00001790  afc2fff4	sw	-12(r30),r2
  783  00001794  0bffff64	j	L25_LF2
  784  00001798  54000000	nop; delay slot nop
  785  0000179c          	L26_LF2:
  786  0000179c  8fc1fff4	lw	r1,-12(r30)
  787  000017a0  8fc20008	lw	r2,8(r30)
  788  000017a4  00220828	seq	r1,r1,r2
  789  000017a8  10200018	beqz	r1,L32_LF2
  790  000017ac  54000000	nop; delay slot nop
  791  000017b0  20010000	addi	r1,r0,#0
  792  000017b4  08000054	j	L24_LF2
  793  000017b8  54000000	nop; delay slot nop
  794  000017bc  0800004c	j	L33_LF2
  795  000017c0  54000000	nop; delay slot nop
  796  000017c4          	L32_LF2:
  797  000017c4  8fc20000	lw	r2,(r30)
  798  000017c8  90410000	lbu	r1,(r2)
  799  000017cc  8fc20004	lw	r2,4(r30)
  800  000017d0  90430000	lbu	r3,(r2)
  801  000017d4  00230822	sub	r1,r1,r3
  802  000017d8  74220000	sgei	r2,r1,#0
  803  000017dc  10400020	beqz	r2,L34_LF2
  804  000017e0  54000000	nop; delay slot nop
  805  000017e4  8fc10000	lw	r1,(r30)
  806  000017e8  8fc20004	lw	r2,4(r30)
  807  000017ec  90210000	lbu	r1,(r1)
  808  000017f0  90420000	lbu	r2,(r2)
  809  000017f4  00220829	sne	r1,r1,r2
  810  000017f8  08000008	j	L35_LF2
  811  000017fc  54000000	nop; delay slot nop
  812  00001800          	L34_LF2:
  813  00001800  2001ffff	addi	r1,r0,#-1
  814  00001804          	L35_LF2:
  815  00001804  08000004	j	L24_LF2
  816  00001808  54000000	nop; delay slot nop
  817  0000180c          	L33_LF2:
  818  0000180c          	L24_LF2:
  819  0000180c  8fa20000	lw	r2,0(r29)
  820  00001810  8fa30004	lw	r3,4(r29)
  821  00001814  8fdffff8	lw	r31,-8(r30)
  822  00001818  001ee820	add	r29,r0,r30
  823  0000181c  8fdefffc	lw	r30,-4(r30)
  824  00001820  4be00000	jr	r31
  825  00001824  54000000	nop
  826  00001828          	.endproc _dstrncmp
  827  00001828          	.align 2
  828  00001828          	.proc _dstrlen
  829  00001828          	.global _dstrlen
  830  00001828          	_dstrlen:
  831                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  832  00001828  afbefffc	sw	-4(r29),r30; push fp
  833  0000182c  001df020	add	r30,r0,r29; fp = sp
  834  00001830  afbffff8	sw	-8(r29),r31; push ret addr
  835  00001834  2fbd0018	subui	r29,r29,#24; alloc local storage
  836  00001838  afa20000	sw	0(r29),r2
  837  0000183c  20010000	addi	r1,r0,#0
  838  00001840  afc1fff4	sw	-12(r30),r1
  839  00001844          	L37_LF2:
  840  00001844  8fc10000	lw	r1,(r30)
  841  00001848  20220001	addi	r2,r1,#1
  842  0000184c  afc20000	sw	(r30),r2
  843  00001850  90210000	lbu	r1,(r1)
  844  00001854  64220000	snei	r2,r1,#0
  845  00001858  1440000c	bnez	r2,L39_LF2
  846  0000185c  54000000	nop; delay slot nop
  847  00001860  0800001c	j	L38_LF2
  848  00001864  54000000	nop; delay slot nop
  849  00001868          	L39_LF2:
  850  00001868  8fc2fff4	lw	r2,-12(r30)
  851  0000186c  20410001	addi	r1,r2,#1
  852  00001870  00011020	add	r2,r0,r1
  853  00001874  afc2fff4	sw	-12(r30),r2
  854  00001878  0bffffc8	j	L37_LF2
  855  0000187c  54000000	nop; delay slot nop
  856  00001880          	L38_LF2:
  857  00001880  8fc1fff4	lw	r1,-12(r30)
  858  00001884  08000004	j	L36_LF2
  859  00001888  54000000	nop; delay slot nop
  860  0000188c          	L36_LF2:
  861  0000188c  8fa20000	lw	r2,0(r29)
  862  00001890  8fdffff8	lw	r31,-8(r30)
  863  00001894  001ee820	add	r29,r0,r30
  864  00001898  8fdefffc	lw	r30,-4(r30)
  865  0000189c  4be00000	jr	r31
  866  000018a0  54000000	nop
  867  000018a4          	.endproc _dstrlen
  868  000018a4          	.align 2
  869  000018a4          	.proc _dstrstr
  870  000018a4          	.global _dstrstr
  871  000018a4          	_dstrstr:
  872                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  873  000018a4  afbefffc	sw	-4(r29),r30; push fp
  874  000018a8  001df020	add	r30,r0,r29; fp = sp
  875  000018ac  afbffff8	sw	-8(r29),r31; push ret addr
  876  000018b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  877  000018b4  afa20000	sw	0(r29),r2
  878  000018b8  23bdfff8	addi	r29,r29,#-8
  879  000018bc  001d0820	add	r1,r0,r29
  880  000018c0  8fc20004	lw	r2,4(r30)
  881  000018c4  ac220000	sw	(r1),r2
  882  000018c8  0fffff5c	jal	_dstrlen
  883  000018cc  54000000	nop; delay slot nop
  884  000018d0  23bd0008	addi	r29,r29,#8
  885  000018d4  afc1fff4	sw	-12(r30),r1
  886  000018d8          	L41_LF2:
  887  000018d8  8fc10000	lw	r1,(r30)
  888  000018dc  90220000	lbu	r2,(r1)
  889  000018e0  64410000	snei	r1,r2,#0
  890  000018e4  1420000c	bnez	r1,L43_LF2
  891  000018e8  54000000	nop; delay slot nop
  892  000018ec  08000060	j	L42_LF2
  893  000018f0  54000000	nop; delay slot nop
  894  000018f4          	L43_LF2:
  895  000018f4  23bdfff0	addi	r29,r29,#-16
  896  000018f8  001d0820	add	r1,r0,r29
  897  000018fc  8fc20000	lw	r2,(r30)
  898  00001900  ac220000	sw	(r1),r2
  899  00001904  8fc20004	lw	r2,4(r30)
  900  00001908  ac220004	sw	4(r1),r2
  901  0000190c  8fc2fff4	lw	r2,-12(r30)
  902  00001910  ac220008	sw	8(r1),r2
  903  00001914  0ffffdc0	jal	_dstrncmp
  904  00001918  54000000	nop; delay slot nop
  905  0000191c  23bd0010	addi	r29,r29,#16
  906  00001920  64220000	snei	r2,r1,#0
  907  00001924  14400010	bnez	r2,L44_LF2
  908  00001928  54000000	nop; delay slot nop
  909  0000192c  8fc10000	lw	r1,(r30)
  910  00001930  08000028	j	L40_LF2
  911  00001934  54000000	nop; delay slot nop
  912  00001938          	L44_LF2:
  913  00001938  8fc20000	lw	r2,(r30)
  914  0000193c  20410001	addi	r1,r2,#1
  915  00001940  00011020	add	r2,r0,r1
  916  00001944  afc20000	sw	(r30),r2
  917  00001948  0bffff8c	j	L41_LF2
  918  0000194c  54000000	nop; delay slot nop
  919  00001950          	L42_LF2:
  920  00001950  20010000	addi	r1,r0,#0
  921  00001954  08000004	j	L40_LF2
  922  00001958  54000000	nop; delay slot nop
  923  0000195c          	L40_LF2:
  924  0000195c  8fa20000	lw	r2,0(r29)
  925  00001960  8fdffff8	lw	r31,-8(r30)
  926  00001964  001ee820	add	r29,r0,r30
  927  00001968  8fdefffc	lw	r30,-4(r30)
  928  0000196c  4be00000	jr	r31
  929  00001970  54000000	nop
  930  00001974          	.endproc _dstrstr
  931  00001974          	.align 2
  932  00001974          	.proc _dmindex
  933  00001974          	.global _dmindex
  934  00001974          	_dmindex:
  935                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  936  00001974  afbefffc	sw	-4(r29),r30; push fp
  937  00001978  001df020	add	r30,r0,r29; fp = sp
  938  0000197c  afbffff8	sw	-8(r29),r31; push ret addr
  939  00001980  2fbd0018	subui	r29,r29,#24; alloc local storage
  940  00001984  afa20000	sw	0(r29),r2
  941  00001988  54000000	nop
  942  0000198c          	L46_LF2:
  943  0000198c  8fc10000	lw	r1,(r30)
  944  00001990  90220000	lbu	r2,(r1)
  945  00001994  64410000	snei	r1,r2,#0
  946  00001998  1420000c	bnez	r1,L48_LF2
  947  0000199c  54000000	nop; delay slot nop
  948  000019a0  08000070	j	L47_LF2
  949  000019a4  54000000	nop; delay slot nop
  950  000019a8          	L48_LF2:
  951  000019a8  8fc10004	lw	r1,4(r30)
  952  000019ac  afc1fff4	sw	-12(r30),r1
  953  000019b0          	L49_LF2:
  954  000019b0  8fc1fff4	lw	r1,-12(r30)
  955  000019b4  90220000	lbu	r2,(r1)
  956  000019b8  64410000	snei	r1,r2,#0
  957  000019bc  1420000c	bnez	r1,L52_LF2
  958  000019c0  54000000	nop; delay slot nop
  959  000019c4  08000044	j	L50_LF2
  960  000019c8  54000000	nop; delay slot nop
  961  000019cc          	L52_LF2:
  962  000019cc  8fc10000	lw	r1,(r30)
  963  000019d0  8fc2fff4	lw	r2,-12(r30)
  964  000019d4  90210000	lbu	r1,(r1)
  965  000019d8  90420000	lbu	r2,(r2)
  966  000019dc  00220828	seq	r1,r1,r2
  967  000019e0  10200010	beqz	r1,L51_LF2
  968  000019e4  54000000	nop; delay slot nop
  969  000019e8  8fc10000	lw	r1,(r30)
  970  000019ec  08000030	j	L45_LF2
  971  000019f0  54000000	nop; delay slot nop
  972  000019f4          	L53_LF2:
  973  000019f4          	L51_LF2:
  974  000019f4  8fc2fff4	lw	r2,-12(r30)
  975  000019f8  20410001	addi	r1,r2,#1
  976  000019fc  00011020	add	r2,r0,r1
  977  00001a00  afc2fff4	sw	-12(r30),r2
  978  00001a04  0bffffa8	j	L49_LF2
  979  00001a08  54000000	nop; delay slot nop
  980  00001a0c          	L50_LF2:
  981  00001a0c  0bffff7c	j	L46_LF2
  982  00001a10  54000000	nop; delay slot nop
  983  00001a14          	L47_LF2:
  984  00001a14  20010000	addi	r1,r0,#0
  985  00001a18  08000004	j	L45_LF2
  986  00001a1c  54000000	nop; delay slot nop
  987  00001a20          	L45_LF2:
  988  00001a20  8fa20000	lw	r2,0(r29)
  989  00001a24  8fdffff8	lw	r31,-8(r30)
  990  00001a28  001ee820	add	r29,r0,r30
  991  00001a2c  8fdefffc	lw	r30,-4(r30)
  992  00001a30  4be00000	jr	r31
  993  00001a34  54000000	nop
  994  00001a38          	.endproc _dmindex
  995  00001a38          	.align 2
  996  00001a38          	.proc _dindex
  997  00001a38          	.global _dindex
  998  00001a38          	_dindex:
  999                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1000  00001a38  afbefffc	sw	-4(r29),r30; push fp
 1001  00001a3c  001df020	add	r30,r0,r29; fp = sp
 1002  00001a40  afbffff8	sw	-8(r29),r31; push ret addr
 1003  00001a44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1004  00001a48  afa20000	sw	0(r29),r2
 1005  00001a4c  54000000	nop
 1006  00001a50          	L55_LF2:
 1007  00001a50  8fc10000	lw	r1,(r30)
 1008  00001a54  90220000	lbu	r2,(r1)
 1009  00001a58  64410000	snei	r1,r2,#0
 1010  00001a5c  1420000c	bnez	r1,L57_LF2
 1011  00001a60  54000000	nop; delay slot nop
 1012  00001a64  08000040	j	L56_LF2
 1013  00001a68  54000000	nop; delay slot nop
 1014  00001a6c          	L57_LF2:
 1015  00001a6c  8fc10000	lw	r1,(r30)
 1016  00001a70  90220000	lbu	r2,(r1)
 1017  00001a74  8fc10004	lw	r1,4(r30)
 1018  00001a78  00411028	seq	r2,r2,r1
 1019  00001a7c  10400010	beqz	r2,L58_LF2
 1020  00001a80  54000000	nop; delay slot nop
 1021  00001a84  8fc10000	lw	r1,(r30)
 1022  00001a88  08000028	j	L54_LF2
 1023  00001a8c  54000000	nop; delay slot nop
 1024  00001a90          	L58_LF2:
 1025  00001a90  8fc20000	lw	r2,(r30)
 1026  00001a94  20410001	addi	r1,r2,#1
 1027  00001a98  00011020	add	r2,r0,r1
 1028  00001a9c  afc20000	sw	(r30),r2
 1029  00001aa0  0bffffac	j	L55_LF2
 1030  00001aa4  54000000	nop; delay slot nop
 1031  00001aa8          	L56_LF2:
 1032  00001aa8  20010000	addi	r1,r0,#0
 1033  00001aac  08000004	j	L54_LF2
 1034  00001ab0  54000000	nop; delay slot nop
 1035  00001ab4          	L54_LF2:
 1036  00001ab4  8fa20000	lw	r2,0(r29)
 1037  00001ab8  8fdffff8	lw	r31,-8(r30)
 1038  00001abc  001ee820	add	r29,r0,r30
 1039  00001ac0  8fdefffc	lw	r30,-4(r30)
 1040  00001ac4  4be00000	jr	r31
 1041  00001ac8  54000000	nop
 1042  00001acc          	.endproc _dindex
 1043  00001acc          	.align 2
 1044  00001acc          	.proc _ditoa
 1045  00001acc          	.global _ditoa
 1046  00001acc          	_ditoa:
 1047                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1048  00001acc  afbefffc	sw	-4(r29),r30; push fp
 1049  00001ad0  001df020	add	r30,r0,r29; fp = sp
 1050  00001ad4  afbffff8	sw	-8(r29),r31; push ret addr
 1051  00001ad8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1052  00001adc  afa20000	sw	0(r29),r2
 1053  00001ae0  afa30004	sw	4(r29),r3
 1054  00001ae4  8fc10000	lw	r1,(r30)
 1055  00001ae8  68220000	slti	r2,r1,#0
 1056  00001aec  1040002c	beqz	r2,L60_LF2
 1057  00001af0  54000000	nop; delay slot nop
 1058  00001af4  8fc10004	lw	r1,4(r30)
 1059  00001af8  20220001	addi	r2,r1,#1
 1060  00001afc  afc20004	sw	4(r30),r2
 1061  00001b00  2002002d	addi	r2,r0,(#0x2d)&0xff
 1062  00001b04  a0220000	sb	(r1),r2
 1063  00001b08  8fc10000	lw	r1,(r30)
 1064  00001b0c  00011022	sub	r2,r0,r1
 1065  00001b10  afc20000	sw	(r30),r2
 1066  00001b14  08000118	j	L61_LF2
 1067  00001b18  54000000	nop; delay slot nop
 1068  00001b1c          	L60_LF2:
 1069  00001b1c  8fc10000	lw	r1,(r30)
 1070  00001b20  64220000	snei	r2,r1,#0
 1071  00001b24  14400020	bnez	r2,L62_LF2
 1072  00001b28  54000000	nop; delay slot nop
 1073  00001b2c  8fc10004	lw	r1,4(r30)
 1074  00001b30  20220001	addi	r2,r1,#1
 1075  00001b34  afc20004	sw	4(r30),r2
 1076  00001b38  20020030	addi	r2,r0,(#0x30)&0xff
 1077  00001b3c  a0220000	sb	(r1),r2
 1078  00001b40  080000ec	j	L61_LF2
 1079  00001b44  54000000	nop; delay slot nop
 1080  00001b48          	L62_LF2:
 1081  00001b48  20010001	addi	r1,r0,#1
 1082  00001b4c  afc1fff4	sw	-12(r30),r1
 1083  00001b50          	L64_LF2:
 1084  00001b50  8fc1fff4	lw	r1,-12(r30)
 1085  00001b54  8fc20000	lw	r2,(r30)
 1086  00001b58  0022082c	sle	r1,r1,r2
 1087  00001b5c  1420000c	bnez	r1,L66_LF2
 1088  00001b60  54000000	nop; delay slot nop
 1089  00001b64  08000024	j	L65_LF2
 1090  00001b68  54000000	nop; delay slot nop
 1091  00001b6c          	L67_LF2:
 1092  00001b6c          	L66_LF2:
 1093  00001b6c  8fc1fff4	lw	r1,-12(r30)
 1094  00001b70  00011820	add	r3,r0,r1
 1095  00001b74  50620002	slli	r2,r3,#0x2
 1096  00001b78  00411020	add	r2,r2,r1
 1097  00001b7c  50410001	slli	r1,r2,#0x1
 1098  00001b80  afc1fff4	sw	-12(r30),r1
 1099  00001b84  0bffffc8	j	L64_LF2
 1100  00001b88  54000000	nop; delay slot nop
 1101  00001b8c          	L65_LF2:
 1102  00001b8c  54000000	nop
 1103  00001b90          	L68_LF2:
 1104  00001b90  8fc1fff4	lw	r1,-12(r30)
 1105  00001b94  2002000a	addi	r2,r0,#10
 1106  00001b98  00200035	movi2fp	f0,r1
 1107  00001b9c  00400835	movi2fp	f1,r2
 1108  00001ba0  0401000f	div	f0,f0,f1
 1109  00001ba4  00000834	movfp2i	r1,f0
 1110  00001ba8  afc1fff4	sw	-12(r30),r1
 1111  00001bac  8fc10004	lw	r1,4(r30)
 1112  00001bb0  20220001	addi	r2,r1,#1
 1113  00001bb4  afc20004	sw	4(r30),r2
 1114  00001bb8  8fc20000	lw	r2,(r30)
 1115  00001bbc  8fc3fff4	lw	r3,-12(r30)
 1116  00001bc0  00400035	movi2fp	f0,r2
 1117  00001bc4  00600835	movi2fp	f1,r3
 1118  00001bc8  0401000f	div	f0,f0,f1
 1119  00001bcc  00001034	movfp2i	r2,f0
 1120  00001bd0  00021820	add	r3,r0,r2
 1121  00001bd4  20620030	addi	r2,r3,#48
 1122  00001bd8  a0220000	sb	(r1),r2
 1123  00001bdc  8fc10000	lw	r1,(r30)
 1124  00001be0  8fc3fff4	lw	r3,-12(r30)
 1125  00001be4  00200035	movi2fp	f0,r1
 1126  00001be8  00600835	movi2fp	f1,r3
 1127  00001bec  0401000f	div	f0,f0,f1
 1128  00001bf0  00001034	movfp2i	r2,f0
 1129  00001bf4  8fc3fff4	lw	r3,-12(r30)
 1130  00001bf8  00400035	movi2fp	f0,r2
 1131  00001bfc  00600835	movi2fp	f1,r3
 1132  00001c00  0401000e	mult	f0,f0,f1
 1133  00001c04  00001034	movfp2i	r2,f0
 1134  00001c08  00220822	sub	r1,r1,r2
 1135  00001c0c  afc10000	sw	(r30),r1
 1136  00001c10          	L70_LF2:
 1137  00001c10  8fc1fff4	lw	r1,-12(r30)
 1138  00001c14  6c220001	sgti	r2,r1,#1
 1139  00001c18  1440000c	bnez	r2,L71_LF2
 1140  00001c1c  54000000	nop; delay slot nop
 1141  00001c20  0800000c	j	L61_LF2
 1142  00001c24  54000000	nop; delay slot nop
 1143  00001c28          	L71_LF2:
 1144  00001c28  0bffff64	j	L68_LF2
 1145  00001c2c  54000000	nop; delay slot nop
 1146  00001c30          	L69_LF2:
 1147  00001c30          	L63_LF2:
 1148  00001c30          	L61_LF2:
 1149  00001c30  8fc10004	lw	r1,4(r30)
 1150  00001c34  20020000	addi	r2,r0,(#0x0)&0xff
 1151  00001c38  a0220000	sb	(r1),r2
 1152  00001c3c          	L59_LF2:
 1153  00001c3c  8fa20000	lw	r2,0(r29)
 1154  00001c40  8fa30004	lw	r3,4(r29)
 1155  00001c44  8fdffff8	lw	r31,-8(r30)
 1156  00001c48  001ee820	add	r29,r0,r30
 1157  00001c4c  8fdefffc	lw	r30,-4(r30)
 1158  00001c50  4be00000	jr	r31
 1159  00001c54  54000000	nop
 1160  00001c58          	.endproc _ditoa
 1161  00001c58          	.align 2
 1162  00001c58          	.proc _dstrtol
 1163  00001c58          	.global _dstrtol
 1164  00001c58          	_dstrtol:
 1165                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1166  00001c58  afbefffc	sw	-4(r29),r30; push fp
 1167  00001c5c  001df020	add	r30,r0,r29; fp = sp
 1168  00001c60  afbffff8	sw	-8(r29),r31; push ret addr
 1169  00001c64  2fbd0020	subui	r29,r29,#32; alloc local storage
 1170  00001c68  afa20000	sw	0(r29),r2
 1171  00001c6c  20010000	addi	r1,r0,#0
 1172  00001c70  afc1fff4	sw	-12(r30),r1
 1173  00001c74          	L73_LF2:
 1174  00001c74  8fc10000	lw	r1,(r30)
 1175  00001c78  90220000	lbu	r2,(r1)
 1176  00001c7c  60410020	seqi	r1,r2,#32
 1177  00001c80  14200034	bnez	r1,L75_LF2
 1178  00001c84  54000000	nop; delay slot nop
 1179  00001c88  8fc10000	lw	r1,(r30)
 1180  00001c8c  90220000	lbu	r2,(r1)
 1181  00001c90  60410009	seqi	r1,r2,#9
 1182  00001c94  14200020	bnez	r1,L75_LF2
 1183  00001c98  54000000	nop; delay slot nop
 1184  00001c9c  8fc10000	lw	r1,(r30)
 1185  00001ca0  90220000	lbu	r2,(r1)
 1186  00001ca4  6041000a	seqi	r1,r2,#10
 1187  00001ca8  1420000c	bnez	r1,L75_LF2
 1188  00001cac  54000000	nop; delay slot nop
 1189  00001cb0  0800001c	j	L74_LF2
 1190  00001cb4  54000000	nop; delay slot nop
 1191  00001cb8          	L75_LF2:
 1192  00001cb8  8fc20000	lw	r2,(r30)
 1193  00001cbc  20410001	addi	r1,r2,#1
 1194  00001cc0  00011020	add	r2,r0,r1
 1195  00001cc4  afc20000	sw	(r30),r2
 1196  00001cc8  0bffffa8	j	L73_LF2
 1197  00001ccc  54000000	nop; delay slot nop
 1198  00001cd0          	L74_LF2:
 1199  00001cd0  8fc10004	lw	r1,4(r30)
 1200  00001cd4  64220000	snei	r2,r1,#0
 1201  00001cd8  10400010	beqz	r2,L76_LF2
 1202  00001cdc  54000000	nop; delay slot nop
 1203  00001ce0  8fc10004	lw	r1,4(r30)
 1204  00001ce4  8fc20000	lw	r2,(r30)
 1205  00001ce8  ac220000	sw	(r1),r2
 1206  00001cec          	L76_LF2:
 1207  00001cec  8fc10000	lw	r1,(r30)
 1208  00001cf0  90220000	lbu	r2,(r1)
 1209  00001cf4  64410000	snei	r1,r2,#0
 1210  00001cf8  14200010	bnez	r1,L77_LF2
 1211  00001cfc  54000000	nop; delay slot nop
 1212  00001d00  8fc1fff4	lw	r1,-12(r30)
 1213  00001d04  08000294	j	L72_LF2
 1214  00001d08  54000000	nop; delay slot nop
 1215  00001d0c          	L77_LF2:
 1216  00001d0c  8fc10000	lw	r1,(r30)
 1217  00001d10  90220000	lbu	r2,(r1)
 1218  00001d14  6041002d	seqi	r1,r2,#45
 1219  00001d18  10200024	beqz	r1,L78_LF2
 1220  00001d1c  54000000	nop; delay slot nop
 1221  00001d20  2001ffff	addi	r1,r0,#-1
 1222  00001d24  afc1ffec	sw	-20(r30),r1
 1223  00001d28  8fc20000	lw	r2,(r30)
 1224  00001d2c  20410001	addi	r1,r2,#1
 1225  00001d30  00011020	add	r2,r0,r1
 1226  00001d34  afc20000	sw	(r30),r2
 1227  00001d38  0800000c	j	L79_LF2
 1228  00001d3c  54000000	nop; delay slot nop
 1229  00001d40          	L78_LF2:
 1230  00001d40  20010001	addi	r1,r0,#1
 1231  00001d44  afc1ffec	sw	-20(r30),r1
 1232  00001d48          	L79_LF2:
 1233  00001d48  8fc10008	lw	r1,8(r30)
 1234  00001d4c  64220000	snei	r2,r1,#0
 1235  00001d50  14400090	bnez	r2,L80_LF2
 1236  00001d54  54000000	nop; delay slot nop
 1237  00001d58  8fc10000	lw	r1,(r30)
 1238  00001d5c  90220000	lbu	r2,(r1)
 1239  00001d60  60410030	seqi	r1,r2,#48
 1240  00001d64  10200074	beqz	r1,L81_LF2
 1241  00001d68  54000000	nop; delay slot nop
 1242  00001d6c  8fc20000	lw	r2,(r30)
 1243  00001d70  20410001	addi	r1,r2,#1
 1244  00001d74  00011020	add	r2,r0,r1
 1245  00001d78  afc20000	sw	(r30),r2
 1246  00001d7c  8fc10000	lw	r1,(r30)
 1247  00001d80  90220000	lbu	r2,(r1)
 1248  00001d84  60410078	seqi	r1,r2,#120
 1249  00001d88  14200020	bnez	r1,L83_LF2
 1250  00001d8c  54000000	nop; delay slot nop
 1251  00001d90  8fc10000	lw	r1,(r30)
 1252  00001d94  90220000	lbu	r2,(r1)
 1253  00001d98  60410058	seqi	r1,r2,#88
 1254  00001d9c  1420000c	bnez	r1,L83_LF2
 1255  00001da0  54000000	nop; delay slot nop
 1256  00001da4  08000024	j	L82_LF2
 1257  00001da8  54000000	nop; delay slot nop
 1258  00001dac          	L83_LF2:
 1259  00001dac  20010010	addi	r1,r0,#16
 1260  00001db0  afc10008	sw	8(r30),r1
 1261  00001db4  8fc20000	lw	r2,(r30)
 1262  00001db8  20410001	addi	r1,r2,#1
 1263  00001dbc  00011020	add	r2,r0,r1
 1264  00001dc0  afc20000	sw	(r30),r2
 1265  00001dc4  0800000c	j	L84_LF2
 1266  00001dc8  54000000	nop; delay slot nop
 1267  00001dcc          	L82_LF2:
 1268  00001dcc  20010008	addi	r1,r0,#8
 1269  00001dd0  afc10008	sw	8(r30),r1
 1270  00001dd4          	L84_LF2:
 1271  00001dd4  0800000c	j	L80_LF2
 1272  00001dd8  54000000	nop; delay slot nop
 1273  00001ddc          	L81_LF2:
 1274  00001ddc  2001000a	addi	r1,r0,#10
 1275  00001de0  afc10008	sw	8(r30),r1
 1276  00001de4          	L85_LF2:
 1277  00001de4          	L80_LF2:
 1278  00001de4  8fc10008	lw	r1,8(r30)
 1279  00001de8  70220000	slei	r2,r1,#0
 1280  00001dec  1440001c	bnez	r2,L87_LF2
 1281  00001df0  54000000	nop; delay slot nop
 1282  00001df4  8fc10008	lw	r1,8(r30)
 1283  00001df8  6c220010	sgti	r2,r1,#16
 1284  00001dfc  1440000c	bnez	r2,L87_LF2
 1285  00001e00  54000000	nop; delay slot nop
 1286  00001e04  08000010	j	L86_LF2
 1287  00001e08  54000000	nop; delay slot nop
 1288  00001e0c          	L87_LF2:
 1289  00001e0c  8fc1fff4	lw	r1,-12(r30)
 1290  00001e10  08000188	j	L72_LF2
 1291  00001e14  54000000	nop; delay slot nop
 1292  00001e18          	L86_LF2:
 1293  00001e18  54000000	nop
 1294  00001e1c          	L88_LF2:
 1295  00001e1c  8fc10000	lw	r1,(r30)
 1296  00001e20  90220000	lbu	r2,(r1)
 1297  00001e24  6c41002f	sgtui	r1,r2,#47
 1298  00001e28  10200030	beqz	r1,L91_LF2
 1299  00001e2c  54000000	nop; delay slot nop
 1300  00001e30  8fc10000	lw	r1,(r30)
 1301  00001e34  90220000	lbu	r2,(r1)
 1302  00001e38  70410039	sleui	r1,r2,#57
 1303  00001e3c  1020001c	beqz	r1,L91_LF2
 1304  00001e40  54000000	nop; delay slot nop
 1305  00001e44  8fc10000	lw	r1,(r30)
 1306  00001e48  90220000	lbu	r2,(r1)
 1307  00001e4c  2041ffd0	addi	r1,r2,#-48
 1308  00001e50  afc1fff0	sw	-16(r30),r1
 1309  00001e54  0800008c	j	L92_LF2
 1310  00001e58  54000000	nop; delay slot nop
 1311  00001e5c          	L91_LF2:
 1312  00001e5c  8fc10000	lw	r1,(r30)
 1313  00001e60  90220000	lbu	r2,(r1)
 1314  00001e64  6c410060	sgtui	r1,r2,#96
 1315  00001e68  10200030	beqz	r1,L93_LF2
 1316  00001e6c  54000000	nop; delay slot nop
 1317  00001e70  8fc10000	lw	r1,(r30)
 1318  00001e74  90220000	lbu	r2,(r1)
 1319  00001e78  7041007a	sleui	r1,r2,#122
 1320  00001e7c  1020001c	beqz	r1,L93_LF2
 1321  00001e80  54000000	nop; delay slot nop
 1322  00001e84  8fc10000	lw	r1,(r30)
 1323  00001e88  90220000	lbu	r2,(r1)
 1324  00001e8c  2041ffa9	addi	r1,r2,#-87
 1325  00001e90  afc1fff0	sw	-16(r30),r1
 1326  00001e94  0800004c	j	L92_LF2
 1327  00001e98  54000000	nop; delay slot nop
 1328  00001e9c          	L93_LF2:
 1329  00001e9c  8fc10000	lw	r1,(r30)
 1330  00001ea0  90220000	lbu	r2,(r1)
 1331  00001ea4  6c410040	sgtui	r1,r2,#64
 1332  00001ea8  10200030	beqz	r1,L95_LF2
 1333  00001eac  54000000	nop; delay slot nop
 1334  00001eb0  8fc10000	lw	r1,(r30)
 1335  00001eb4  90220000	lbu	r2,(r1)
 1336  00001eb8  7041005a	sleui	r1,r2,#90
 1337  00001ebc  1020001c	beqz	r1,L95_LF2
 1338  00001ec0  54000000	nop; delay slot nop
 1339  00001ec4  8fc10000	lw	r1,(r30)
 1340  00001ec8  90220000	lbu	r2,(r1)
 1341  00001ecc  2041ffc9	addi	r1,r2,#-55
 1342  00001ed0  afc1fff0	sw	-16(r30),r1
 1343  00001ed4  0800000c	j	L92_LF2
 1344  00001ed8  54000000	nop; delay slot nop
 1345  00001edc          	L95_LF2:
 1346  00001edc  200103e8	addi	r1,r0,#1000
 1347  00001ee0  afc1fff0	sw	-16(r30),r1
 1348  00001ee4          	L96_LF2:
 1349  00001ee4          	L94_LF2:
 1350  00001ee4          	L92_LF2:
 1351  00001ee4  8fc1fff0	lw	r1,-16(r30)
 1352  00001ee8  8fc20008	lw	r2,8(r30)
 1353  00001eec  0022082a	slt	r1,r1,r2
 1354  00001ef0  10200040	beqz	r1,L90_LF2
 1355  00001ef4  54000000	nop; delay slot nop
 1356  00001ef8  8fc1fff4	lw	r1,-12(r30)
 1357  00001efc  8fc20008	lw	r2,8(r30)
 1358  00001f00  00200035	movi2fp	f0,r1
 1359  00001f04  00400835	movi2fp	f1,r2
 1360  00001f08  0401000e	mult	f0,f0,f1
 1361  00001f0c  00000834	movfp2i	r1,f0
 1362  00001f10  afc1fff4	sw	-12(r30),r1
 1363  00001f14  8fc1fff4	lw	r1,-12(r30)
 1364  00001f18  8fc2fff0	lw	r2,-16(r30)
 1365  00001f1c  00220820	add	r1,r1,r2
 1366  00001f20  afc1fff4	sw	-12(r30),r1
 1367  00001f24  8fc20000	lw	r2,(r30)
 1368  00001f28  20410001	addi	r1,r2,#1
 1369  00001f2c  00011020	add	r2,r0,r1
 1370  00001f30  afc20000	sw	(r30),r2
 1371  00001f34          	L97_LF2:
 1372  00001f34          	L90_LF2:
 1373  00001f34  8fc1fff0	lw	r1,-16(r30)
 1374  00001f38  8fc20008	lw	r2,8(r30)
 1375  00001f3c  0022082a	slt	r1,r1,r2
 1376  00001f40  1420000c	bnez	r1,L98_LF2
 1377  00001f44  54000000	nop; delay slot nop
 1378  00001f48  0800000c	j	L89_LF2
 1379  00001f4c  54000000	nop; delay slot nop
 1380  00001f50          	L98_LF2:
 1381  00001f50  0bfffec8	j	L88_LF2
 1382  00001f54  54000000	nop; delay slot nop
 1383  00001f58          	L89_LF2:
 1384  00001f58  8fc10004	lw	r1,4(r30)
 1385  00001f5c  64220000	snei	r2,r1,#0
 1386  00001f60  10400010	beqz	r2,L99_LF2
 1387  00001f64  54000000	nop; delay slot nop
 1388  00001f68  8fc10004	lw	r1,4(r30)
 1389  00001f6c  8fc20000	lw	r2,(r30)
 1390  00001f70  ac220000	sw	(r1),r2
 1391  00001f74          	L99_LF2:
 1392  00001f74  8fc1fff4	lw	r1,-12(r30)
 1393  00001f78  8fc2ffec	lw	r2,-20(r30)
 1394  00001f7c  00200035	movi2fp	f0,r1
 1395  00001f80  00400835	movi2fp	f1,r2
 1396  00001f84  0401000e	mult	f0,f0,f1
 1397  00001f88  00000834	movfp2i	r1,f0
 1398  00001f8c  afc1fff4	sw	-12(r30),r1
 1399  00001f90  8fc1fff4	lw	r1,-12(r30)
 1400  00001f94  08000004	j	L72_LF2
 1401  00001f98  54000000	nop; delay slot nop
 1402  00001f9c          	L72_LF2:
 1403  00001f9c  8fa20000	lw	r2,0(r29)
 1404  00001fa0  8fdffff8	lw	r31,-8(r30)
 1405  00001fa4  001ee820	add	r29,r0,r30
 1406  00001fa8  8fdefffc	lw	r30,-4(r30)
 1407  00001fac  4be00000	jr	r31
 1408  00001fb0  54000000	nop
 1409  00001fb4          	.endproc _dstrtol
 1410  00001fb4          	.align 2
 1411  00001fb4          	.proc _bcopy
 1412  00001fb4          	.global _bcopy
 1413  00001fb4          	_bcopy:
 1414                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1415  00001fb4  afbefffc	sw	-4(r29),r30; push fp
 1416  00001fb8  001df020	add	r30,r0,r29; fp = sp
 1417  00001fbc  afbffff8	sw	-8(r29),r31; push ret addr
 1418  00001fc0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1419  00001fc4  afa20000	sw	0(r29),r2
 1420  00001fc8  afa30004	sw	4(r29),r3
 1421  00001fcc  54000000	nop
 1422  00001fd0          	L101_LF2:
 1423  00001fd0  8fc10008	lw	r1,8(r30)
 1424  00001fd4  2022ffff	addi	r2,r1,#-1
 1425  00001fd8  afc20008	sw	8(r30),r2
 1426  00001fdc  6c210000	sgti	r1,r1,#0
 1427  00001fe0  1420000c	bnez	r1,L103_LF2
 1428  00001fe4  54000000	nop; delay slot nop
 1429  00001fe8  0800002c	j	L102_LF2
 1430  00001fec  54000000	nop; delay slot nop
 1431  00001ff0          	L103_LF2:
 1432  00001ff0  8fc10004	lw	r1,4(r30)
 1433  00001ff4  20220001	addi	r2,r1,#1
 1434  00001ff8  afc20004	sw	4(r30),r2
 1435  00001ffc  8fc20000	lw	r2,(r30)
 1436  00002000  20430001	addi	r3,r2,#1
 1437  00002004  afc30000	sw	(r30),r3
 1438  00002008  80420000	lb	r2,(r2)
 1439  0000200c  a0220000	sb	(r1),r2
 1440  00002010  0bffffbc	j	L101_LF2
 1441  00002014  54000000	nop; delay slot nop
 1442  00002018          	L102_LF2:
 1443  00002018          	L100_LF2:
 1444  00002018  8fa20000	lw	r2,0(r29)
 1445  0000201c  8fa30004	lw	r3,4(r29)
 1446  00002020  8fdffff8	lw	r31,-8(r30)
 1447  00002024  001ee820	add	r29,r0,r30
 1448  00002028  8fdefffc	lw	r30,-4(r30)
 1449  0000202c  4be00000	jr	r31
 1450  00002030  54000000	nop
 1451  00002034          	.endproc _bcopy
 1452  00002034          	.align 2
 1453  00002034          	.proc _bzero
 1454  00002034          	.global _bzero
 1455  00002034          	_bzero:
 1456                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1457  00002034  afbefffc	sw	-4(r29),r30; push fp
 1458  00002038  001df020	add	r30,r0,r29; fp = sp
 1459  0000203c  afbffff8	sw	-8(r29),r31; push ret addr
 1460  00002040  2fbd0010	subui	r29,r29,#16; alloc local storage
 1461  00002044  afa20000	sw	0(r29),r2
 1462  00002048  54000000	nop
 1463  0000204c          	L105_LF2:
 1464  0000204c  8fc10004	lw	r1,4(r30)
 1465  00002050  2022ffff	addi	r2,r1,#-1
 1466  00002054  afc20004	sw	4(r30),r2
 1467  00002058  6c210000	sgti	r1,r1,#0
 1468  0000205c  1420000c	bnez	r1,L107_LF2
 1469  00002060  54000000	nop; delay slot nop
 1470  00002064  08000020	j	L106_LF2
 1471  00002068  54000000	nop; delay slot nop
 1472  0000206c          	L107_LF2:
 1473  0000206c  8fc10000	lw	r1,(r30)
 1474  00002070  20220001	addi	r2,r1,#1
 1475  00002074  afc20000	sw	(r30),r2
 1476  00002078  20020000	addi	r2,r0,(#0x0)&0xff
 1477  0000207c  a0220000	sb	(r1),r2
 1478  00002080  0bffffc8	j	L105_LF2
 1479  00002084  54000000	nop; delay slot nop
 1480  00002088          	L106_LF2:
 1481  00002088          	L104_LF2:
 1482  00002088  8fa20000	lw	r2,0(r29)
 1483  0000208c  8fdffff8	lw	r31,-8(r30)
 1484  00002090  001ee820	add	r29,r0,r30
 1485  00002094  8fdefffc	lw	r30,-4(r30)
 1486  00002098  4be00000	jr	r31
 1487  0000209c  54000000	nop
 1488  000020a0          	.endproc _bzero
 1489  000020a0          	.align 2
 1490  000020a0          	.proc _min
 1491  000020a0          	.global _min
 1492  000020a0          	_min:
 1493                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1494  000020a0  afbefffc	sw	-4(r29),r30; push fp
 1495  000020a4  001df020	add	r30,r0,r29; fp = sp
 1496  000020a8  afbffff8	sw	-8(r29),r31; push ret addr
 1497  000020ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1498  000020b0  afa20000	sw	0(r29),r2
 1499  000020b4  afa30004	sw	4(r29),r3
 1500  000020b8  8fc10000	lw	r1,(r30)
 1501  000020bc  8fc20004	lw	r2,4(r30)
 1502  000020c0  0022182c	sle	r3,r1,r2
 1503  000020c4  14600008	bnez	r3,L109_LF2
 1504  000020c8  54000000	nop; delay slot nop
 1505  000020cc  8fc10004	lw	r1,4(r30)
 1506  000020d0          	L109_LF2:
 1507  000020d0  08000004	j	L108_LF2
 1508  000020d4  54000000	nop; delay slot nop
 1509  000020d8          	L108_LF2:
 1510  000020d8  8fa20000	lw	r2,0(r29)
 1511  000020dc  8fa30004	lw	r3,4(r29)
 1512  000020e0  8fdffff8	lw	r31,-8(r30)
 1513  000020e4  001ee820	add	r29,r0,r30
 1514  000020e8  8fdefffc	lw	r30,-4(r30)
 1515  000020ec  4be00000	jr	r31
 1516  000020f0  54000000	nop
 1517  000020f4          	.endproc _min
 1518  000020f4          	.align 2
 1519  000020f4          	.proc _max
 1520  000020f4          	.global _max
 1521  000020f4          	_max:
 1522                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1523  000020f4  afbefffc	sw	-4(r29),r30; push fp
 1524  000020f8  001df020	add	r30,r0,r29; fp = sp
 1525  000020fc  afbffff8	sw	-8(r29),r31; push ret addr
 1526  00002100  2fbd0010	subui	r29,r29,#16; alloc local storage
 1527  00002104  afa20000	sw	0(r29),r2
 1528  00002108  afa30004	sw	4(r29),r3
 1529  0000210c  8fc10000	lw	r1,(r30)
 1530  00002110  8fc20004	lw	r2,4(r30)
 1531  00002114  0022182d	sge	r3,r1,r2
 1532  00002118  14600008	bnez	r3,L111_LF2
 1533  0000211c  54000000	nop; delay slot nop
 1534  00002120  8fc10004	lw	r1,4(r30)
 1535  00002124          	L111_LF2:
 1536  00002124  08000004	j	L110_LF2
 1537  00002128  54000000	nop; delay slot nop
 1538  0000212c          	L110_LF2:
 1539  0000212c  8fa20000	lw	r2,0(r29)
 1540  00002130  8fa30004	lw	r3,4(r29)
 1541  00002134  8fdffff8	lw	r31,-8(r30)
 1542  00002138  001ee820	add	r29,r0,r30
 1543  0000213c  8fdefffc	lw	r30,-4(r30)
 1544  00002140  4be00000	jr	r31
 1545  00002144  54000000	nop
 1546  00002148          	.endproc _max
 1547                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1548                      ;;;
 1549                      ;;; Most of the traps are called in files from libtraps.
 1552  00002148          	.align 2
 1553  00002148          	.proc _exit
 1554  00002148          	.global _exit
 1555  00002148          	_exit:
 1556  00002148  44000300	trap	#0x300
 1557  0000214c  4be00000	jr	r31
 1558  00002150  54000000	nop
 1559  00002154          	.endproc _exit
 1561                      ; for the benefit of gcc.
 1562  00002154          	.proc ___main
 1563  00002154          	.global ___main
 1564  00002154          	___main:
 1565  00002154  4be00000	jr	r31
 1566  00002158  54000000	nop
 1567  0000215c          	.endproc ___main
 1568  0000215c          	.text
 1569  0000215c          	.global _etext
 1570  0000215c          	_etext:
 1571  0000215c          	.align 3
 1572  00002160          	.data
 1573  00003104          	.global _edata
 1574  00003104          	_edata:
