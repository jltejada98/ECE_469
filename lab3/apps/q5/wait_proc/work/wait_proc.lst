 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 230
    4                      ; Text size: 4556
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  496e636f	.ascii "Incorrect number of arguments (%d) for %s, expecting at least 3.\n\000"
   82  00003004  72726563	
   82  00003008  74206e75	
   82  0000300c  6d626572	
   82  00003010  206f6620	
   82  00003014  61726775	
   82  00003018  6d656e74	
   82  0000301c  73202825	
   82  00003020  64292066	
   82  00003024  6f722025	
   82  00003028  732c2065	
   82  0000302c  78706563	
   82  00003030  74696e67	
   82  00003034  20617420	
   82  00003038  6c656173	
   82  0000303c  7420332e	
   82  00003040  0a00    	
   83  00003042          	.align 2
   84  00003044          	LC1_LF0:
   85  00003044  496e636f	.ascii "Incorrect number of arguments (%d) for %s, expecting %d\n\000"
   85  00003048  72726563	
   85  0000304c  74206e75	
   85  00003050  6d626572	
   85  00003054  206f6620	
   85  00003058  61726775	
   85  0000305c  6d656e74	
   85  00003060  73202825	
   85  00003064  64292066	
   85  00003068  6f722025	
   85  0000306c  732c2065	
   85  00003070  78706563	
   85  00003074  74696e67	
   85  00003078  2025640a	
   85  0000307c  00      	
   86  0000307d          	.align 2
   87  00003080          	LC2_LF0:
   88  00003080  50726f63	.ascii "Process %d slept %d time for %d seconds\n\000"
   88  00003084  65737320	
   88  00003088  25642073	
   88  0000308c  6c657074	
   88  00003090  20256420	
   88  00003094  74696d65	
   88  00003098  20666f72	
   88  0000309c  20256420	
   88  000030a0  7365636f	
   88  000030a4  6e64730a	
   88  000030a8  00      	
   89  000030a9          	.align 2
   90  000030ac          	LC3_LF0:
   91  000030ac  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
   91  000030b0  73656d61	
   91  000030b4  70686f72	
   91  000030b8  65207365	
   91  000030bc  6d5f7072	
   91  000030c0  6f63735f	
   91  000030c4  636f6d70	
   91  000030c8  6c657465	
   91  000030cc  64202825	
   91  000030d0  64292069	
   91  000030d4  6e2000  	
   92  000030d7          	.align 2
   93  000030d8          	LC4_LF0:
   94  000030d8  2c206578	.ascii ", exiting...\n\000"
   94  000030dc  6974696e	
   94  000030e0  672e2e2e	
   94  000030e4  0a00    	
   95  000030e6          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc30000	lw	r3,(r30)
  106  000010e8  8fc50004	lw	r5,4(r30)
  107  000010ec  0c0010d4	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  70610002	slei	r1,r3,#2
  110  000010f8  10200034	beqz	r1,L14_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff0	addi	r29,r29,#-16
  113  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  114  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  115  0000110c  afa70000	sw	(r29),r7
  116  00001110  afa30004	sw	4(r29),r3
  117  00001114  8ca70000	lw	r7,(r5)
  118  00001118  afa70008	sw	8(r29),r7
  119  0000111c  0c0001f4	jal	_Printf
  120  00001120  54000000	nop; not filled.
  121  00001124  0c0002f4	jal	_Exit
  122  00001128  54000000	nop; not filled.
  123  0000112c  23bd0010	addi	r29,r29,#16
  124  00001130          	L14_LF0:
  125  00001130  23bdfff0	addi	r29,r29,#-16
  126  00001134  8ca70004	lw	r7,4(r5)
  127  00001138  afa70000	sw	(r29),r7
  128  0000113c  20070000	addi	r7,r0,#0
  129  00001140  afa70004	sw	4(r29),r7
  130  00001144  2007000a	addi	r7,r0,#10
  131  00001148  afa70008	sw	8(r29),r7
  132  0000114c  0c000b78	jal	_dstrtol
  133  00001150  54000000	nop; not filled.
  134  00001154  00013020	add	r6,r0,r1
  135  00001158  8ca70008	lw	r7,8(r5)
  136  0000115c  afa70000	sw	(r29),r7
  137  00001160  20070000	addi	r7,r0,#0
  138  00001164  afa70004	sw	4(r29),r7
  139  00001168  2007000a	addi	r7,r0,#10
  140  0000116c  afa70008	sw	8(r29),r7
  141  00001170  0c000b54	jal	_dstrtol
  142  00001174  54000000	nop; not filled.
  143  00001178  00012020	add	r4,r0,r1
  144  0000117c  20820003	addi	r2,r4,#3
  145  00001180  23bd0010	addi	r29,r29,#16
  146  00001184  00620829	sne	r1,r3,r2
  147  00001188  10200038	beqz	r1,L15_LF0
  148  0000118c  54000000	nop; not filled.
  149  00001190  23bdfff0	addi	r29,r29,#-16
  150  00001194  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  151  00001198  24e73044	addui	r7,r7,(LC1_LF0)&0xffff
  152  0000119c  afa70000	sw	(r29),r7
  153  000011a0  afa30004	sw	4(r29),r3
  154  000011a4  8ca70000	lw	r7,(r5)
  155  000011a8  afa70008	sw	8(r29),r7
  156  000011ac  afa2000c	sw	12(r29),r2
  157  000011b0  0c000160	jal	_Printf
  158  000011b4  54000000	nop; not filled.
  159  000011b8  0c000260	jal	_Exit
  160  000011bc  54000000	nop; not filled.
  161  000011c0  23bd0010	addi	r29,r29,#16
  162  000011c4          	L15_LF0:
  163  000011c4  20020000	addi	r2,r0,#0
  164  000011c8  0044082a	slt	r1,r2,r4
  165  000011cc  10200084	beqz	r1,L17_LF0
  166  000011d0  54000000	nop; not filled.
  167  000011d4          	L19_LF0:
  168  000011d4  23bdfff0	addi	r29,r29,#-16
  169  000011d8  50410002	slli	r1,r2,#0x2
  170  000011dc  00250820	add	r1,r1,r5
  171  000011e0  8c21000c	lw	r1,12(r1)
  172  000011e4  afa10000	sw	(r29),r1
  173  000011e8  20070000	addi	r7,r0,#0
  174  000011ec  afa70004	sw	4(r29),r7
  175  000011f0  2007000a	addi	r7,r0,#10
  176  000011f4  afa70008	sw	8(r29),r7
  177  000011f8  0c000acc	jal	_dstrtol
  178  000011fc  54000000	nop; not filled.
  179  00001200  00011820	add	r3,r0,r1
  180  00001204  afa30000	sw	(r29),r3
  181  00001208  0c0001f8	jal	_sleep
  182  0000120c  54000000	nop; not filled.
  183  00001210  0c0001fc	jal	_yield
  184  00001214  54000000	nop; not filled.
  185  00001218  0c000104	jal	_getpid
  186  0000121c  54000000	nop; not filled.
  187  00001220  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  188  00001224  24e73080	addui	r7,r7,(LC2_LF0)&0xffff
  189  00001228  afa70000	sw	(r29),r7
  190  0000122c  afa10004	sw	4(r29),r1
  191  00001230  20420001	addi	r2,r2,#1
  192  00001234  afa20008	sw	8(r29),r2
  193  00001238  afa3000c	sw	12(r29),r3
  194  0000123c  0c0000d4	jal	_Printf
  195  00001240  54000000	nop; not filled.
  196  00001244  23bd0010	addi	r29,r29,#16
  197  00001248  0044082a	slt	r1,r2,r4
  198  0000124c  1420ff84	bnez	r1,L19_LF0
  199  00001250  54000000	nop; not filled.
  200  00001254          	L17_LF0:
  201  00001254  23bdfff8	addi	r29,r29,#-8
  202  00001258  afa60000	sw	(r29),r6
  203  0000125c  0c000108	jal	_sem_signal
  204  00001260  54000000	nop; not filled.
  205  00001264  23bd0008	addi	r29,r29,#8
  206  00001268  64210001	snei	r1,r1,#1
  207  0000126c  10200050	beqz	r1,L21_LF0
  208  00001270  54000000	nop; not filled.
  209  00001274  23bdfff8	addi	r29,r29,#-8
  210  00001278  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  211  0000127c  24e730ac	addui	r7,r7,(LC3_LF0)&0xffff
  212  00001280  afa70000	sw	(r29),r7
  213  00001284  afa60004	sw	4(r29),r6
  214  00001288  0c000088	jal	_Printf
  215  0000128c  54000000	nop; not filled.
  216  00001290  8ca50000	lw	r5,(r5)
  217  00001294  afa50000	sw	(r29),r5
  218  00001298  0c000078	jal	_Printf
  219  0000129c  54000000	nop; not filled.
  220  000012a0  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  221  000012a4  24e730d8	addui	r7,r7,(LC4_LF0)&0xffff
  222  000012a8  afa70000	sw	(r29),r7
  223  000012ac  0c000064	jal	_Printf
  224  000012b0  54000000	nop; not filled.
  225  000012b4  0c000164	jal	_Exit
  226  000012b8  54000000	nop; not filled.
  227  000012bc  23bd0008	addi	r29,r29,#8
  228  000012c0          	L21_LF0:
  229  000012c0  20010000	addi	r1,r0,#0
  230  000012c4  0c000ef0	jal	_exit
  231  000012c8  54000000	nop
  232  000012cc          	.endproc _main
  233                      ;;;
  234                      ;;; Stub functions for DLX traps.
  235                      ;;;
  236                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  237                      ;;;
  238                      ;;; The traps such as Open and Close
  239                      ;;; (note the capital letters) are for use by user programs.  The traps
  240                      ;;; with names such as open and close (lower case) are for use by the OS.
  241                      ;;;
  244  000012cc          	.align 2
  246                      ;;; The following are the traps to be used by user-level programs
  247                      ;;;
  249  000012cc          	.align 2
  250  000012cc          	.proc _Open
  251  000012cc          	.global _Open
  252  000012cc          	_Open:
  253                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  254                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  255                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  256  000012cc  44000213	trap	#0x213
  257  000012d0  4be00000	jr	r31
  258  000012d4  54000000	nop
  259  000012d8          	.endproc _Open
  261  000012d8          	.proc _Close
  262  000012d8          	.global _Close
  263  000012d8          	_Close:
  264  000012d8  44000214	trap	#0x214
  265  000012dc  4be00000	jr	r31
  266  000012e0  54000000	nop
  267  000012e4          	.endproc _Close
  269  000012e4          	.proc _Read
  270  000012e4          	.global _Read
  271  000012e4          	_Read:
  272  000012e4  44000210	trap	#0x210
  273  000012e8  4be00000	jr	r31
  274  000012ec  54000000	nop
  275  000012f0          	.endproc _Read
  277  000012f0          	.proc _Write
  278  000012f0          	.global _Write
  279  000012f0          	_Write:
  280  000012f0  44000211	trap	#0x211
  281  000012f4  4be00000	jr	r31
  282  000012f8  54000000	nop
  283  000012fc          	.endproc _Write
  285  000012fc          	.proc _Lseek
  286  000012fc          	.global _Lseek
  287  000012fc          	_Lseek:
  288  000012fc  44000212	trap	#0x212
  289  00001300  4be00000	jr	r31
  290  00001304  54000000	nop
  291  00001308          	.endproc _Lseek
  293  00001308          	.proc _Putchar
  294  00001308          	.global _Putchar
  295  00001308          	_Putchar:
  296  00001308  44000280	trap	#0x280
  297  0000130c  4be00000	jr	r31
  298  00001310  54000000	nop
  299  00001314          	.endproc _Putchar
  301  00001314          	.proc _Printf
  302  00001314          	.global _Printf
  303  00001314          	_Printf:
  304  00001314  44000201	trap	#0x201
  305  00001318  4be00000	jr	r31
  306  0000131c  54000000	nop
  307  00001320          	.endproc _Printf
  309  00001320          	.proc _getpid
  310  00001320          	.global _getpid
  311  00001320          	_getpid:
  312  00001320  44000431	trap	#0x431
  313  00001324  4be00000	jr	r31
  314  00001328  54000000	nop
  315  0000132c          	.endproc _getpid
  317  0000132c          	.proc _process_create
  318  0000132c          	.global _process_create
  319  0000132c          	_process_create:
  320  0000132c  44000432	trap	#0x432
  321  00001330  4be00000	jr	r31
  322  00001334  54000000	nop
  323  00001338          	.endproc _process_create
  325  00001338          	.proc _shmget
  326  00001338          	.global _shmget
  327  00001338          	_shmget:
  328  00001338  44000440	trap	#0x440
  329  0000133c  4be00000	jr	r31
  330  00001340  54000000	nop
  331  00001344          	.endproc _shmget
  333  00001344          	.proc _shmat
  334  00001344          	.global _shmat
  335  00001344          	_shmat:
  336  00001344  44000441	trap	#0x441
  337  00001348  4be00000	jr	r31
  338  0000134c  54000000	nop
  339  00001350          	.endproc _shmat
  341  00001350          	.proc _sem_create
  342  00001350          	.global _sem_create
  343  00001350          	_sem_create:
  344  00001350  44000450	trap	#0x450
  345  00001354  4be00000	jr	r31
  346  00001358  54000000	nop
  347  0000135c          	.endproc _sem_create
  349  0000135c          	.proc _sem_wait
  350  0000135c          	.global _sem_wait
  351  0000135c          	_sem_wait:
  352  0000135c  44000451	trap	#0x451
  353  00001360  4be00000	jr	r31
  354  00001364  54000000	nop
  355  00001368          	.endproc _sem_wait
  357  00001368          	.proc _sem_signal
  358  00001368          	.global _sem_signal
  359  00001368          	_sem_signal:
  360  00001368  44000452	trap	#0x452
  361  0000136c  4be00000	jr	r31
  362  00001370  54000000	nop
  363  00001374          	.endproc _sem_signal
  365  00001374          	.proc _lock_create
  366  00001374          	.global _lock_create
  367  00001374          	_lock_create:
  368  00001374  44000453	trap	#0x453
  369  00001378  4be00000	jr	r31
  370  0000137c  54000000	nop
  371  00001380          	.endproc _lock_create
  373  00001380          	.proc _lock_acquire
  374  00001380          	.global _lock_acquire
  375  00001380          	_lock_acquire:
  376  00001380  44000454	trap	#0x454
  377  00001384  4be00000	jr	r31
  378  00001388  54000000	nop
  379  0000138c          	.endproc _lock_acquire
  381  0000138c          	.proc _lock_release
  382  0000138c          	.global _lock_release
  383  0000138c          	_lock_release:
  384  0000138c  44000455	trap	#0x455
  385  00001390  4be00000	jr	r31
  386  00001394  54000000	nop
  387  00001398          	.endproc _lock_release
  389  00001398          	.proc _cond_create
  390  00001398          	.global _cond_create
  391  00001398          	_cond_create:
  392  00001398  44000456	trap	#0x456
  393  0000139c  4be00000	jr	r31
  394  000013a0  54000000	nop
  395  000013a4          	.endproc _cond_create
  397  000013a4          	.proc _cond_wait
  398  000013a4          	.global _cond_wait
  399  000013a4          	_cond_wait:
  400  000013a4  44000457	trap	#0x457
  401  000013a8  4be00000	jr	r31
  402  000013ac  54000000	nop
  403  000013b0          	.endproc _cond_wait
  405  000013b0          	.proc _cond_signal
  406  000013b0          	.global _cond_signal
  407  000013b0          	_cond_signal:
  408  000013b0  44000458	trap	#0x458
  409  000013b4  4be00000	jr	r31
  410  000013b8  54000000	nop
  411  000013bc          	.endproc _cond_signal
  413  000013bc          	.proc _cond_broadcast
  414  000013bc          	.global _cond_broadcast
  415  000013bc          	_cond_broadcast:
  416  000013bc  44000459	trap	#0x459
  417  000013c0  4be00000	jr	r31
  418  000013c4  54000000	nop
  419  000013c8          	.endproc _cond_broadcast
  421  000013c8          	.proc _mbox_create
  422  000013c8          	.global _mbox_create
  423  000013c8          	_mbox_create:
  424  000013c8  44000460	trap	#0x460
  425  000013cc  4be00000	jr	r31
  426  000013d0  54000000	nop
  427  000013d4          	.endproc _mbox_create
  429  000013d4          	.proc _mbox_open
  430  000013d4          	.global _mbox_open
  431  000013d4          	_mbox_open:
  432  000013d4  44000461	trap	#0x461
  433  000013d8  4be00000	jr	r31
  434  000013dc  54000000	nop
  435  000013e0          	.endproc _mbox_open
  437  000013e0          	.proc _mbox_close
  438  000013e0          	.global _mbox_close
  439  000013e0          	_mbox_close:
  440  000013e0  44000462	trap	#0x462
  441  000013e4  4be00000	jr	r31
  442  000013e8  54000000	nop
  443  000013ec          	.endproc _mbox_close
  445  000013ec          	.proc _mbox_send
  446  000013ec          	.global _mbox_send
  447  000013ec          	_mbox_send:
  448  000013ec  44000463	trap	#0x463
  449  000013f0  4be00000	jr	r31
  450  000013f4  54000000	nop
  451  000013f8          	.endproc _mbox_send
  453  000013f8          	.proc _mbox_recv
  454  000013f8          	.global _mbox_recv
  455  000013f8          	_mbox_recv:
  456  000013f8  44000464	trap	#0x464
  457  000013fc  4be00000	jr	r31
  458  00001400  54000000	nop
  459  00001404          	.endproc _mbox_recv
  461  00001404          	.proc _sleep
  462  00001404          	.global _sleep
  463  00001404          	_sleep:
  464  00001404  44000465	trap	#0x465
  465  00001408  4be00000	jr	r31
  466  0000140c  54000000	nop
  467  00001410          	.endproc _sleep
  469  00001410          	.proc _yield
  470  00001410          	.global _yield
  471  00001410          	_yield:
  472  00001410  44000466	trap	#0x466
  473  00001414  4be00000	jr	r31
  474  00001418  54000000	nop
  475  0000141c          	.endproc _yield
  478  0000141c          	.proc _Exit
  479  0000141c          	.global _Exit
  480  0000141c          	_Exit:
  481  0000141c  44000500	trap	#0x500
  482  00001420  4be00000	jr	r31
  483  00001424  54000000	nop
  484  00001428          	.endproc _Exit
  485                      ; Compiled by GCC
  487  00001428          	.align 2
  488  00001428          	.proc _isspace
  489  00001428          	.global _isspace
  490  00001428          	_isspace:
  491                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  492  00001428  afbefffc	sw	-4(r29),r30; push fp
  493  0000142c  001df020	add	r30,r0,r29; fp = sp
  494  00001430  afbffff8	sw	-8(r29),r31; push ret addr
  495  00001434  2fbd0018	subui	r29,r29,#24; alloc local storage
  496  00001438  afa20000	sw	0(r29),r2
  497  0000143c  afa30004	sw	4(r29),r3
  498  00001440  afa40008	sw	8(r29),r4
  499  00001444  83c20003	lb	r2,3(r30)
  500  00001448  20010000	addi	r1,r0,#0
  501  0000144c  304300ff	andi	r3,r2,#0x00ff
  502  00001450  60640020	seqi	r4,r3,#32
  503  00001454  1480002c	bnez	r4,L3_LF2
  504  00001458  54000000	nop; delay slot nop
  505  0000145c  304300ff	andi	r3,r2,#0x00ff
  506  00001460  60640009	seqi	r4,r3,#9
  507  00001464  1480001c	bnez	r4,L3_LF2
  508  00001468  54000000	nop; delay slot nop
  509  0000146c  304300ff	andi	r3,r2,#0x00ff
  510  00001470  6064000a	seqi	r4,r3,#10
  511  00001474  1480000c	bnez	r4,L3_LF2
  512  00001478  54000000	nop; delay slot nop
  513  0000147c  08000008	j	L2_LF2
  514  00001480  54000000	nop; delay slot nop
  515  00001484          	L3_LF2:
  516  00001484  20010001	addi	r1,r0,#1
  517  00001488          	L2_LF2:
  518  00001488  08000004	j	L1_LF2
  519  0000148c  54000000	nop; delay slot nop
  520  00001490          	L1_LF2:
  521  00001490  8fa20000	lw	r2,0(r29)
  522  00001494  8fa30004	lw	r3,4(r29)
  523  00001498  8fa40008	lw	r4,8(r29)
  524  0000149c  8fdffff8	lw	r31,-8(r30)
  525  000014a0  001ee820	add	r29,r0,r30
  526  000014a4  8fdefffc	lw	r30,-4(r30)
  527  000014a8  4be00000	jr	r31
  528  000014ac  54000000	nop
  529  000014b0          	.endproc _isspace
  530  000014b0          	.align 2
  531  000014b0          	.proc _isxdigit
  532  000014b0          	.global _isxdigit
  533  000014b0          	_isxdigit:
  534                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  535  000014b0  afbefffc	sw	-4(r29),r30; push fp
  536  000014b4  001df020	add	r30,r0,r29; fp = sp
  537  000014b8  afbffff8	sw	-8(r29),r31; push ret addr
  538  000014bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  539  000014c0  afa20000	sw	0(r29),r2
  540  000014c4  afa30004	sw	4(r29),r3
  541  000014c8  afa40008	sw	8(r29),r4
  542  000014cc  83c20003	lb	r2,3(r30)
  543  000014d0  20010000	addi	r1,r0,#0
  544  000014d4  304300ff	andi	r3,r2,#0x00ff
  545  000014d8  6c64002f	sgtui	r4,r3,#47
  546  000014dc  1080001c	beqz	r4,L7_LF2
  547  000014e0  54000000	nop; delay slot nop
  548  000014e4  304300ff	andi	r3,r2,#0x00ff
  549  000014e8  70640039	sleui	r4,r3,#57
  550  000014ec  1480005c	bnez	r4,L6_LF2
  551  000014f0  54000000	nop; delay slot nop
  552  000014f4  08000004	j	L7_LF2
  553  000014f8  54000000	nop; delay slot nop
  554  000014fc          	L7_LF2:
  555  000014fc  304300ff	andi	r3,r2,#0x00ff
  556  00001500  6c640060	sgtui	r4,r3,#96
  557  00001504  1080001c	beqz	r4,L8_LF2
  558  00001508  54000000	nop; delay slot nop
  559  0000150c  304300ff	andi	r3,r2,#0x00ff
  560  00001510  70640066	sleui	r4,r3,#102
  561  00001514  14800034	bnez	r4,L6_LF2
  562  00001518  54000000	nop; delay slot nop
  563  0000151c  08000004	j	L8_LF2
  564  00001520  54000000	nop; delay slot nop
  565  00001524          	L8_LF2:
  566  00001524  304300ff	andi	r3,r2,#0x00ff
  567  00001528  6c640040	sgtui	r4,r3,#64
  568  0000152c  10800020	beqz	r4,L5_LF2
  569  00001530  54000000	nop; delay slot nop
  570  00001534  304300ff	andi	r3,r2,#0x00ff
  571  00001538  70640041	sleui	r4,r3,#65
  572  0000153c  1480000c	bnez	r4,L6_LF2
  573  00001540  54000000	nop; delay slot nop
  574  00001544  08000008	j	L5_LF2
  575  00001548  54000000	nop; delay slot nop
  576  0000154c          	L6_LF2:
  577  0000154c  20010001	addi	r1,r0,#1
  578  00001550          	L5_LF2:
  579  00001550  08000004	j	L4_LF2
  580  00001554  54000000	nop; delay slot nop
  581  00001558          	L4_LF2:
  582  00001558  8fa20000	lw	r2,0(r29)
  583  0000155c  8fa30004	lw	r3,4(r29)
  584  00001560  8fa40008	lw	r4,8(r29)
  585  00001564  8fdffff8	lw	r31,-8(r30)
  586  00001568  001ee820	add	r29,r0,r30
  587  0000156c  8fdefffc	lw	r30,-4(r30)
  588  00001570  4be00000	jr	r31
  589  00001574  54000000	nop
  590  00001578          	.endproc _isxdigit
  591  00001578          	.align 2
  592  00001578          	.proc _dstrcpy
  593  00001578          	.global _dstrcpy
  594  00001578          	_dstrcpy:
  595                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  596  00001578  afbefffc	sw	-4(r29),r30; push fp
  597  0000157c  001df020	add	r30,r0,r29; fp = sp
  598  00001580  afbffff8	sw	-8(r29),r31; push ret addr
  599  00001584  2fbd0018	subui	r29,r29,#24; alloc local storage
  600  00001588  afa20000	sw	0(r29),r2
  601  0000158c  afa30004	sw	4(r29),r3
  602  00001590  8fc10000	lw	r1,(r30)
  603  00001594  afc1fff4	sw	-12(r30),r1
  604  00001598          	L10_LF2:
  605  00001598  8fc10000	lw	r1,(r30)
  606  0000159c  20220001	addi	r2,r1,#1
  607  000015a0  afc20000	sw	(r30),r2
  608  000015a4  8fc20004	lw	r2,4(r30)
  609  000015a8  20430001	addi	r3,r2,#1
  610  000015ac  afc30004	sw	4(r30),r3
  611  000015b0  80420000	lb	r2,(r2)
  612  000015b4  a0220000	sb	(r1),r2
  613  000015b8  a3c2fff3	sb	-13(r30),r2
  614  000015bc          	L12_LF2:
  615  000015bc  93c1fff3	lbu	r1,-13(r30)
  616  000015c0  64220000	snei	r2,r1,#0
  617  000015c4  1440000c	bnez	r2,L13_LF2
  618  000015c8  54000000	nop; delay slot nop
  619  000015cc  0800000c	j	L11_LF2
  620  000015d0  54000000	nop; delay slot nop
  621  000015d4          	L13_LF2:
  622  000015d4  0bffffc0	j	L10_LF2
  623  000015d8  54000000	nop; delay slot nop
  624  000015dc          	L11_LF2:
  625  000015dc  8fc1fff4	lw	r1,-12(r30)
  626  000015e0  08000004	j	L9_LF2
  627  000015e4  54000000	nop; delay slot nop
  628  000015e8          	L9_LF2:
  629  000015e8  8fa20000	lw	r2,0(r29)
  630  000015ec  8fa30004	lw	r3,4(r29)
  631  000015f0  8fdffff8	lw	r31,-8(r30)
  632  000015f4  001ee820	add	r29,r0,r30
  633  000015f8  8fdefffc	lw	r30,-4(r30)
  634  000015fc  4be00000	jr	r31
  635  00001600  54000000	nop
  636  00001604          	.endproc _dstrcpy
  637  00001604          	.align 2
  638  00001604          	.proc _dstrncpy
  639  00001604          	.global _dstrncpy
  640  00001604          	_dstrncpy:
  641                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  642  00001604  afbefffc	sw	-4(r29),r30; push fp
  643  00001608  001df020	add	r30,r0,r29; fp = sp
  644  0000160c  afbffff8	sw	-8(r29),r31; push ret addr
  645  00001610  2fbd0018	subui	r29,r29,#24; alloc local storage
  646  00001614  afa20000	sw	0(r29),r2
  647  00001618  afa30004	sw	4(r29),r3
  648  0000161c  8fc10000	lw	r1,(r30)
  649  00001620  afc1fff4	sw	-12(r30),r1
  650  00001624          	L15_LF2:
  651  00001624  8fc10008	lw	r1,8(r30)
  652  00001628  2022ffff	addi	r2,r1,#-1
  653  0000162c  afc20008	sw	8(r30),r2
  654  00001630  70210000	slei	r1,r1,#0
  655  00001634  1020000c	beqz	r1,L18_LF2
  656  00001638  54000000	nop; delay slot nop
  657  0000163c  08000048	j	L16_LF2
  658  00001640  54000000	nop; delay slot nop
  659  00001644          	L18_LF2:
  660  00001644  8fc10000	lw	r1,(r30)
  661  00001648  20220001	addi	r2,r1,#1
  662  0000164c  afc20000	sw	(r30),r2
  663  00001650  8fc20004	lw	r2,4(r30)
  664  00001654  20430001	addi	r3,r2,#1
  665  00001658  afc30004	sw	4(r30),r3
  666  0000165c  80420000	lb	r2,(r2)
  667  00001660  a0220000	sb	(r1),r2
  668  00001664  a3c2fff3	sb	-13(r30),r2
  669  00001668          	L17_LF2:
  670  00001668  93c1fff3	lbu	r1,-13(r30)
  671  0000166c  64220000	snei	r2,r1,#0
  672  00001670  1440000c	bnez	r2,L19_LF2
  673  00001674  54000000	nop; delay slot nop
  674  00001678  0800000c	j	L16_LF2
  675  0000167c  54000000	nop; delay slot nop
  676  00001680          	L19_LF2:
  677  00001680  0bffffa0	j	L15_LF2
  678  00001684  54000000	nop; delay slot nop
  679  00001688          	L16_LF2:
  680  00001688  8fc1fff4	lw	r1,-12(r30)
  681  0000168c  08000004	j	L14_LF2
  682  00001690  54000000	nop; delay slot nop
  683  00001694          	L14_LF2:
  684  00001694  8fa20000	lw	r2,0(r29)
  685  00001698  8fa30004	lw	r3,4(r29)
  686  0000169c  8fdffff8	lw	r31,-8(r30)
  687  000016a0  001ee820	add	r29,r0,r30
  688  000016a4  8fdefffc	lw	r30,-4(r30)
  689  000016a8  4be00000	jr	r31
  690  000016ac  54000000	nop
  691  000016b0          	.endproc _dstrncpy
  692  000016b0          	.align 2
  693  000016b0          	.proc _dstrcat
  694  000016b0          	.global _dstrcat
  695  000016b0          	_dstrcat:
  696                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  697  000016b0  afbefffc	sw	-4(r29),r30; push fp
  698  000016b4  001df020	add	r30,r0,r29; fp = sp
  699  000016b8  afbffff8	sw	-8(r29),r31; push ret addr
  700  000016bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  701  000016c0  afa20000	sw	0(r29),r2
  702  000016c4  8fc10000	lw	r1,(r30)
  703  000016c8  afc1fff4	sw	-12(r30),r1
  704  000016cc          	L21_LF2:
  705  000016cc  8fc10000	lw	r1,(r30)
  706  000016d0  90220000	lbu	r2,(r1)
  707  000016d4  64410000	snei	r1,r2,#0
  708  000016d8  1420000c	bnez	r1,L23_LF2
  709  000016dc  54000000	nop; delay slot nop
  710  000016e0  0800001c	j	L22_LF2
  711  000016e4  54000000	nop; delay slot nop
  712  000016e8          	L23_LF2:
  713  000016e8  8fc20000	lw	r2,(r30)
  714  000016ec  20410001	addi	r1,r2,#1
  715  000016f0  00011020	add	r2,r0,r1
  716  000016f4  afc20000	sw	(r30),r2
  717  000016f8  0bffffd0	j	L21_LF2
  718  000016fc  54000000	nop; delay slot nop
  719  00001700          	L22_LF2:
  720  00001700  23bdfff8	addi	r29,r29,#-8
  721  00001704  001d0820	add	r1,r0,r29
  722  00001708  8fc20000	lw	r2,(r30)
  723  0000170c  ac220000	sw	(r1),r2
  724  00001710  8fc20004	lw	r2,4(r30)
  725  00001714  ac220004	sw	4(r1),r2
  726  00001718  0ffffe5c	jal	_dstrcpy
  727  0000171c  54000000	nop; delay slot nop
  728  00001720  23bd0008	addi	r29,r29,#8
  729  00001724  8fc1fff4	lw	r1,-12(r30)
  730  00001728  08000004	j	L20_LF2
  731  0000172c  54000000	nop; delay slot nop
  732  00001730          	L20_LF2:
  733  00001730  8fa20000	lw	r2,0(r29)
  734  00001734  8fdffff8	lw	r31,-8(r30)
  735  00001738  001ee820	add	r29,r0,r30
  736  0000173c  8fdefffc	lw	r30,-4(r30)
  737  00001740  4be00000	jr	r31
  738  00001744  54000000	nop
  739  00001748          	.endproc _dstrcat
  740  00001748          	.align 2
  741  00001748          	.proc _dstrncmp
  742  00001748          	.global _dstrncmp
  743  00001748          	_dstrncmp:
  744                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  745  00001748  afbefffc	sw	-4(r29),r30; push fp
  746  0000174c  001df020	add	r30,r0,r29; fp = sp
  747  00001750  afbffff8	sw	-8(r29),r31; push ret addr
  748  00001754  2fbd0018	subui	r29,r29,#24; alloc local storage
  749  00001758  afa20000	sw	0(r29),r2
  750  0000175c  afa30004	sw	4(r29),r3
  751  00001760  54000000	nop
  752  00001764  20010000	addi	r1,r0,#0
  753  00001768  afc1fff4	sw	-12(r30),r1
  754  0000176c          	L25_LF2:
  755  0000176c  8fc1fff4	lw	r1,-12(r30)
  756  00001770  8fc20008	lw	r2,8(r30)
  757  00001774  0022082a	slt	r1,r1,r2
  758  00001778  1420000c	bnez	r1,L28_LF2
  759  0000177c  54000000	nop; delay slot nop
  760  00001780  08000088	j	L26_LF2
  761  00001784  54000000	nop; delay slot nop
  762  00001788          	L28_LF2:
  763  00001788  8fc10004	lw	r1,4(r30)
  764  0000178c  90220000	lbu	r2,(r1)
  765  00001790  64410000	snei	r1,r2,#0
  766  00001794  14200018	bnez	r1,L29_LF2
  767  00001798  54000000	nop; delay slot nop
  768  0000179c  20010000	addi	r1,r0,#0
  769  000017a0  080000d8	j	L24_LF2
  770  000017a4  54000000	nop; delay slot nop
  771  000017a8  08000028	j	L30_LF2
  772  000017ac  54000000	nop; delay slot nop
  773  000017b0          	L29_LF2:
  774  000017b0  8fc10000	lw	r1,(r30)
  775  000017b4  8fc20004	lw	r2,4(r30)
  776  000017b8  90210000	lbu	r1,(r1)
  777  000017bc  90420000	lbu	r2,(r2)
  778  000017c0  00220829	sne	r1,r1,r2
  779  000017c4  1020000c	beqz	r1,L30_LF2
  780  000017c8  54000000	nop; delay slot nop
  781  000017cc  0800003c	j	L26_LF2
  782  000017d0  54000000	nop; delay slot nop
  783  000017d4          	L31_LF2:
  784  000017d4          	L30_LF2:
  785  000017d4  8fc20000	lw	r2,(r30)
  786  000017d8  20410001	addi	r1,r2,#1
  787  000017dc  00011020	add	r2,r0,r1
  788  000017e0  afc20000	sw	(r30),r2
  789  000017e4  8fc20004	lw	r2,4(r30)
  790  000017e8  20410001	addi	r1,r2,#1
  791  000017ec  00011020	add	r2,r0,r1
  792  000017f0  afc20004	sw	4(r30),r2
  793  000017f4          	L27_LF2:
  794  000017f4  8fc2fff4	lw	r2,-12(r30)
  795  000017f8  20410001	addi	r1,r2,#1
  796  000017fc  00011020	add	r2,r0,r1
  797  00001800  afc2fff4	sw	-12(r30),r2
  798  00001804  0bffff64	j	L25_LF2
  799  00001808  54000000	nop; delay slot nop
  800  0000180c          	L26_LF2:
  801  0000180c  8fc1fff4	lw	r1,-12(r30)
  802  00001810  8fc20008	lw	r2,8(r30)
  803  00001814  00220828	seq	r1,r1,r2
  804  00001818  10200018	beqz	r1,L32_LF2
  805  0000181c  54000000	nop; delay slot nop
  806  00001820  20010000	addi	r1,r0,#0
  807  00001824  08000054	j	L24_LF2
  808  00001828  54000000	nop; delay slot nop
  809  0000182c  0800004c	j	L33_LF2
  810  00001830  54000000	nop; delay slot nop
  811  00001834          	L32_LF2:
  812  00001834  8fc20000	lw	r2,(r30)
  813  00001838  90410000	lbu	r1,(r2)
  814  0000183c  8fc20004	lw	r2,4(r30)
  815  00001840  90430000	lbu	r3,(r2)
  816  00001844  00230822	sub	r1,r1,r3
  817  00001848  74220000	sgei	r2,r1,#0
  818  0000184c  10400020	beqz	r2,L34_LF2
  819  00001850  54000000	nop; delay slot nop
  820  00001854  8fc10000	lw	r1,(r30)
  821  00001858  8fc20004	lw	r2,4(r30)
  822  0000185c  90210000	lbu	r1,(r1)
  823  00001860  90420000	lbu	r2,(r2)
  824  00001864  00220829	sne	r1,r1,r2
  825  00001868  08000008	j	L35_LF2
  826  0000186c  54000000	nop; delay slot nop
  827  00001870          	L34_LF2:
  828  00001870  2001ffff	addi	r1,r0,#-1
  829  00001874          	L35_LF2:
  830  00001874  08000004	j	L24_LF2
  831  00001878  54000000	nop; delay slot nop
  832  0000187c          	L33_LF2:
  833  0000187c          	L24_LF2:
  834  0000187c  8fa20000	lw	r2,0(r29)
  835  00001880  8fa30004	lw	r3,4(r29)
  836  00001884  8fdffff8	lw	r31,-8(r30)
  837  00001888  001ee820	add	r29,r0,r30
  838  0000188c  8fdefffc	lw	r30,-4(r30)
  839  00001890  4be00000	jr	r31
  840  00001894  54000000	nop
  841  00001898          	.endproc _dstrncmp
  842  00001898          	.align 2
  843  00001898          	.proc _dstrlen
  844  00001898          	.global _dstrlen
  845  00001898          	_dstrlen:
  846                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  847  00001898  afbefffc	sw	-4(r29),r30; push fp
  848  0000189c  001df020	add	r30,r0,r29; fp = sp
  849  000018a0  afbffff8	sw	-8(r29),r31; push ret addr
  850  000018a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  851  000018a8  afa20000	sw	0(r29),r2
  852  000018ac  20010000	addi	r1,r0,#0
  853  000018b0  afc1fff4	sw	-12(r30),r1
  854  000018b4          	L37_LF2:
  855  000018b4  8fc10000	lw	r1,(r30)
  856  000018b8  20220001	addi	r2,r1,#1
  857  000018bc  afc20000	sw	(r30),r2
  858  000018c0  90210000	lbu	r1,(r1)
  859  000018c4  64220000	snei	r2,r1,#0
  860  000018c8  1440000c	bnez	r2,L39_LF2
  861  000018cc  54000000	nop; delay slot nop
  862  000018d0  0800001c	j	L38_LF2
  863  000018d4  54000000	nop; delay slot nop
  864  000018d8          	L39_LF2:
  865  000018d8  8fc2fff4	lw	r2,-12(r30)
  866  000018dc  20410001	addi	r1,r2,#1
  867  000018e0  00011020	add	r2,r0,r1
  868  000018e4  afc2fff4	sw	-12(r30),r2
  869  000018e8  0bffffc8	j	L37_LF2
  870  000018ec  54000000	nop; delay slot nop
  871  000018f0          	L38_LF2:
  872  000018f0  8fc1fff4	lw	r1,-12(r30)
  873  000018f4  08000004	j	L36_LF2
  874  000018f8  54000000	nop; delay slot nop
  875  000018fc          	L36_LF2:
  876  000018fc  8fa20000	lw	r2,0(r29)
  877  00001900  8fdffff8	lw	r31,-8(r30)
  878  00001904  001ee820	add	r29,r0,r30
  879  00001908  8fdefffc	lw	r30,-4(r30)
  880  0000190c  4be00000	jr	r31
  881  00001910  54000000	nop
  882  00001914          	.endproc _dstrlen
  883  00001914          	.align 2
  884  00001914          	.proc _dstrstr
  885  00001914          	.global _dstrstr
  886  00001914          	_dstrstr:
  887                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  888  00001914  afbefffc	sw	-4(r29),r30; push fp
  889  00001918  001df020	add	r30,r0,r29; fp = sp
  890  0000191c  afbffff8	sw	-8(r29),r31; push ret addr
  891  00001920  2fbd0018	subui	r29,r29,#24; alloc local storage
  892  00001924  afa20000	sw	0(r29),r2
  893  00001928  23bdfff8	addi	r29,r29,#-8
  894  0000192c  001d0820	add	r1,r0,r29
  895  00001930  8fc20004	lw	r2,4(r30)
  896  00001934  ac220000	sw	(r1),r2
  897  00001938  0fffff5c	jal	_dstrlen
  898  0000193c  54000000	nop; delay slot nop
  899  00001940  23bd0008	addi	r29,r29,#8
  900  00001944  afc1fff4	sw	-12(r30),r1
  901  00001948          	L41_LF2:
  902  00001948  8fc10000	lw	r1,(r30)
  903  0000194c  90220000	lbu	r2,(r1)
  904  00001950  64410000	snei	r1,r2,#0
  905  00001954  1420000c	bnez	r1,L43_LF2
  906  00001958  54000000	nop; delay slot nop
  907  0000195c  08000060	j	L42_LF2
  908  00001960  54000000	nop; delay slot nop
  909  00001964          	L43_LF2:
  910  00001964  23bdfff0	addi	r29,r29,#-16
  911  00001968  001d0820	add	r1,r0,r29
  912  0000196c  8fc20000	lw	r2,(r30)
  913  00001970  ac220000	sw	(r1),r2
  914  00001974  8fc20004	lw	r2,4(r30)
  915  00001978  ac220004	sw	4(r1),r2
  916  0000197c  8fc2fff4	lw	r2,-12(r30)
  917  00001980  ac220008	sw	8(r1),r2
  918  00001984  0ffffdc0	jal	_dstrncmp
  919  00001988  54000000	nop; delay slot nop
  920  0000198c  23bd0010	addi	r29,r29,#16
  921  00001990  64220000	snei	r2,r1,#0
  922  00001994  14400010	bnez	r2,L44_LF2
  923  00001998  54000000	nop; delay slot nop
  924  0000199c  8fc10000	lw	r1,(r30)
  925  000019a0  08000028	j	L40_LF2
  926  000019a4  54000000	nop; delay slot nop
  927  000019a8          	L44_LF2:
  928  000019a8  8fc20000	lw	r2,(r30)
  929  000019ac  20410001	addi	r1,r2,#1
  930  000019b0  00011020	add	r2,r0,r1
  931  000019b4  afc20000	sw	(r30),r2
  932  000019b8  0bffff8c	j	L41_LF2
  933  000019bc  54000000	nop; delay slot nop
  934  000019c0          	L42_LF2:
  935  000019c0  20010000	addi	r1,r0,#0
  936  000019c4  08000004	j	L40_LF2
  937  000019c8  54000000	nop; delay slot nop
  938  000019cc          	L40_LF2:
  939  000019cc  8fa20000	lw	r2,0(r29)
  940  000019d0  8fdffff8	lw	r31,-8(r30)
  941  000019d4  001ee820	add	r29,r0,r30
  942  000019d8  8fdefffc	lw	r30,-4(r30)
  943  000019dc  4be00000	jr	r31
  944  000019e0  54000000	nop
  945  000019e4          	.endproc _dstrstr
  946  000019e4          	.align 2
  947  000019e4          	.proc _dmindex
  948  000019e4          	.global _dmindex
  949  000019e4          	_dmindex:
  950                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  951  000019e4  afbefffc	sw	-4(r29),r30; push fp
  952  000019e8  001df020	add	r30,r0,r29; fp = sp
  953  000019ec  afbffff8	sw	-8(r29),r31; push ret addr
  954  000019f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  955  000019f4  afa20000	sw	0(r29),r2
  956  000019f8  54000000	nop
  957  000019fc          	L46_LF2:
  958  000019fc  8fc10000	lw	r1,(r30)
  959  00001a00  90220000	lbu	r2,(r1)
  960  00001a04  64410000	snei	r1,r2,#0
  961  00001a08  1420000c	bnez	r1,L48_LF2
  962  00001a0c  54000000	nop; delay slot nop
  963  00001a10  08000070	j	L47_LF2
  964  00001a14  54000000	nop; delay slot nop
  965  00001a18          	L48_LF2:
  966  00001a18  8fc10004	lw	r1,4(r30)
  967  00001a1c  afc1fff4	sw	-12(r30),r1
  968  00001a20          	L49_LF2:
  969  00001a20  8fc1fff4	lw	r1,-12(r30)
  970  00001a24  90220000	lbu	r2,(r1)
  971  00001a28  64410000	snei	r1,r2,#0
  972  00001a2c  1420000c	bnez	r1,L52_LF2
  973  00001a30  54000000	nop; delay slot nop
  974  00001a34  08000044	j	L50_LF2
  975  00001a38  54000000	nop; delay slot nop
  976  00001a3c          	L52_LF2:
  977  00001a3c  8fc10000	lw	r1,(r30)
  978  00001a40  8fc2fff4	lw	r2,-12(r30)
  979  00001a44  90210000	lbu	r1,(r1)
  980  00001a48  90420000	lbu	r2,(r2)
  981  00001a4c  00220828	seq	r1,r1,r2
  982  00001a50  10200010	beqz	r1,L51_LF2
  983  00001a54  54000000	nop; delay slot nop
  984  00001a58  8fc10000	lw	r1,(r30)
  985  00001a5c  08000030	j	L45_LF2
  986  00001a60  54000000	nop; delay slot nop
  987  00001a64          	L53_LF2:
  988  00001a64          	L51_LF2:
  989  00001a64  8fc2fff4	lw	r2,-12(r30)
  990  00001a68  20410001	addi	r1,r2,#1
  991  00001a6c  00011020	add	r2,r0,r1
  992  00001a70  afc2fff4	sw	-12(r30),r2
  993  00001a74  0bffffa8	j	L49_LF2
  994  00001a78  54000000	nop; delay slot nop
  995  00001a7c          	L50_LF2:
  996  00001a7c  0bffff7c	j	L46_LF2
  997  00001a80  54000000	nop; delay slot nop
  998  00001a84          	L47_LF2:
  999  00001a84  20010000	addi	r1,r0,#0
 1000  00001a88  08000004	j	L45_LF2
 1001  00001a8c  54000000	nop; delay slot nop
 1002  00001a90          	L45_LF2:
 1003  00001a90  8fa20000	lw	r2,0(r29)
 1004  00001a94  8fdffff8	lw	r31,-8(r30)
 1005  00001a98  001ee820	add	r29,r0,r30
 1006  00001a9c  8fdefffc	lw	r30,-4(r30)
 1007  00001aa0  4be00000	jr	r31
 1008  00001aa4  54000000	nop
 1009  00001aa8          	.endproc _dmindex
 1010  00001aa8          	.align 2
 1011  00001aa8          	.proc _dindex
 1012  00001aa8          	.global _dindex
 1013  00001aa8          	_dindex:
 1014                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1015  00001aa8  afbefffc	sw	-4(r29),r30; push fp
 1016  00001aac  001df020	add	r30,r0,r29; fp = sp
 1017  00001ab0  afbffff8	sw	-8(r29),r31; push ret addr
 1018  00001ab4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1019  00001ab8  afa20000	sw	0(r29),r2
 1020  00001abc  54000000	nop
 1021  00001ac0          	L55_LF2:
 1022  00001ac0  8fc10000	lw	r1,(r30)
 1023  00001ac4  90220000	lbu	r2,(r1)
 1024  00001ac8  64410000	snei	r1,r2,#0
 1025  00001acc  1420000c	bnez	r1,L57_LF2
 1026  00001ad0  54000000	nop; delay slot nop
 1027  00001ad4  08000040	j	L56_LF2
 1028  00001ad8  54000000	nop; delay slot nop
 1029  00001adc          	L57_LF2:
 1030  00001adc  8fc10000	lw	r1,(r30)
 1031  00001ae0  90220000	lbu	r2,(r1)
 1032  00001ae4  8fc10004	lw	r1,4(r30)
 1033  00001ae8  00411028	seq	r2,r2,r1
 1034  00001aec  10400010	beqz	r2,L58_LF2
 1035  00001af0  54000000	nop; delay slot nop
 1036  00001af4  8fc10000	lw	r1,(r30)
 1037  00001af8  08000028	j	L54_LF2
 1038  00001afc  54000000	nop; delay slot nop
 1039  00001b00          	L58_LF2:
 1040  00001b00  8fc20000	lw	r2,(r30)
 1041  00001b04  20410001	addi	r1,r2,#1
 1042  00001b08  00011020	add	r2,r0,r1
 1043  00001b0c  afc20000	sw	(r30),r2
 1044  00001b10  0bffffac	j	L55_LF2
 1045  00001b14  54000000	nop; delay slot nop
 1046  00001b18          	L56_LF2:
 1047  00001b18  20010000	addi	r1,r0,#0
 1048  00001b1c  08000004	j	L54_LF2
 1049  00001b20  54000000	nop; delay slot nop
 1050  00001b24          	L54_LF2:
 1051  00001b24  8fa20000	lw	r2,0(r29)
 1052  00001b28  8fdffff8	lw	r31,-8(r30)
 1053  00001b2c  001ee820	add	r29,r0,r30
 1054  00001b30  8fdefffc	lw	r30,-4(r30)
 1055  00001b34  4be00000	jr	r31
 1056  00001b38  54000000	nop
 1057  00001b3c          	.endproc _dindex
 1058  00001b3c          	.align 2
 1059  00001b3c          	.proc _ditoa
 1060  00001b3c          	.global _ditoa
 1061  00001b3c          	_ditoa:
 1062                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1063  00001b3c  afbefffc	sw	-4(r29),r30; push fp
 1064  00001b40  001df020	add	r30,r0,r29; fp = sp
 1065  00001b44  afbffff8	sw	-8(r29),r31; push ret addr
 1066  00001b48  2fbd0018	subui	r29,r29,#24; alloc local storage
 1067  00001b4c  afa20000	sw	0(r29),r2
 1068  00001b50  afa30004	sw	4(r29),r3
 1069  00001b54  8fc10000	lw	r1,(r30)
 1070  00001b58  68220000	slti	r2,r1,#0
 1071  00001b5c  1040002c	beqz	r2,L60_LF2
 1072  00001b60  54000000	nop; delay slot nop
 1073  00001b64  8fc10004	lw	r1,4(r30)
 1074  00001b68  20220001	addi	r2,r1,#1
 1075  00001b6c  afc20004	sw	4(r30),r2
 1076  00001b70  2002002d	addi	r2,r0,(#0x2d)&0xff
 1077  00001b74  a0220000	sb	(r1),r2
 1078  00001b78  8fc10000	lw	r1,(r30)
 1079  00001b7c  00011022	sub	r2,r0,r1
 1080  00001b80  afc20000	sw	(r30),r2
 1081  00001b84  08000118	j	L61_LF2
 1082  00001b88  54000000	nop; delay slot nop
 1083  00001b8c          	L60_LF2:
 1084  00001b8c  8fc10000	lw	r1,(r30)
 1085  00001b90  64220000	snei	r2,r1,#0
 1086  00001b94  14400020	bnez	r2,L62_LF2
 1087  00001b98  54000000	nop; delay slot nop
 1088  00001b9c  8fc10004	lw	r1,4(r30)
 1089  00001ba0  20220001	addi	r2,r1,#1
 1090  00001ba4  afc20004	sw	4(r30),r2
 1091  00001ba8  20020030	addi	r2,r0,(#0x30)&0xff
 1092  00001bac  a0220000	sb	(r1),r2
 1093  00001bb0  080000ec	j	L61_LF2
 1094  00001bb4  54000000	nop; delay slot nop
 1095  00001bb8          	L62_LF2:
 1096  00001bb8  20010001	addi	r1,r0,#1
 1097  00001bbc  afc1fff4	sw	-12(r30),r1
 1098  00001bc0          	L64_LF2:
 1099  00001bc0  8fc1fff4	lw	r1,-12(r30)
 1100  00001bc4  8fc20000	lw	r2,(r30)
 1101  00001bc8  0022082c	sle	r1,r1,r2
 1102  00001bcc  1420000c	bnez	r1,L66_LF2
 1103  00001bd0  54000000	nop; delay slot nop
 1104  00001bd4  08000024	j	L65_LF2
 1105  00001bd8  54000000	nop; delay slot nop
 1106  00001bdc          	L67_LF2:
 1107  00001bdc          	L66_LF2:
 1108  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1109  00001be0  00011820	add	r3,r0,r1
 1110  00001be4  50620002	slli	r2,r3,#0x2
 1111  00001be8  00411020	add	r2,r2,r1
 1112  00001bec  50410001	slli	r1,r2,#0x1
 1113  00001bf0  afc1fff4	sw	-12(r30),r1
 1114  00001bf4  0bffffc8	j	L64_LF2
 1115  00001bf8  54000000	nop; delay slot nop
 1116  00001bfc          	L65_LF2:
 1117  00001bfc  54000000	nop
 1118  00001c00          	L68_LF2:
 1119  00001c00  8fc1fff4	lw	r1,-12(r30)
 1120  00001c04  2002000a	addi	r2,r0,#10
 1121  00001c08  00200035	movi2fp	f0,r1
 1122  00001c0c  00400835	movi2fp	f1,r2
 1123  00001c10  0401000f	div	f0,f0,f1
 1124  00001c14  00000834	movfp2i	r1,f0
 1125  00001c18  afc1fff4	sw	-12(r30),r1
 1126  00001c1c  8fc10004	lw	r1,4(r30)
 1127  00001c20  20220001	addi	r2,r1,#1
 1128  00001c24  afc20004	sw	4(r30),r2
 1129  00001c28  8fc20000	lw	r2,(r30)
 1130  00001c2c  8fc3fff4	lw	r3,-12(r30)
 1131  00001c30  00400035	movi2fp	f0,r2
 1132  00001c34  00600835	movi2fp	f1,r3
 1133  00001c38  0401000f	div	f0,f0,f1
 1134  00001c3c  00001034	movfp2i	r2,f0
 1135  00001c40  00021820	add	r3,r0,r2
 1136  00001c44  20620030	addi	r2,r3,#48
 1137  00001c48  a0220000	sb	(r1),r2
 1138  00001c4c  8fc10000	lw	r1,(r30)
 1139  00001c50  8fc3fff4	lw	r3,-12(r30)
 1140  00001c54  00200035	movi2fp	f0,r1
 1141  00001c58  00600835	movi2fp	f1,r3
 1142  00001c5c  0401000f	div	f0,f0,f1
 1143  00001c60  00001034	movfp2i	r2,f0
 1144  00001c64  8fc3fff4	lw	r3,-12(r30)
 1145  00001c68  00400035	movi2fp	f0,r2
 1146  00001c6c  00600835	movi2fp	f1,r3
 1147  00001c70  0401000e	mult	f0,f0,f1
 1148  00001c74  00001034	movfp2i	r2,f0
 1149  00001c78  00220822	sub	r1,r1,r2
 1150  00001c7c  afc10000	sw	(r30),r1
 1151  00001c80          	L70_LF2:
 1152  00001c80  8fc1fff4	lw	r1,-12(r30)
 1153  00001c84  6c220001	sgti	r2,r1,#1
 1154  00001c88  1440000c	bnez	r2,L71_LF2
 1155  00001c8c  54000000	nop; delay slot nop
 1156  00001c90  0800000c	j	L61_LF2
 1157  00001c94  54000000	nop; delay slot nop
 1158  00001c98          	L71_LF2:
 1159  00001c98  0bffff64	j	L68_LF2
 1160  00001c9c  54000000	nop; delay slot nop
 1161  00001ca0          	L69_LF2:
 1162  00001ca0          	L63_LF2:
 1163  00001ca0          	L61_LF2:
 1164  00001ca0  8fc10004	lw	r1,4(r30)
 1165  00001ca4  20020000	addi	r2,r0,(#0x0)&0xff
 1166  00001ca8  a0220000	sb	(r1),r2
 1167  00001cac          	L59_LF2:
 1168  00001cac  8fa20000	lw	r2,0(r29)
 1169  00001cb0  8fa30004	lw	r3,4(r29)
 1170  00001cb4  8fdffff8	lw	r31,-8(r30)
 1171  00001cb8  001ee820	add	r29,r0,r30
 1172  00001cbc  8fdefffc	lw	r30,-4(r30)
 1173  00001cc0  4be00000	jr	r31
 1174  00001cc4  54000000	nop
 1175  00001cc8          	.endproc _ditoa
 1176  00001cc8          	.align 2
 1177  00001cc8          	.proc _dstrtol
 1178  00001cc8          	.global _dstrtol
 1179  00001cc8          	_dstrtol:
 1180                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1181  00001cc8  afbefffc	sw	-4(r29),r30; push fp
 1182  00001ccc  001df020	add	r30,r0,r29; fp = sp
 1183  00001cd0  afbffff8	sw	-8(r29),r31; push ret addr
 1184  00001cd4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1185  00001cd8  afa20000	sw	0(r29),r2
 1186  00001cdc  20010000	addi	r1,r0,#0
 1187  00001ce0  afc1fff4	sw	-12(r30),r1
 1188  00001ce4          	L73_LF2:
 1189  00001ce4  8fc10000	lw	r1,(r30)
 1190  00001ce8  90220000	lbu	r2,(r1)
 1191  00001cec  60410020	seqi	r1,r2,#32
 1192  00001cf0  14200034	bnez	r1,L75_LF2
 1193  00001cf4  54000000	nop; delay slot nop
 1194  00001cf8  8fc10000	lw	r1,(r30)
 1195  00001cfc  90220000	lbu	r2,(r1)
 1196  00001d00  60410009	seqi	r1,r2,#9
 1197  00001d04  14200020	bnez	r1,L75_LF2
 1198  00001d08  54000000	nop; delay slot nop
 1199  00001d0c  8fc10000	lw	r1,(r30)
 1200  00001d10  90220000	lbu	r2,(r1)
 1201  00001d14  6041000a	seqi	r1,r2,#10
 1202  00001d18  1420000c	bnez	r1,L75_LF2
 1203  00001d1c  54000000	nop; delay slot nop
 1204  00001d20  0800001c	j	L74_LF2
 1205  00001d24  54000000	nop; delay slot nop
 1206  00001d28          	L75_LF2:
 1207  00001d28  8fc20000	lw	r2,(r30)
 1208  00001d2c  20410001	addi	r1,r2,#1
 1209  00001d30  00011020	add	r2,r0,r1
 1210  00001d34  afc20000	sw	(r30),r2
 1211  00001d38  0bffffa8	j	L73_LF2
 1212  00001d3c  54000000	nop; delay slot nop
 1213  00001d40          	L74_LF2:
 1214  00001d40  8fc10004	lw	r1,4(r30)
 1215  00001d44  64220000	snei	r2,r1,#0
 1216  00001d48  10400010	beqz	r2,L76_LF2
 1217  00001d4c  54000000	nop; delay slot nop
 1218  00001d50  8fc10004	lw	r1,4(r30)
 1219  00001d54  8fc20000	lw	r2,(r30)
 1220  00001d58  ac220000	sw	(r1),r2
 1221  00001d5c          	L76_LF2:
 1222  00001d5c  8fc10000	lw	r1,(r30)
 1223  00001d60  90220000	lbu	r2,(r1)
 1224  00001d64  64410000	snei	r1,r2,#0
 1225  00001d68  14200010	bnez	r1,L77_LF2
 1226  00001d6c  54000000	nop; delay slot nop
 1227  00001d70  8fc1fff4	lw	r1,-12(r30)
 1228  00001d74  08000294	j	L72_LF2
 1229  00001d78  54000000	nop; delay slot nop
 1230  00001d7c          	L77_LF2:
 1231  00001d7c  8fc10000	lw	r1,(r30)
 1232  00001d80  90220000	lbu	r2,(r1)
 1233  00001d84  6041002d	seqi	r1,r2,#45
 1234  00001d88  10200024	beqz	r1,L78_LF2
 1235  00001d8c  54000000	nop; delay slot nop
 1236  00001d90  2001ffff	addi	r1,r0,#-1
 1237  00001d94  afc1ffec	sw	-20(r30),r1
 1238  00001d98  8fc20000	lw	r2,(r30)
 1239  00001d9c  20410001	addi	r1,r2,#1
 1240  00001da0  00011020	add	r2,r0,r1
 1241  00001da4  afc20000	sw	(r30),r2
 1242  00001da8  0800000c	j	L79_LF2
 1243  00001dac  54000000	nop; delay slot nop
 1244  00001db0          	L78_LF2:
 1245  00001db0  20010001	addi	r1,r0,#1
 1246  00001db4  afc1ffec	sw	-20(r30),r1
 1247  00001db8          	L79_LF2:
 1248  00001db8  8fc10008	lw	r1,8(r30)
 1249  00001dbc  64220000	snei	r2,r1,#0
 1250  00001dc0  14400090	bnez	r2,L80_LF2
 1251  00001dc4  54000000	nop; delay slot nop
 1252  00001dc8  8fc10000	lw	r1,(r30)
 1253  00001dcc  90220000	lbu	r2,(r1)
 1254  00001dd0  60410030	seqi	r1,r2,#48
 1255  00001dd4  10200074	beqz	r1,L81_LF2
 1256  00001dd8  54000000	nop; delay slot nop
 1257  00001ddc  8fc20000	lw	r2,(r30)
 1258  00001de0  20410001	addi	r1,r2,#1
 1259  00001de4  00011020	add	r2,r0,r1
 1260  00001de8  afc20000	sw	(r30),r2
 1261  00001dec  8fc10000	lw	r1,(r30)
 1262  00001df0  90220000	lbu	r2,(r1)
 1263  00001df4  60410078	seqi	r1,r2,#120
 1264  00001df8  14200020	bnez	r1,L83_LF2
 1265  00001dfc  54000000	nop; delay slot nop
 1266  00001e00  8fc10000	lw	r1,(r30)
 1267  00001e04  90220000	lbu	r2,(r1)
 1268  00001e08  60410058	seqi	r1,r2,#88
 1269  00001e0c  1420000c	bnez	r1,L83_LF2
 1270  00001e10  54000000	nop; delay slot nop
 1271  00001e14  08000024	j	L82_LF2
 1272  00001e18  54000000	nop; delay slot nop
 1273  00001e1c          	L83_LF2:
 1274  00001e1c  20010010	addi	r1,r0,#16
 1275  00001e20  afc10008	sw	8(r30),r1
 1276  00001e24  8fc20000	lw	r2,(r30)
 1277  00001e28  20410001	addi	r1,r2,#1
 1278  00001e2c  00011020	add	r2,r0,r1
 1279  00001e30  afc20000	sw	(r30),r2
 1280  00001e34  0800000c	j	L84_LF2
 1281  00001e38  54000000	nop; delay slot nop
 1282  00001e3c          	L82_LF2:
 1283  00001e3c  20010008	addi	r1,r0,#8
 1284  00001e40  afc10008	sw	8(r30),r1
 1285  00001e44          	L84_LF2:
 1286  00001e44  0800000c	j	L80_LF2
 1287  00001e48  54000000	nop; delay slot nop
 1288  00001e4c          	L81_LF2:
 1289  00001e4c  2001000a	addi	r1,r0,#10
 1290  00001e50  afc10008	sw	8(r30),r1
 1291  00001e54          	L85_LF2:
 1292  00001e54          	L80_LF2:
 1293  00001e54  8fc10008	lw	r1,8(r30)
 1294  00001e58  70220000	slei	r2,r1,#0
 1295  00001e5c  1440001c	bnez	r2,L87_LF2
 1296  00001e60  54000000	nop; delay slot nop
 1297  00001e64  8fc10008	lw	r1,8(r30)
 1298  00001e68  6c220010	sgti	r2,r1,#16
 1299  00001e6c  1440000c	bnez	r2,L87_LF2
 1300  00001e70  54000000	nop; delay slot nop
 1301  00001e74  08000010	j	L86_LF2
 1302  00001e78  54000000	nop; delay slot nop
 1303  00001e7c          	L87_LF2:
 1304  00001e7c  8fc1fff4	lw	r1,-12(r30)
 1305  00001e80  08000188	j	L72_LF2
 1306  00001e84  54000000	nop; delay slot nop
 1307  00001e88          	L86_LF2:
 1308  00001e88  54000000	nop
 1309  00001e8c          	L88_LF2:
 1310  00001e8c  8fc10000	lw	r1,(r30)
 1311  00001e90  90220000	lbu	r2,(r1)
 1312  00001e94  6c41002f	sgtui	r1,r2,#47
 1313  00001e98  10200030	beqz	r1,L91_LF2
 1314  00001e9c  54000000	nop; delay slot nop
 1315  00001ea0  8fc10000	lw	r1,(r30)
 1316  00001ea4  90220000	lbu	r2,(r1)
 1317  00001ea8  70410039	sleui	r1,r2,#57
 1318  00001eac  1020001c	beqz	r1,L91_LF2
 1319  00001eb0  54000000	nop; delay slot nop
 1320  00001eb4  8fc10000	lw	r1,(r30)
 1321  00001eb8  90220000	lbu	r2,(r1)
 1322  00001ebc  2041ffd0	addi	r1,r2,#-48
 1323  00001ec0  afc1fff0	sw	-16(r30),r1
 1324  00001ec4  0800008c	j	L92_LF2
 1325  00001ec8  54000000	nop; delay slot nop
 1326  00001ecc          	L91_LF2:
 1327  00001ecc  8fc10000	lw	r1,(r30)
 1328  00001ed0  90220000	lbu	r2,(r1)
 1329  00001ed4  6c410060	sgtui	r1,r2,#96
 1330  00001ed8  10200030	beqz	r1,L93_LF2
 1331  00001edc  54000000	nop; delay slot nop
 1332  00001ee0  8fc10000	lw	r1,(r30)
 1333  00001ee4  90220000	lbu	r2,(r1)
 1334  00001ee8  7041007a	sleui	r1,r2,#122
 1335  00001eec  1020001c	beqz	r1,L93_LF2
 1336  00001ef0  54000000	nop; delay slot nop
 1337  00001ef4  8fc10000	lw	r1,(r30)
 1338  00001ef8  90220000	lbu	r2,(r1)
 1339  00001efc  2041ffa9	addi	r1,r2,#-87
 1340  00001f00  afc1fff0	sw	-16(r30),r1
 1341  00001f04  0800004c	j	L92_LF2
 1342  00001f08  54000000	nop; delay slot nop
 1343  00001f0c          	L93_LF2:
 1344  00001f0c  8fc10000	lw	r1,(r30)
 1345  00001f10  90220000	lbu	r2,(r1)
 1346  00001f14  6c410040	sgtui	r1,r2,#64
 1347  00001f18  10200030	beqz	r1,L95_LF2
 1348  00001f1c  54000000	nop; delay slot nop
 1349  00001f20  8fc10000	lw	r1,(r30)
 1350  00001f24  90220000	lbu	r2,(r1)
 1351  00001f28  7041005a	sleui	r1,r2,#90
 1352  00001f2c  1020001c	beqz	r1,L95_LF2
 1353  00001f30  54000000	nop; delay slot nop
 1354  00001f34  8fc10000	lw	r1,(r30)
 1355  00001f38  90220000	lbu	r2,(r1)
 1356  00001f3c  2041ffc9	addi	r1,r2,#-55
 1357  00001f40  afc1fff0	sw	-16(r30),r1
 1358  00001f44  0800000c	j	L92_LF2
 1359  00001f48  54000000	nop; delay slot nop
 1360  00001f4c          	L95_LF2:
 1361  00001f4c  200103e8	addi	r1,r0,#1000
 1362  00001f50  afc1fff0	sw	-16(r30),r1
 1363  00001f54          	L96_LF2:
 1364  00001f54          	L94_LF2:
 1365  00001f54          	L92_LF2:
 1366  00001f54  8fc1fff0	lw	r1,-16(r30)
 1367  00001f58  8fc20008	lw	r2,8(r30)
 1368  00001f5c  0022082a	slt	r1,r1,r2
 1369  00001f60  10200040	beqz	r1,L90_LF2
 1370  00001f64  54000000	nop; delay slot nop
 1371  00001f68  8fc1fff4	lw	r1,-12(r30)
 1372  00001f6c  8fc20008	lw	r2,8(r30)
 1373  00001f70  00200035	movi2fp	f0,r1
 1374  00001f74  00400835	movi2fp	f1,r2
 1375  00001f78  0401000e	mult	f0,f0,f1
 1376  00001f7c  00000834	movfp2i	r1,f0
 1377  00001f80  afc1fff4	sw	-12(r30),r1
 1378  00001f84  8fc1fff4	lw	r1,-12(r30)
 1379  00001f88  8fc2fff0	lw	r2,-16(r30)
 1380  00001f8c  00220820	add	r1,r1,r2
 1381  00001f90  afc1fff4	sw	-12(r30),r1
 1382  00001f94  8fc20000	lw	r2,(r30)
 1383  00001f98  20410001	addi	r1,r2,#1
 1384  00001f9c  00011020	add	r2,r0,r1
 1385  00001fa0  afc20000	sw	(r30),r2
 1386  00001fa4          	L97_LF2:
 1387  00001fa4          	L90_LF2:
 1388  00001fa4  8fc1fff0	lw	r1,-16(r30)
 1389  00001fa8  8fc20008	lw	r2,8(r30)
 1390  00001fac  0022082a	slt	r1,r1,r2
 1391  00001fb0  1420000c	bnez	r1,L98_LF2
 1392  00001fb4  54000000	nop; delay slot nop
 1393  00001fb8  0800000c	j	L89_LF2
 1394  00001fbc  54000000	nop; delay slot nop
 1395  00001fc0          	L98_LF2:
 1396  00001fc0  0bfffec8	j	L88_LF2
 1397  00001fc4  54000000	nop; delay slot nop
 1398  00001fc8          	L89_LF2:
 1399  00001fc8  8fc10004	lw	r1,4(r30)
 1400  00001fcc  64220000	snei	r2,r1,#0
 1401  00001fd0  10400010	beqz	r2,L99_LF2
 1402  00001fd4  54000000	nop; delay slot nop
 1403  00001fd8  8fc10004	lw	r1,4(r30)
 1404  00001fdc  8fc20000	lw	r2,(r30)
 1405  00001fe0  ac220000	sw	(r1),r2
 1406  00001fe4          	L99_LF2:
 1407  00001fe4  8fc1fff4	lw	r1,-12(r30)
 1408  00001fe8  8fc2ffec	lw	r2,-20(r30)
 1409  00001fec  00200035	movi2fp	f0,r1
 1410  00001ff0  00400835	movi2fp	f1,r2
 1411  00001ff4  0401000e	mult	f0,f0,f1
 1412  00001ff8  00000834	movfp2i	r1,f0
 1413  00001ffc  afc1fff4	sw	-12(r30),r1
 1414  00002000  8fc1fff4	lw	r1,-12(r30)
 1415  00002004  08000004	j	L72_LF2
 1416  00002008  54000000	nop; delay slot nop
 1417  0000200c          	L72_LF2:
 1418  0000200c  8fa20000	lw	r2,0(r29)
 1419  00002010  8fdffff8	lw	r31,-8(r30)
 1420  00002014  001ee820	add	r29,r0,r30
 1421  00002018  8fdefffc	lw	r30,-4(r30)
 1422  0000201c  4be00000	jr	r31
 1423  00002020  54000000	nop
 1424  00002024          	.endproc _dstrtol
 1425  00002024          	.align 2
 1426  00002024          	.proc _bcopy
 1427  00002024          	.global _bcopy
 1428  00002024          	_bcopy:
 1429                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1430  00002024  afbefffc	sw	-4(r29),r30; push fp
 1431  00002028  001df020	add	r30,r0,r29; fp = sp
 1432  0000202c  afbffff8	sw	-8(r29),r31; push ret addr
 1433  00002030  2fbd0010	subui	r29,r29,#16; alloc local storage
 1434  00002034  afa20000	sw	0(r29),r2
 1435  00002038  afa30004	sw	4(r29),r3
 1436  0000203c  54000000	nop
 1437  00002040          	L101_LF2:
 1438  00002040  8fc10008	lw	r1,8(r30)
 1439  00002044  2022ffff	addi	r2,r1,#-1
 1440  00002048  afc20008	sw	8(r30),r2
 1441  0000204c  6c210000	sgti	r1,r1,#0
 1442  00002050  1420000c	bnez	r1,L103_LF2
 1443  00002054  54000000	nop; delay slot nop
 1444  00002058  0800002c	j	L102_LF2
 1445  0000205c  54000000	nop; delay slot nop
 1446  00002060          	L103_LF2:
 1447  00002060  8fc10004	lw	r1,4(r30)
 1448  00002064  20220001	addi	r2,r1,#1
 1449  00002068  afc20004	sw	4(r30),r2
 1450  0000206c  8fc20000	lw	r2,(r30)
 1451  00002070  20430001	addi	r3,r2,#1
 1452  00002074  afc30000	sw	(r30),r3
 1453  00002078  80420000	lb	r2,(r2)
 1454  0000207c  a0220000	sb	(r1),r2
 1455  00002080  0bffffbc	j	L101_LF2
 1456  00002084  54000000	nop; delay slot nop
 1457  00002088          	L102_LF2:
 1458  00002088          	L100_LF2:
 1459  00002088  8fa20000	lw	r2,0(r29)
 1460  0000208c  8fa30004	lw	r3,4(r29)
 1461  00002090  8fdffff8	lw	r31,-8(r30)
 1462  00002094  001ee820	add	r29,r0,r30
 1463  00002098  8fdefffc	lw	r30,-4(r30)
 1464  0000209c  4be00000	jr	r31
 1465  000020a0  54000000	nop
 1466  000020a4          	.endproc _bcopy
 1467  000020a4          	.align 2
 1468  000020a4          	.proc _bzero
 1469  000020a4          	.global _bzero
 1470  000020a4          	_bzero:
 1471                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1472  000020a4  afbefffc	sw	-4(r29),r30; push fp
 1473  000020a8  001df020	add	r30,r0,r29; fp = sp
 1474  000020ac  afbffff8	sw	-8(r29),r31; push ret addr
 1475  000020b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1476  000020b4  afa20000	sw	0(r29),r2
 1477  000020b8  54000000	nop
 1478  000020bc          	L105_LF2:
 1479  000020bc  8fc10004	lw	r1,4(r30)
 1480  000020c0  2022ffff	addi	r2,r1,#-1
 1481  000020c4  afc20004	sw	4(r30),r2
 1482  000020c8  6c210000	sgti	r1,r1,#0
 1483  000020cc  1420000c	bnez	r1,L107_LF2
 1484  000020d0  54000000	nop; delay slot nop
 1485  000020d4  08000020	j	L106_LF2
 1486  000020d8  54000000	nop; delay slot nop
 1487  000020dc          	L107_LF2:
 1488  000020dc  8fc10000	lw	r1,(r30)
 1489  000020e0  20220001	addi	r2,r1,#1
 1490  000020e4  afc20000	sw	(r30),r2
 1491  000020e8  20020000	addi	r2,r0,(#0x0)&0xff
 1492  000020ec  a0220000	sb	(r1),r2
 1493  000020f0  0bffffc8	j	L105_LF2
 1494  000020f4  54000000	nop; delay slot nop
 1495  000020f8          	L106_LF2:
 1496  000020f8          	L104_LF2:
 1497  000020f8  8fa20000	lw	r2,0(r29)
 1498  000020fc  8fdffff8	lw	r31,-8(r30)
 1499  00002100  001ee820	add	r29,r0,r30
 1500  00002104  8fdefffc	lw	r30,-4(r30)
 1501  00002108  4be00000	jr	r31
 1502  0000210c  54000000	nop
 1503  00002110          	.endproc _bzero
 1504  00002110          	.align 2
 1505  00002110          	.proc _min
 1506  00002110          	.global _min
 1507  00002110          	_min:
 1508                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1509  00002110  afbefffc	sw	-4(r29),r30; push fp
 1510  00002114  001df020	add	r30,r0,r29; fp = sp
 1511  00002118  afbffff8	sw	-8(r29),r31; push ret addr
 1512  0000211c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1513  00002120  afa20000	sw	0(r29),r2
 1514  00002124  afa30004	sw	4(r29),r3
 1515  00002128  8fc10000	lw	r1,(r30)
 1516  0000212c  8fc20004	lw	r2,4(r30)
 1517  00002130  0022182c	sle	r3,r1,r2
 1518  00002134  14600008	bnez	r3,L109_LF2
 1519  00002138  54000000	nop; delay slot nop
 1520  0000213c  8fc10004	lw	r1,4(r30)
 1521  00002140          	L109_LF2:
 1522  00002140  08000004	j	L108_LF2
 1523  00002144  54000000	nop; delay slot nop
 1524  00002148          	L108_LF2:
 1525  00002148  8fa20000	lw	r2,0(r29)
 1526  0000214c  8fa30004	lw	r3,4(r29)
 1527  00002150  8fdffff8	lw	r31,-8(r30)
 1528  00002154  001ee820	add	r29,r0,r30
 1529  00002158  8fdefffc	lw	r30,-4(r30)
 1530  0000215c  4be00000	jr	r31
 1531  00002160  54000000	nop
 1532  00002164          	.endproc _min
 1533  00002164          	.align 2
 1534  00002164          	.proc _max
 1535  00002164          	.global _max
 1536  00002164          	_max:
 1537                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1538  00002164  afbefffc	sw	-4(r29),r30; push fp
 1539  00002168  001df020	add	r30,r0,r29; fp = sp
 1540  0000216c  afbffff8	sw	-8(r29),r31; push ret addr
 1541  00002170  2fbd0010	subui	r29,r29,#16; alloc local storage
 1542  00002174  afa20000	sw	0(r29),r2
 1543  00002178  afa30004	sw	4(r29),r3
 1544  0000217c  8fc10000	lw	r1,(r30)
 1545  00002180  8fc20004	lw	r2,4(r30)
 1546  00002184  0022182d	sge	r3,r1,r2
 1547  00002188  14600008	bnez	r3,L111_LF2
 1548  0000218c  54000000	nop; delay slot nop
 1549  00002190  8fc10004	lw	r1,4(r30)
 1550  00002194          	L111_LF2:
 1551  00002194  08000004	j	L110_LF2
 1552  00002198  54000000	nop; delay slot nop
 1553  0000219c          	L110_LF2:
 1554  0000219c  8fa20000	lw	r2,0(r29)
 1555  000021a0  8fa30004	lw	r3,4(r29)
 1556  000021a4  8fdffff8	lw	r31,-8(r30)
 1557  000021a8  001ee820	add	r29,r0,r30
 1558  000021ac  8fdefffc	lw	r30,-4(r30)
 1559  000021b0  4be00000	jr	r31
 1560  000021b4  54000000	nop
 1561  000021b8          	.endproc _max
 1562                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1563                      ;;;
 1564                      ;;; Most of the traps are called in files from libtraps.
 1567  000021b8          	.align 2
 1568  000021b8          	.proc _exit
 1569  000021b8          	.global _exit
 1570  000021b8          	_exit:
 1571  000021b8  44000300	trap	#0x300
 1572  000021bc  4be00000	jr	r31
 1573  000021c0  54000000	nop
 1574  000021c4          	.endproc _exit
 1576                      ; for the benefit of gcc.
 1577  000021c4          	.proc ___main
 1578  000021c4          	.global ___main
 1579  000021c4          	___main:
 1580  000021c4  4be00000	jr	r31
 1581  000021c8  54000000	nop
 1582  000021cc          	.endproc ___main
 1583  000021cc          	.text
 1584  000021cc          	.global _etext
 1585  000021cc          	_etext:
 1586  000021cc          	.align 3
 1587  000021d0          	.data
 1588  000030e6          	.global _edata
 1589  000030e6          	_edata:
