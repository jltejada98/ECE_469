 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 144
    4                      ; Text size: 4676
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  2073686f	.ascii " should not have any arguments.\n\000"
   82  00003004  756c6420	
   82  00003008  6e6f7420	
   82  0000300c  68617665	
   82  00003010  20616e79	
   82  00003014  20617267	
   82  00003018  756d656e	
   82  0000301c  74732e0a	
   82  00003020  00      	
   83  00003021          	.align 2
   84  00003024          	LC1_LF0:
   85  00003024  42616420	.ascii "Bad sem_create in \000"
   85  00003028  73656d5f	
   85  0000302c  63726561	
   85  00003030  74652069	
   85  00003034  6e2000  	
   86  00003037          	.align 2
   87  00003038          	LC2_LF0:
   88  00003038  0a00    	.ascii "\n\000"
   89  0000303a          	.align 2
   90  0000303c          	LC3_LF0:
   91  0000303c  77616974	.ascii "wait_proc.dlx.obj\000"
   91  00003040  5f70726f	
   91  00003044  632e646c	
   91  00003048  782e6f62	
   91  0000304c  6a00    	
   92  0000304e          	.align 2
   93  00003050          	LC4_LF0:
   94  00003050  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
   94  00003054  73656d61	
   94  00003058  70686f72	
   94  0000305c  65207365	
   94  00003060  6d5f7072	
   94  00003064  6f63735f	
   94  00003068  636f6d70	
   94  0000306c  6c657465	
   94  00003070  64202825	
   94  00003074  64292069	
   94  00003078  6e2000  	
   95  0000307b          	.align 2
   96  0000307c          	LC5_LF0:
   97  0000307c  45786974	.ascii "Exiting Makeprocs!\n\000"
   97  00003080  696e6720	
   97  00003084  4d616b65	
   97  00003088  70726f63	
   97  0000308c  73210a00	
   98  00003090          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 96 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0068	subui	r29,r29,#104; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc80004	lw	r8,4(r30)
  110  000010ec  0c00114c	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  64410001	snei	r1,r2,#1
  113  000010f8  10200038	beqz	r1,L14_LF0
  114  000010fc  54000000	nop; not filled.
  115  00001100  23bdfff8	addi	r29,r29,#-8
  116  00001104  8d090000	lw	r9,(r8)
  117  00001108  afa90000	sw	(r29),r9
  118  0000110c  0c00027c	jal	_Printf
  119  00001110  54000000	nop; not filled.
  120  00001114  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  121  00001118  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  122  0000111c  afa90000	sw	(r29),r9
  123  00001120  0c000268	jal	_Printf
  124  00001124  54000000	nop; not filled.
  125  00001128  0c000368	jal	_Exit
  126  0000112c  54000000	nop; not filled.
  127  00001130  23bd0008	addi	r29,r29,#8
  128  00001134          	L14_LF0:
  129  00001134  23bdfff8	addi	r29,r29,#-8
  130  00001138  2009ffff	addi	r9,r0,#-1
  131  0000113c  afa90000	sw	(r29),r9
  132  00001140  0c000284	jal	_sem_create
  133  00001144  54000000	nop; not filled.
  134  00001148  00013820	add	r7,r0,r1
  135  0000114c  23bd0008	addi	r29,r29,#8
  136  00001150  60e1ffff	seqi	r1,r7,#-1
  137  00001154  1020004c	beqz	r1,L15_LF0
  138  00001158  54000000	nop; not filled.
  139  0000115c  23bdfff8	addi	r29,r29,#-8
  140  00001160  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  141  00001164  25293024	addui	r9,r9,(LC1_LF0)&0xffff
  142  00001168  afa90000	sw	(r29),r9
  143  0000116c  0c00021c	jal	_Printf
  144  00001170  54000000	nop; not filled.
  145  00001174  8d090000	lw	r9,(r8)
  146  00001178  afa90000	sw	(r29),r9
  147  0000117c  0c00020c	jal	_Printf
  148  00001180  54000000	nop; not filled.
  149  00001184  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  150  00001188  25293038	addui	r9,r9,(LC2_LF0)&0xffff
  151  0000118c  afa90000	sw	(r29),r9
  152  00001190  0c0001f8	jal	_Printf
  153  00001194  54000000	nop; not filled.
  154  00001198  0c0002f8	jal	_Exit
  155  0000119c  54000000	nop; not filled.
  156  000011a0  23bd0008	addi	r29,r29,#8
  157  000011a4          	L15_LF0:
  158  000011a4  23bdfff8	addi	r29,r29,#-8
  159  000011a8  afa70000	sw	(r29),r7
  160  000011ac  23c5ffe8	addi	r5,r30,#-24
  161  000011b0  afa50004	sw	4(r29),r5
  162  000011b4  0c0009fc	jal	_ditoa
  163  000011b8  54000000	nop; not filled.
  164  000011bc  20090002	addi	r9,r0,#2
  165  000011c0  afa90000	sw	(r29),r9
  166  000011c4  23c4ffd8	addi	r4,r30,#-40
  167  000011c8  afa40004	sw	4(r29),r4
  168  000011cc  0c0009e4	jal	_ditoa
  169  000011d0  54000000	nop; not filled.
  170  000011d4  20090001	addi	r9,r0,#1
  171  000011d8  afa90000	sw	(r29),r9
  172  000011dc  23c3ffc8	addi	r3,r30,#-56
  173  000011e0  afa30004	sw	4(r29),r3
  174  000011e4  0c0009cc	jal	_ditoa
  175  000011e8  54000000	nop; not filled.
  176  000011ec  20090005	addi	r9,r0,#5
  177  000011f0  afa90000	sw	(r29),r9
  178  000011f4  23c2ffb8	addi	r2,r30,#-72
  179  000011f8  afa20004	sw	4(r29),r2
  180  000011fc  0c0009b4	jal	_ditoa
  181  00001200  54000000	nop; not filled.
  182  00001204  23bdffe8	addi	r29,r29,#-24
  183  00001208  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  184  0000120c  24c6303c	addui	r6,r6,(LC3_LF0)&0xffff
  185  00001210  afa60000	sw	(r29),r6
  186  00001214  20090000	addi	r9,r0,#0
  187  00001218  afa90004	sw	4(r29),r9
  188  0000121c  afa90008	sw	8(r29),r9
  189  00001220  afa5000c	sw	12(r29),r5
  190  00001224  afa40010	sw	16(r29),r4
  191  00001228  afa30014	sw	20(r29),r3
  192  0000122c  afa20018	sw	24(r29),r2
  193  00001230  afa9001c	sw	28(r29),r9
  194  00001234  0c00016c	jal	_process_create
  195  00001238  54000000	nop; not filled.
  196  0000123c  23bd0020	addi	r29,r29,#32
  197  00001240  23bdfff8	addi	r29,r29,#-8
  198  00001244  20090002	addi	r9,r0,#2
  199  00001248  afa90000	sw	(r29),r9
  200  0000124c  afa40004	sw	4(r29),r4
  201  00001250  0c000960	jal	_ditoa
  202  00001254  54000000	nop; not filled.
  203  00001258  afa90000	sw	(r29),r9
  204  0000125c  afa30004	sw	4(r29),r3
  205  00001260  0c000950	jal	_ditoa
  206  00001264  54000000	nop; not filled.
  207  00001268  20090006	addi	r9,r0,#6
  208  0000126c  afa90000	sw	(r29),r9
  209  00001270  afa20004	sw	4(r29),r2
  210  00001274  0c00093c	jal	_ditoa
  211  00001278  54000000	nop; not filled.
  212  0000127c  23bdffe8	addi	r29,r29,#-24
  213  00001280  afa60000	sw	(r29),r6
  214  00001284  20090000	addi	r9,r0,#0
  215  00001288  afa90004	sw	4(r29),r9
  216  0000128c  afa90008	sw	8(r29),r9
  217  00001290  afa5000c	sw	12(r29),r5
  218  00001294  afa40010	sw	16(r29),r4
  219  00001298  afa30014	sw	20(r29),r3
  220  0000129c  afa20018	sw	24(r29),r2
  221  000012a0  afa9001c	sw	28(r29),r9
  222  000012a4  0c0000fc	jal	_process_create
  223  000012a8  54000000	nop; not filled.
  224  000012ac  23bd0020	addi	r29,r29,#32
  225  000012b0  23bdfff8	addi	r29,r29,#-8
  226  000012b4  afa70000	sw	(r29),r7
  227  000012b8  0c000118	jal	_sem_wait
  228  000012bc  54000000	nop; not filled.
  229  000012c0  23bd0008	addi	r29,r29,#8
  230  000012c4  64210001	snei	r1,r1,#1
  231  000012c8  10200050	beqz	r1,L16_LF0
  232  000012cc  54000000	nop; not filled.
  233  000012d0  23bdfff8	addi	r29,r29,#-8
  234  000012d4  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  235  000012d8  25293050	addui	r9,r9,(LC4_LF0)&0xffff
  236  000012dc  afa90000	sw	(r29),r9
  237  000012e0  afa70004	sw	4(r29),r7
  238  000012e4  0c0000a4	jal	_Printf
  239  000012e8  54000000	nop; not filled.
  240  000012ec  8d080000	lw	r8,(r8)
  241  000012f0  afa80000	sw	(r29),r8
  242  000012f4  0c000094	jal	_Printf
  243  000012f8  54000000	nop; not filled.
  244  000012fc  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  245  00001300  25293038	addui	r9,r9,(LC2_LF0)&0xffff
  246  00001304  afa90000	sw	(r29),r9
  247  00001308  0c000080	jal	_Printf
  248  0000130c  54000000	nop; not filled.
  249  00001310  0c000180	jal	_Exit
  250  00001314  54000000	nop; not filled.
  251  00001318  23bd0008	addi	r29,r29,#8
  252  0000131c          	L16_LF0:
  253  0000131c  23bdfff8	addi	r29,r29,#-8
  254  00001320  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  255  00001324  2529307c	addui	r9,r9,(LC5_LF0)&0xffff
  256  00001328  afa90000	sw	(r29),r9
  257  0000132c  0c00005c	jal	_Printf
  258  00001330  54000000	nop; not filled.
  259  00001334  20010000	addi	r1,r0,#0
  260  00001338  23bd0008	addi	r29,r29,#8
  261  0000133c  0c000ef0	jal	_exit
  262  00001340  54000000	nop
  263  00001344          	.endproc _main
  264                      ;;;
  265                      ;;; Stub functions for DLX traps.
  266                      ;;;
  267                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  268                      ;;;
  269                      ;;; The traps such as Open and Close
  270                      ;;; (note the capital letters) are for use by user programs.  The traps
  271                      ;;; with names such as open and close (lower case) are for use by the OS.
  272                      ;;;
  275  00001344          	.align 2
  277                      ;;; The following are the traps to be used by user-level programs
  278                      ;;;
  280  00001344          	.align 2
  281  00001344          	.proc _Open
  282  00001344          	.global _Open
  283  00001344          	_Open:
  284                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  285                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  286                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  287  00001344  44000213	trap	#0x213
  288  00001348  4be00000	jr	r31
  289  0000134c  54000000	nop
  290  00001350          	.endproc _Open
  292  00001350          	.proc _Close
  293  00001350          	.global _Close
  294  00001350          	_Close:
  295  00001350  44000214	trap	#0x214
  296  00001354  4be00000	jr	r31
  297  00001358  54000000	nop
  298  0000135c          	.endproc _Close
  300  0000135c          	.proc _Read
  301  0000135c          	.global _Read
  302  0000135c          	_Read:
  303  0000135c  44000210	trap	#0x210
  304  00001360  4be00000	jr	r31
  305  00001364  54000000	nop
  306  00001368          	.endproc _Read
  308  00001368          	.proc _Write
  309  00001368          	.global _Write
  310  00001368          	_Write:
  311  00001368  44000211	trap	#0x211
  312  0000136c  4be00000	jr	r31
  313  00001370  54000000	nop
  314  00001374          	.endproc _Write
  316  00001374          	.proc _Lseek
  317  00001374          	.global _Lseek
  318  00001374          	_Lseek:
  319  00001374  44000212	trap	#0x212
  320  00001378  4be00000	jr	r31
  321  0000137c  54000000	nop
  322  00001380          	.endproc _Lseek
  324  00001380          	.proc _Putchar
  325  00001380          	.global _Putchar
  326  00001380          	_Putchar:
  327  00001380  44000280	trap	#0x280
  328  00001384  4be00000	jr	r31
  329  00001388  54000000	nop
  330  0000138c          	.endproc _Putchar
  332  0000138c          	.proc _Printf
  333  0000138c          	.global _Printf
  334  0000138c          	_Printf:
  335  0000138c  44000201	trap	#0x201
  336  00001390  4be00000	jr	r31
  337  00001394  54000000	nop
  338  00001398          	.endproc _Printf
  340  00001398          	.proc _getpid
  341  00001398          	.global _getpid
  342  00001398          	_getpid:
  343  00001398  44000431	trap	#0x431
  344  0000139c  4be00000	jr	r31
  345  000013a0  54000000	nop
  346  000013a4          	.endproc _getpid
  348  000013a4          	.proc _process_create
  349  000013a4          	.global _process_create
  350  000013a4          	_process_create:
  351  000013a4  44000432	trap	#0x432
  352  000013a8  4be00000	jr	r31
  353  000013ac  54000000	nop
  354  000013b0          	.endproc _process_create
  356  000013b0          	.proc _shmget
  357  000013b0          	.global _shmget
  358  000013b0          	_shmget:
  359  000013b0  44000440	trap	#0x440
  360  000013b4  4be00000	jr	r31
  361  000013b8  54000000	nop
  362  000013bc          	.endproc _shmget
  364  000013bc          	.proc _shmat
  365  000013bc          	.global _shmat
  366  000013bc          	_shmat:
  367  000013bc  44000441	trap	#0x441
  368  000013c0  4be00000	jr	r31
  369  000013c4  54000000	nop
  370  000013c8          	.endproc _shmat
  372  000013c8          	.proc _sem_create
  373  000013c8          	.global _sem_create
  374  000013c8          	_sem_create:
  375  000013c8  44000450	trap	#0x450
  376  000013cc  4be00000	jr	r31
  377  000013d0  54000000	nop
  378  000013d4          	.endproc _sem_create
  380  000013d4          	.proc _sem_wait
  381  000013d4          	.global _sem_wait
  382  000013d4          	_sem_wait:
  383  000013d4  44000451	trap	#0x451
  384  000013d8  4be00000	jr	r31
  385  000013dc  54000000	nop
  386  000013e0          	.endproc _sem_wait
  388  000013e0          	.proc _sem_signal
  389  000013e0          	.global _sem_signal
  390  000013e0          	_sem_signal:
  391  000013e0  44000452	trap	#0x452
  392  000013e4  4be00000	jr	r31
  393  000013e8  54000000	nop
  394  000013ec          	.endproc _sem_signal
  396  000013ec          	.proc _lock_create
  397  000013ec          	.global _lock_create
  398  000013ec          	_lock_create:
  399  000013ec  44000453	trap	#0x453
  400  000013f0  4be00000	jr	r31
  401  000013f4  54000000	nop
  402  000013f8          	.endproc _lock_create
  404  000013f8          	.proc _lock_acquire
  405  000013f8          	.global _lock_acquire
  406  000013f8          	_lock_acquire:
  407  000013f8  44000454	trap	#0x454
  408  000013fc  4be00000	jr	r31
  409  00001400  54000000	nop
  410  00001404          	.endproc _lock_acquire
  412  00001404          	.proc _lock_release
  413  00001404          	.global _lock_release
  414  00001404          	_lock_release:
  415  00001404  44000455	trap	#0x455
  416  00001408  4be00000	jr	r31
  417  0000140c  54000000	nop
  418  00001410          	.endproc _lock_release
  420  00001410          	.proc _cond_create
  421  00001410          	.global _cond_create
  422  00001410          	_cond_create:
  423  00001410  44000456	trap	#0x456
  424  00001414  4be00000	jr	r31
  425  00001418  54000000	nop
  426  0000141c          	.endproc _cond_create
  428  0000141c          	.proc _cond_wait
  429  0000141c          	.global _cond_wait
  430  0000141c          	_cond_wait:
  431  0000141c  44000457	trap	#0x457
  432  00001420  4be00000	jr	r31
  433  00001424  54000000	nop
  434  00001428          	.endproc _cond_wait
  436  00001428          	.proc _cond_signal
  437  00001428          	.global _cond_signal
  438  00001428          	_cond_signal:
  439  00001428  44000458	trap	#0x458
  440  0000142c  4be00000	jr	r31
  441  00001430  54000000	nop
  442  00001434          	.endproc _cond_signal
  444  00001434          	.proc _cond_broadcast
  445  00001434          	.global _cond_broadcast
  446  00001434          	_cond_broadcast:
  447  00001434  44000459	trap	#0x459
  448  00001438  4be00000	jr	r31
  449  0000143c  54000000	nop
  450  00001440          	.endproc _cond_broadcast
  452  00001440          	.proc _mbox_create
  453  00001440          	.global _mbox_create
  454  00001440          	_mbox_create:
  455  00001440  44000460	trap	#0x460
  456  00001444  4be00000	jr	r31
  457  00001448  54000000	nop
  458  0000144c          	.endproc _mbox_create
  460  0000144c          	.proc _mbox_open
  461  0000144c          	.global _mbox_open
  462  0000144c          	_mbox_open:
  463  0000144c  44000461	trap	#0x461
  464  00001450  4be00000	jr	r31
  465  00001454  54000000	nop
  466  00001458          	.endproc _mbox_open
  468  00001458          	.proc _mbox_close
  469  00001458          	.global _mbox_close
  470  00001458          	_mbox_close:
  471  00001458  44000462	trap	#0x462
  472  0000145c  4be00000	jr	r31
  473  00001460  54000000	nop
  474  00001464          	.endproc _mbox_close
  476  00001464          	.proc _mbox_send
  477  00001464          	.global _mbox_send
  478  00001464          	_mbox_send:
  479  00001464  44000463	trap	#0x463
  480  00001468  4be00000	jr	r31
  481  0000146c  54000000	nop
  482  00001470          	.endproc _mbox_send
  484  00001470          	.proc _mbox_recv
  485  00001470          	.global _mbox_recv
  486  00001470          	_mbox_recv:
  487  00001470  44000464	trap	#0x464
  488  00001474  4be00000	jr	r31
  489  00001478  54000000	nop
  490  0000147c          	.endproc _mbox_recv
  492  0000147c          	.proc _sleep
  493  0000147c          	.global _sleep
  494  0000147c          	_sleep:
  495  0000147c  44000465	trap	#0x465
  496  00001480  4be00000	jr	r31
  497  00001484  54000000	nop
  498  00001488          	.endproc _sleep
  500  00001488          	.proc _yield
  501  00001488          	.global _yield
  502  00001488          	_yield:
  503  00001488  44000466	trap	#0x466
  504  0000148c  4be00000	jr	r31
  505  00001490  54000000	nop
  506  00001494          	.endproc _yield
  509  00001494          	.proc _Exit
  510  00001494          	.global _Exit
  511  00001494          	_Exit:
  512  00001494  44000500	trap	#0x500
  513  00001498  4be00000	jr	r31
  514  0000149c  54000000	nop
  515  000014a0          	.endproc _Exit
  516                      ; Compiled by GCC
  518  000014a0          	.align 2
  519  000014a0          	.proc _isspace
  520  000014a0          	.global _isspace
  521  000014a0          	_isspace:
  522                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  523  000014a0  afbefffc	sw	-4(r29),r30; push fp
  524  000014a4  001df020	add	r30,r0,r29; fp = sp
  525  000014a8  afbffff8	sw	-8(r29),r31; push ret addr
  526  000014ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  527  000014b0  afa20000	sw	0(r29),r2
  528  000014b4  afa30004	sw	4(r29),r3
  529  000014b8  afa40008	sw	8(r29),r4
  530  000014bc  83c20003	lb	r2,3(r30)
  531  000014c0  20010000	addi	r1,r0,#0
  532  000014c4  304300ff	andi	r3,r2,#0x00ff
  533  000014c8  60640020	seqi	r4,r3,#32
  534  000014cc  1480002c	bnez	r4,L3_LF2
  535  000014d0  54000000	nop; delay slot nop
  536  000014d4  304300ff	andi	r3,r2,#0x00ff
  537  000014d8  60640009	seqi	r4,r3,#9
  538  000014dc  1480001c	bnez	r4,L3_LF2
  539  000014e0  54000000	nop; delay slot nop
  540  000014e4  304300ff	andi	r3,r2,#0x00ff
  541  000014e8  6064000a	seqi	r4,r3,#10
  542  000014ec  1480000c	bnez	r4,L3_LF2
  543  000014f0  54000000	nop; delay slot nop
  544  000014f4  08000008	j	L2_LF2
  545  000014f8  54000000	nop; delay slot nop
  546  000014fc          	L3_LF2:
  547  000014fc  20010001	addi	r1,r0,#1
  548  00001500          	L2_LF2:
  549  00001500  08000004	j	L1_LF2
  550  00001504  54000000	nop; delay slot nop
  551  00001508          	L1_LF2:
  552  00001508  8fa20000	lw	r2,0(r29)
  553  0000150c  8fa30004	lw	r3,4(r29)
  554  00001510  8fa40008	lw	r4,8(r29)
  555  00001514  8fdffff8	lw	r31,-8(r30)
  556  00001518  001ee820	add	r29,r0,r30
  557  0000151c  8fdefffc	lw	r30,-4(r30)
  558  00001520  4be00000	jr	r31
  559  00001524  54000000	nop
  560  00001528          	.endproc _isspace
  561  00001528          	.align 2
  562  00001528          	.proc _isxdigit
  563  00001528          	.global _isxdigit
  564  00001528          	_isxdigit:
  565                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  566  00001528  afbefffc	sw	-4(r29),r30; push fp
  567  0000152c  001df020	add	r30,r0,r29; fp = sp
  568  00001530  afbffff8	sw	-8(r29),r31; push ret addr
  569  00001534  2fbd0018	subui	r29,r29,#24; alloc local storage
  570  00001538  afa20000	sw	0(r29),r2
  571  0000153c  afa30004	sw	4(r29),r3
  572  00001540  afa40008	sw	8(r29),r4
  573  00001544  83c20003	lb	r2,3(r30)
  574  00001548  20010000	addi	r1,r0,#0
  575  0000154c  304300ff	andi	r3,r2,#0x00ff
  576  00001550  6c64002f	sgtui	r4,r3,#47
  577  00001554  1080001c	beqz	r4,L7_LF2
  578  00001558  54000000	nop; delay slot nop
  579  0000155c  304300ff	andi	r3,r2,#0x00ff
  580  00001560  70640039	sleui	r4,r3,#57
  581  00001564  1480005c	bnez	r4,L6_LF2
  582  00001568  54000000	nop; delay slot nop
  583  0000156c  08000004	j	L7_LF2
  584  00001570  54000000	nop; delay slot nop
  585  00001574          	L7_LF2:
  586  00001574  304300ff	andi	r3,r2,#0x00ff
  587  00001578  6c640060	sgtui	r4,r3,#96
  588  0000157c  1080001c	beqz	r4,L8_LF2
  589  00001580  54000000	nop; delay slot nop
  590  00001584  304300ff	andi	r3,r2,#0x00ff
  591  00001588  70640066	sleui	r4,r3,#102
  592  0000158c  14800034	bnez	r4,L6_LF2
  593  00001590  54000000	nop; delay slot nop
  594  00001594  08000004	j	L8_LF2
  595  00001598  54000000	nop; delay slot nop
  596  0000159c          	L8_LF2:
  597  0000159c  304300ff	andi	r3,r2,#0x00ff
  598  000015a0  6c640040	sgtui	r4,r3,#64
  599  000015a4  10800020	beqz	r4,L5_LF2
  600  000015a8  54000000	nop; delay slot nop
  601  000015ac  304300ff	andi	r3,r2,#0x00ff
  602  000015b0  70640041	sleui	r4,r3,#65
  603  000015b4  1480000c	bnez	r4,L6_LF2
  604  000015b8  54000000	nop; delay slot nop
  605  000015bc  08000008	j	L5_LF2
  606  000015c0  54000000	nop; delay slot nop
  607  000015c4          	L6_LF2:
  608  000015c4  20010001	addi	r1,r0,#1
  609  000015c8          	L5_LF2:
  610  000015c8  08000004	j	L4_LF2
  611  000015cc  54000000	nop; delay slot nop
  612  000015d0          	L4_LF2:
  613  000015d0  8fa20000	lw	r2,0(r29)
  614  000015d4  8fa30004	lw	r3,4(r29)
  615  000015d8  8fa40008	lw	r4,8(r29)
  616  000015dc  8fdffff8	lw	r31,-8(r30)
  617  000015e0  001ee820	add	r29,r0,r30
  618  000015e4  8fdefffc	lw	r30,-4(r30)
  619  000015e8  4be00000	jr	r31
  620  000015ec  54000000	nop
  621  000015f0          	.endproc _isxdigit
  622  000015f0          	.align 2
  623  000015f0          	.proc _dstrcpy
  624  000015f0          	.global _dstrcpy
  625  000015f0          	_dstrcpy:
  626                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  627  000015f0  afbefffc	sw	-4(r29),r30; push fp
  628  000015f4  001df020	add	r30,r0,r29; fp = sp
  629  000015f8  afbffff8	sw	-8(r29),r31; push ret addr
  630  000015fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  631  00001600  afa20000	sw	0(r29),r2
  632  00001604  afa30004	sw	4(r29),r3
  633  00001608  8fc10000	lw	r1,(r30)
  634  0000160c  afc1fff4	sw	-12(r30),r1
  635  00001610          	L10_LF2:
  636  00001610  8fc10000	lw	r1,(r30)
  637  00001614  20220001	addi	r2,r1,#1
  638  00001618  afc20000	sw	(r30),r2
  639  0000161c  8fc20004	lw	r2,4(r30)
  640  00001620  20430001	addi	r3,r2,#1
  641  00001624  afc30004	sw	4(r30),r3
  642  00001628  80420000	lb	r2,(r2)
  643  0000162c  a0220000	sb	(r1),r2
  644  00001630  a3c2fff3	sb	-13(r30),r2
  645  00001634          	L12_LF2:
  646  00001634  93c1fff3	lbu	r1,-13(r30)
  647  00001638  64220000	snei	r2,r1,#0
  648  0000163c  1440000c	bnez	r2,L13_LF2
  649  00001640  54000000	nop; delay slot nop
  650  00001644  0800000c	j	L11_LF2
  651  00001648  54000000	nop; delay slot nop
  652  0000164c          	L13_LF2:
  653  0000164c  0bffffc0	j	L10_LF2
  654  00001650  54000000	nop; delay slot nop
  655  00001654          	L11_LF2:
  656  00001654  8fc1fff4	lw	r1,-12(r30)
  657  00001658  08000004	j	L9_LF2
  658  0000165c  54000000	nop; delay slot nop
  659  00001660          	L9_LF2:
  660  00001660  8fa20000	lw	r2,0(r29)
  661  00001664  8fa30004	lw	r3,4(r29)
  662  00001668  8fdffff8	lw	r31,-8(r30)
  663  0000166c  001ee820	add	r29,r0,r30
  664  00001670  8fdefffc	lw	r30,-4(r30)
  665  00001674  4be00000	jr	r31
  666  00001678  54000000	nop
  667  0000167c          	.endproc _dstrcpy
  668  0000167c          	.align 2
  669  0000167c          	.proc _dstrncpy
  670  0000167c          	.global _dstrncpy
  671  0000167c          	_dstrncpy:
  672                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  673  0000167c  afbefffc	sw	-4(r29),r30; push fp
  674  00001680  001df020	add	r30,r0,r29; fp = sp
  675  00001684  afbffff8	sw	-8(r29),r31; push ret addr
  676  00001688  2fbd0018	subui	r29,r29,#24; alloc local storage
  677  0000168c  afa20000	sw	0(r29),r2
  678  00001690  afa30004	sw	4(r29),r3
  679  00001694  8fc10000	lw	r1,(r30)
  680  00001698  afc1fff4	sw	-12(r30),r1
  681  0000169c          	L15_LF2:
  682  0000169c  8fc10008	lw	r1,8(r30)
  683  000016a0  2022ffff	addi	r2,r1,#-1
  684  000016a4  afc20008	sw	8(r30),r2
  685  000016a8  70210000	slei	r1,r1,#0
  686  000016ac  1020000c	beqz	r1,L18_LF2
  687  000016b0  54000000	nop; delay slot nop
  688  000016b4  08000048	j	L16_LF2
  689  000016b8  54000000	nop; delay slot nop
  690  000016bc          	L18_LF2:
  691  000016bc  8fc10000	lw	r1,(r30)
  692  000016c0  20220001	addi	r2,r1,#1
  693  000016c4  afc20000	sw	(r30),r2
  694  000016c8  8fc20004	lw	r2,4(r30)
  695  000016cc  20430001	addi	r3,r2,#1
  696  000016d0  afc30004	sw	4(r30),r3
  697  000016d4  80420000	lb	r2,(r2)
  698  000016d8  a0220000	sb	(r1),r2
  699  000016dc  a3c2fff3	sb	-13(r30),r2
  700  000016e0          	L17_LF2:
  701  000016e0  93c1fff3	lbu	r1,-13(r30)
  702  000016e4  64220000	snei	r2,r1,#0
  703  000016e8  1440000c	bnez	r2,L19_LF2
  704  000016ec  54000000	nop; delay slot nop
  705  000016f0  0800000c	j	L16_LF2
  706  000016f4  54000000	nop; delay slot nop
  707  000016f8          	L19_LF2:
  708  000016f8  0bffffa0	j	L15_LF2
  709  000016fc  54000000	nop; delay slot nop
  710  00001700          	L16_LF2:
  711  00001700  8fc1fff4	lw	r1,-12(r30)
  712  00001704  08000004	j	L14_LF2
  713  00001708  54000000	nop; delay slot nop
  714  0000170c          	L14_LF2:
  715  0000170c  8fa20000	lw	r2,0(r29)
  716  00001710  8fa30004	lw	r3,4(r29)
  717  00001714  8fdffff8	lw	r31,-8(r30)
  718  00001718  001ee820	add	r29,r0,r30
  719  0000171c  8fdefffc	lw	r30,-4(r30)
  720  00001720  4be00000	jr	r31
  721  00001724  54000000	nop
  722  00001728          	.endproc _dstrncpy
  723  00001728          	.align 2
  724  00001728          	.proc _dstrcat
  725  00001728          	.global _dstrcat
  726  00001728          	_dstrcat:
  727                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  728  00001728  afbefffc	sw	-4(r29),r30; push fp
  729  0000172c  001df020	add	r30,r0,r29; fp = sp
  730  00001730  afbffff8	sw	-8(r29),r31; push ret addr
  731  00001734  2fbd0018	subui	r29,r29,#24; alloc local storage
  732  00001738  afa20000	sw	0(r29),r2
  733  0000173c  8fc10000	lw	r1,(r30)
  734  00001740  afc1fff4	sw	-12(r30),r1
  735  00001744          	L21_LF2:
  736  00001744  8fc10000	lw	r1,(r30)
  737  00001748  90220000	lbu	r2,(r1)
  738  0000174c  64410000	snei	r1,r2,#0
  739  00001750  1420000c	bnez	r1,L23_LF2
  740  00001754  54000000	nop; delay slot nop
  741  00001758  0800001c	j	L22_LF2
  742  0000175c  54000000	nop; delay slot nop
  743  00001760          	L23_LF2:
  744  00001760  8fc20000	lw	r2,(r30)
  745  00001764  20410001	addi	r1,r2,#1
  746  00001768  00011020	add	r2,r0,r1
  747  0000176c  afc20000	sw	(r30),r2
  748  00001770  0bffffd0	j	L21_LF2
  749  00001774  54000000	nop; delay slot nop
  750  00001778          	L22_LF2:
  751  00001778  23bdfff8	addi	r29,r29,#-8
  752  0000177c  001d0820	add	r1,r0,r29
  753  00001780  8fc20000	lw	r2,(r30)
  754  00001784  ac220000	sw	(r1),r2
  755  00001788  8fc20004	lw	r2,4(r30)
  756  0000178c  ac220004	sw	4(r1),r2
  757  00001790  0ffffe5c	jal	_dstrcpy
  758  00001794  54000000	nop; delay slot nop
  759  00001798  23bd0008	addi	r29,r29,#8
  760  0000179c  8fc1fff4	lw	r1,-12(r30)
  761  000017a0  08000004	j	L20_LF2
  762  000017a4  54000000	nop; delay slot nop
  763  000017a8          	L20_LF2:
  764  000017a8  8fa20000	lw	r2,0(r29)
  765  000017ac  8fdffff8	lw	r31,-8(r30)
  766  000017b0  001ee820	add	r29,r0,r30
  767  000017b4  8fdefffc	lw	r30,-4(r30)
  768  000017b8  4be00000	jr	r31
  769  000017bc  54000000	nop
  770  000017c0          	.endproc _dstrcat
  771  000017c0          	.align 2
  772  000017c0          	.proc _dstrncmp
  773  000017c0          	.global _dstrncmp
  774  000017c0          	_dstrncmp:
  775                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  776  000017c0  afbefffc	sw	-4(r29),r30; push fp
  777  000017c4  001df020	add	r30,r0,r29; fp = sp
  778  000017c8  afbffff8	sw	-8(r29),r31; push ret addr
  779  000017cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  780  000017d0  afa20000	sw	0(r29),r2
  781  000017d4  afa30004	sw	4(r29),r3
  782  000017d8  54000000	nop
  783  000017dc  20010000	addi	r1,r0,#0
  784  000017e0  afc1fff4	sw	-12(r30),r1
  785  000017e4          	L25_LF2:
  786  000017e4  8fc1fff4	lw	r1,-12(r30)
  787  000017e8  8fc20008	lw	r2,8(r30)
  788  000017ec  0022082a	slt	r1,r1,r2
  789  000017f0  1420000c	bnez	r1,L28_LF2
  790  000017f4  54000000	nop; delay slot nop
  791  000017f8  08000088	j	L26_LF2
  792  000017fc  54000000	nop; delay slot nop
  793  00001800          	L28_LF2:
  794  00001800  8fc10004	lw	r1,4(r30)
  795  00001804  90220000	lbu	r2,(r1)
  796  00001808  64410000	snei	r1,r2,#0
  797  0000180c  14200018	bnez	r1,L29_LF2
  798  00001810  54000000	nop; delay slot nop
  799  00001814  20010000	addi	r1,r0,#0
  800  00001818  080000d8	j	L24_LF2
  801  0000181c  54000000	nop; delay slot nop
  802  00001820  08000028	j	L30_LF2
  803  00001824  54000000	nop; delay slot nop
  804  00001828          	L29_LF2:
  805  00001828  8fc10000	lw	r1,(r30)
  806  0000182c  8fc20004	lw	r2,4(r30)
  807  00001830  90210000	lbu	r1,(r1)
  808  00001834  90420000	lbu	r2,(r2)
  809  00001838  00220829	sne	r1,r1,r2
  810  0000183c  1020000c	beqz	r1,L30_LF2
  811  00001840  54000000	nop; delay slot nop
  812  00001844  0800003c	j	L26_LF2
  813  00001848  54000000	nop; delay slot nop
  814  0000184c          	L31_LF2:
  815  0000184c          	L30_LF2:
  816  0000184c  8fc20000	lw	r2,(r30)
  817  00001850  20410001	addi	r1,r2,#1
  818  00001854  00011020	add	r2,r0,r1
  819  00001858  afc20000	sw	(r30),r2
  820  0000185c  8fc20004	lw	r2,4(r30)
  821  00001860  20410001	addi	r1,r2,#1
  822  00001864  00011020	add	r2,r0,r1
  823  00001868  afc20004	sw	4(r30),r2
  824  0000186c          	L27_LF2:
  825  0000186c  8fc2fff4	lw	r2,-12(r30)
  826  00001870  20410001	addi	r1,r2,#1
  827  00001874  00011020	add	r2,r0,r1
  828  00001878  afc2fff4	sw	-12(r30),r2
  829  0000187c  0bffff64	j	L25_LF2
  830  00001880  54000000	nop; delay slot nop
  831  00001884          	L26_LF2:
  832  00001884  8fc1fff4	lw	r1,-12(r30)
  833  00001888  8fc20008	lw	r2,8(r30)
  834  0000188c  00220828	seq	r1,r1,r2
  835  00001890  10200018	beqz	r1,L32_LF2
  836  00001894  54000000	nop; delay slot nop
  837  00001898  20010000	addi	r1,r0,#0
  838  0000189c  08000054	j	L24_LF2
  839  000018a0  54000000	nop; delay slot nop
  840  000018a4  0800004c	j	L33_LF2
  841  000018a8  54000000	nop; delay slot nop
  842  000018ac          	L32_LF2:
  843  000018ac  8fc20000	lw	r2,(r30)
  844  000018b0  90410000	lbu	r1,(r2)
  845  000018b4  8fc20004	lw	r2,4(r30)
  846  000018b8  90430000	lbu	r3,(r2)
  847  000018bc  00230822	sub	r1,r1,r3
  848  000018c0  74220000	sgei	r2,r1,#0
  849  000018c4  10400020	beqz	r2,L34_LF2
  850  000018c8  54000000	nop; delay slot nop
  851  000018cc  8fc10000	lw	r1,(r30)
  852  000018d0  8fc20004	lw	r2,4(r30)
  853  000018d4  90210000	lbu	r1,(r1)
  854  000018d8  90420000	lbu	r2,(r2)
  855  000018dc  00220829	sne	r1,r1,r2
  856  000018e0  08000008	j	L35_LF2
  857  000018e4  54000000	nop; delay slot nop
  858  000018e8          	L34_LF2:
  859  000018e8  2001ffff	addi	r1,r0,#-1
  860  000018ec          	L35_LF2:
  861  000018ec  08000004	j	L24_LF2
  862  000018f0  54000000	nop; delay slot nop
  863  000018f4          	L33_LF2:
  864  000018f4          	L24_LF2:
  865  000018f4  8fa20000	lw	r2,0(r29)
  866  000018f8  8fa30004	lw	r3,4(r29)
  867  000018fc  8fdffff8	lw	r31,-8(r30)
  868  00001900  001ee820	add	r29,r0,r30
  869  00001904  8fdefffc	lw	r30,-4(r30)
  870  00001908  4be00000	jr	r31
  871  0000190c  54000000	nop
  872  00001910          	.endproc _dstrncmp
  873  00001910          	.align 2
  874  00001910          	.proc _dstrlen
  875  00001910          	.global _dstrlen
  876  00001910          	_dstrlen:
  877                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  878  00001910  afbefffc	sw	-4(r29),r30; push fp
  879  00001914  001df020	add	r30,r0,r29; fp = sp
  880  00001918  afbffff8	sw	-8(r29),r31; push ret addr
  881  0000191c  2fbd0018	subui	r29,r29,#24; alloc local storage
  882  00001920  afa20000	sw	0(r29),r2
  883  00001924  20010000	addi	r1,r0,#0
  884  00001928  afc1fff4	sw	-12(r30),r1
  885  0000192c          	L37_LF2:
  886  0000192c  8fc10000	lw	r1,(r30)
  887  00001930  20220001	addi	r2,r1,#1
  888  00001934  afc20000	sw	(r30),r2
  889  00001938  90210000	lbu	r1,(r1)
  890  0000193c  64220000	snei	r2,r1,#0
  891  00001940  1440000c	bnez	r2,L39_LF2
  892  00001944  54000000	nop; delay slot nop
  893  00001948  0800001c	j	L38_LF2
  894  0000194c  54000000	nop; delay slot nop
  895  00001950          	L39_LF2:
  896  00001950  8fc2fff4	lw	r2,-12(r30)
  897  00001954  20410001	addi	r1,r2,#1
  898  00001958  00011020	add	r2,r0,r1
  899  0000195c  afc2fff4	sw	-12(r30),r2
  900  00001960  0bffffc8	j	L37_LF2
  901  00001964  54000000	nop; delay slot nop
  902  00001968          	L38_LF2:
  903  00001968  8fc1fff4	lw	r1,-12(r30)
  904  0000196c  08000004	j	L36_LF2
  905  00001970  54000000	nop; delay slot nop
  906  00001974          	L36_LF2:
  907  00001974  8fa20000	lw	r2,0(r29)
  908  00001978  8fdffff8	lw	r31,-8(r30)
  909  0000197c  001ee820	add	r29,r0,r30
  910  00001980  8fdefffc	lw	r30,-4(r30)
  911  00001984  4be00000	jr	r31
  912  00001988  54000000	nop
  913  0000198c          	.endproc _dstrlen
  914  0000198c          	.align 2
  915  0000198c          	.proc _dstrstr
  916  0000198c          	.global _dstrstr
  917  0000198c          	_dstrstr:
  918                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  919  0000198c  afbefffc	sw	-4(r29),r30; push fp
  920  00001990  001df020	add	r30,r0,r29; fp = sp
  921  00001994  afbffff8	sw	-8(r29),r31; push ret addr
  922  00001998  2fbd0018	subui	r29,r29,#24; alloc local storage
  923  0000199c  afa20000	sw	0(r29),r2
  924  000019a0  23bdfff8	addi	r29,r29,#-8
  925  000019a4  001d0820	add	r1,r0,r29
  926  000019a8  8fc20004	lw	r2,4(r30)
  927  000019ac  ac220000	sw	(r1),r2
  928  000019b0  0fffff5c	jal	_dstrlen
  929  000019b4  54000000	nop; delay slot nop
  930  000019b8  23bd0008	addi	r29,r29,#8
  931  000019bc  afc1fff4	sw	-12(r30),r1
  932  000019c0          	L41_LF2:
  933  000019c0  8fc10000	lw	r1,(r30)
  934  000019c4  90220000	lbu	r2,(r1)
  935  000019c8  64410000	snei	r1,r2,#0
  936  000019cc  1420000c	bnez	r1,L43_LF2
  937  000019d0  54000000	nop; delay slot nop
  938  000019d4  08000060	j	L42_LF2
  939  000019d8  54000000	nop; delay slot nop
  940  000019dc          	L43_LF2:
  941  000019dc  23bdfff0	addi	r29,r29,#-16
  942  000019e0  001d0820	add	r1,r0,r29
  943  000019e4  8fc20000	lw	r2,(r30)
  944  000019e8  ac220000	sw	(r1),r2
  945  000019ec  8fc20004	lw	r2,4(r30)
  946  000019f0  ac220004	sw	4(r1),r2
  947  000019f4  8fc2fff4	lw	r2,-12(r30)
  948  000019f8  ac220008	sw	8(r1),r2
  949  000019fc  0ffffdc0	jal	_dstrncmp
  950  00001a00  54000000	nop; delay slot nop
  951  00001a04  23bd0010	addi	r29,r29,#16
  952  00001a08  64220000	snei	r2,r1,#0
  953  00001a0c  14400010	bnez	r2,L44_LF2
  954  00001a10  54000000	nop; delay slot nop
  955  00001a14  8fc10000	lw	r1,(r30)
  956  00001a18  08000028	j	L40_LF2
  957  00001a1c  54000000	nop; delay slot nop
  958  00001a20          	L44_LF2:
  959  00001a20  8fc20000	lw	r2,(r30)
  960  00001a24  20410001	addi	r1,r2,#1
  961  00001a28  00011020	add	r2,r0,r1
  962  00001a2c  afc20000	sw	(r30),r2
  963  00001a30  0bffff8c	j	L41_LF2
  964  00001a34  54000000	nop; delay slot nop
  965  00001a38          	L42_LF2:
  966  00001a38  20010000	addi	r1,r0,#0
  967  00001a3c  08000004	j	L40_LF2
  968  00001a40  54000000	nop; delay slot nop
  969  00001a44          	L40_LF2:
  970  00001a44  8fa20000	lw	r2,0(r29)
  971  00001a48  8fdffff8	lw	r31,-8(r30)
  972  00001a4c  001ee820	add	r29,r0,r30
  973  00001a50  8fdefffc	lw	r30,-4(r30)
  974  00001a54  4be00000	jr	r31
  975  00001a58  54000000	nop
  976  00001a5c          	.endproc _dstrstr
  977  00001a5c          	.align 2
  978  00001a5c          	.proc _dmindex
  979  00001a5c          	.global _dmindex
  980  00001a5c          	_dmindex:
  981                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  982  00001a5c  afbefffc	sw	-4(r29),r30; push fp
  983  00001a60  001df020	add	r30,r0,r29; fp = sp
  984  00001a64  afbffff8	sw	-8(r29),r31; push ret addr
  985  00001a68  2fbd0018	subui	r29,r29,#24; alloc local storage
  986  00001a6c  afa20000	sw	0(r29),r2
  987  00001a70  54000000	nop
  988  00001a74          	L46_LF2:
  989  00001a74  8fc10000	lw	r1,(r30)
  990  00001a78  90220000	lbu	r2,(r1)
  991  00001a7c  64410000	snei	r1,r2,#0
  992  00001a80  1420000c	bnez	r1,L48_LF2
  993  00001a84  54000000	nop; delay slot nop
  994  00001a88  08000070	j	L47_LF2
  995  00001a8c  54000000	nop; delay slot nop
  996  00001a90          	L48_LF2:
  997  00001a90  8fc10004	lw	r1,4(r30)
  998  00001a94  afc1fff4	sw	-12(r30),r1
  999  00001a98          	L49_LF2:
 1000  00001a98  8fc1fff4	lw	r1,-12(r30)
 1001  00001a9c  90220000	lbu	r2,(r1)
 1002  00001aa0  64410000	snei	r1,r2,#0
 1003  00001aa4  1420000c	bnez	r1,L52_LF2
 1004  00001aa8  54000000	nop; delay slot nop
 1005  00001aac  08000044	j	L50_LF2
 1006  00001ab0  54000000	nop; delay slot nop
 1007  00001ab4          	L52_LF2:
 1008  00001ab4  8fc10000	lw	r1,(r30)
 1009  00001ab8  8fc2fff4	lw	r2,-12(r30)
 1010  00001abc  90210000	lbu	r1,(r1)
 1011  00001ac0  90420000	lbu	r2,(r2)
 1012  00001ac4  00220828	seq	r1,r1,r2
 1013  00001ac8  10200010	beqz	r1,L51_LF2
 1014  00001acc  54000000	nop; delay slot nop
 1015  00001ad0  8fc10000	lw	r1,(r30)
 1016  00001ad4  08000030	j	L45_LF2
 1017  00001ad8  54000000	nop; delay slot nop
 1018  00001adc          	L53_LF2:
 1019  00001adc          	L51_LF2:
 1020  00001adc  8fc2fff4	lw	r2,-12(r30)
 1021  00001ae0  20410001	addi	r1,r2,#1
 1022  00001ae4  00011020	add	r2,r0,r1
 1023  00001ae8  afc2fff4	sw	-12(r30),r2
 1024  00001aec  0bffffa8	j	L49_LF2
 1025  00001af0  54000000	nop; delay slot nop
 1026  00001af4          	L50_LF2:
 1027  00001af4  0bffff7c	j	L46_LF2
 1028  00001af8  54000000	nop; delay slot nop
 1029  00001afc          	L47_LF2:
 1030  00001afc  20010000	addi	r1,r0,#0
 1031  00001b00  08000004	j	L45_LF2
 1032  00001b04  54000000	nop; delay slot nop
 1033  00001b08          	L45_LF2:
 1034  00001b08  8fa20000	lw	r2,0(r29)
 1035  00001b0c  8fdffff8	lw	r31,-8(r30)
 1036  00001b10  001ee820	add	r29,r0,r30
 1037  00001b14  8fdefffc	lw	r30,-4(r30)
 1038  00001b18  4be00000	jr	r31
 1039  00001b1c  54000000	nop
 1040  00001b20          	.endproc _dmindex
 1041  00001b20          	.align 2
 1042  00001b20          	.proc _dindex
 1043  00001b20          	.global _dindex
 1044  00001b20          	_dindex:
 1045                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1046  00001b20  afbefffc	sw	-4(r29),r30; push fp
 1047  00001b24  001df020	add	r30,r0,r29; fp = sp
 1048  00001b28  afbffff8	sw	-8(r29),r31; push ret addr
 1049  00001b2c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1050  00001b30  afa20000	sw	0(r29),r2
 1051  00001b34  54000000	nop
 1052  00001b38          	L55_LF2:
 1053  00001b38  8fc10000	lw	r1,(r30)
 1054  00001b3c  90220000	lbu	r2,(r1)
 1055  00001b40  64410000	snei	r1,r2,#0
 1056  00001b44  1420000c	bnez	r1,L57_LF2
 1057  00001b48  54000000	nop; delay slot nop
 1058  00001b4c  08000040	j	L56_LF2
 1059  00001b50  54000000	nop; delay slot nop
 1060  00001b54          	L57_LF2:
 1061  00001b54  8fc10000	lw	r1,(r30)
 1062  00001b58  90220000	lbu	r2,(r1)
 1063  00001b5c  8fc10004	lw	r1,4(r30)
 1064  00001b60  00411028	seq	r2,r2,r1
 1065  00001b64  10400010	beqz	r2,L58_LF2
 1066  00001b68  54000000	nop; delay slot nop
 1067  00001b6c  8fc10000	lw	r1,(r30)
 1068  00001b70  08000028	j	L54_LF2
 1069  00001b74  54000000	nop; delay slot nop
 1070  00001b78          	L58_LF2:
 1071  00001b78  8fc20000	lw	r2,(r30)
 1072  00001b7c  20410001	addi	r1,r2,#1
 1073  00001b80  00011020	add	r2,r0,r1
 1074  00001b84  afc20000	sw	(r30),r2
 1075  00001b88  0bffffac	j	L55_LF2
 1076  00001b8c  54000000	nop; delay slot nop
 1077  00001b90          	L56_LF2:
 1078  00001b90  20010000	addi	r1,r0,#0
 1079  00001b94  08000004	j	L54_LF2
 1080  00001b98  54000000	nop; delay slot nop
 1081  00001b9c          	L54_LF2:
 1082  00001b9c  8fa20000	lw	r2,0(r29)
 1083  00001ba0  8fdffff8	lw	r31,-8(r30)
 1084  00001ba4  001ee820	add	r29,r0,r30
 1085  00001ba8  8fdefffc	lw	r30,-4(r30)
 1086  00001bac  4be00000	jr	r31
 1087  00001bb0  54000000	nop
 1088  00001bb4          	.endproc _dindex
 1089  00001bb4          	.align 2
 1090  00001bb4          	.proc _ditoa
 1091  00001bb4          	.global _ditoa
 1092  00001bb4          	_ditoa:
 1093                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1094  00001bb4  afbefffc	sw	-4(r29),r30; push fp
 1095  00001bb8  001df020	add	r30,r0,r29; fp = sp
 1096  00001bbc  afbffff8	sw	-8(r29),r31; push ret addr
 1097  00001bc0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1098  00001bc4  afa20000	sw	0(r29),r2
 1099  00001bc8  afa30004	sw	4(r29),r3
 1100  00001bcc  8fc10000	lw	r1,(r30)
 1101  00001bd0  68220000	slti	r2,r1,#0
 1102  00001bd4  1040002c	beqz	r2,L60_LF2
 1103  00001bd8  54000000	nop; delay slot nop
 1104  00001bdc  8fc10004	lw	r1,4(r30)
 1105  00001be0  20220001	addi	r2,r1,#1
 1106  00001be4  afc20004	sw	4(r30),r2
 1107  00001be8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1108  00001bec  a0220000	sb	(r1),r2
 1109  00001bf0  8fc10000	lw	r1,(r30)
 1110  00001bf4  00011022	sub	r2,r0,r1
 1111  00001bf8  afc20000	sw	(r30),r2
 1112  00001bfc  08000118	j	L61_LF2
 1113  00001c00  54000000	nop; delay slot nop
 1114  00001c04          	L60_LF2:
 1115  00001c04  8fc10000	lw	r1,(r30)
 1116  00001c08  64220000	snei	r2,r1,#0
 1117  00001c0c  14400020	bnez	r2,L62_LF2
 1118  00001c10  54000000	nop; delay slot nop
 1119  00001c14  8fc10004	lw	r1,4(r30)
 1120  00001c18  20220001	addi	r2,r1,#1
 1121  00001c1c  afc20004	sw	4(r30),r2
 1122  00001c20  20020030	addi	r2,r0,(#0x30)&0xff
 1123  00001c24  a0220000	sb	(r1),r2
 1124  00001c28  080000ec	j	L61_LF2
 1125  00001c2c  54000000	nop; delay slot nop
 1126  00001c30          	L62_LF2:
 1127  00001c30  20010001	addi	r1,r0,#1
 1128  00001c34  afc1fff4	sw	-12(r30),r1
 1129  00001c38          	L64_LF2:
 1130  00001c38  8fc1fff4	lw	r1,-12(r30)
 1131  00001c3c  8fc20000	lw	r2,(r30)
 1132  00001c40  0022082c	sle	r1,r1,r2
 1133  00001c44  1420000c	bnez	r1,L66_LF2
 1134  00001c48  54000000	nop; delay slot nop
 1135  00001c4c  08000024	j	L65_LF2
 1136  00001c50  54000000	nop; delay slot nop
 1137  00001c54          	L67_LF2:
 1138  00001c54          	L66_LF2:
 1139  00001c54  8fc1fff4	lw	r1,-12(r30)
 1140  00001c58  00011820	add	r3,r0,r1
 1141  00001c5c  50620002	slli	r2,r3,#0x2
 1142  00001c60  00411020	add	r2,r2,r1
 1143  00001c64  50410001	slli	r1,r2,#0x1
 1144  00001c68  afc1fff4	sw	-12(r30),r1
 1145  00001c6c  0bffffc8	j	L64_LF2
 1146  00001c70  54000000	nop; delay slot nop
 1147  00001c74          	L65_LF2:
 1148  00001c74  54000000	nop
 1149  00001c78          	L68_LF2:
 1150  00001c78  8fc1fff4	lw	r1,-12(r30)
 1151  00001c7c  2002000a	addi	r2,r0,#10
 1152  00001c80  00200035	movi2fp	f0,r1
 1153  00001c84  00400835	movi2fp	f1,r2
 1154  00001c88  0401000f	div	f0,f0,f1
 1155  00001c8c  00000834	movfp2i	r1,f0
 1156  00001c90  afc1fff4	sw	-12(r30),r1
 1157  00001c94  8fc10004	lw	r1,4(r30)
 1158  00001c98  20220001	addi	r2,r1,#1
 1159  00001c9c  afc20004	sw	4(r30),r2
 1160  00001ca0  8fc20000	lw	r2,(r30)
 1161  00001ca4  8fc3fff4	lw	r3,-12(r30)
 1162  00001ca8  00400035	movi2fp	f0,r2
 1163  00001cac  00600835	movi2fp	f1,r3
 1164  00001cb0  0401000f	div	f0,f0,f1
 1165  00001cb4  00001034	movfp2i	r2,f0
 1166  00001cb8  00021820	add	r3,r0,r2
 1167  00001cbc  20620030	addi	r2,r3,#48
 1168  00001cc0  a0220000	sb	(r1),r2
 1169  00001cc4  8fc10000	lw	r1,(r30)
 1170  00001cc8  8fc3fff4	lw	r3,-12(r30)
 1171  00001ccc  00200035	movi2fp	f0,r1
 1172  00001cd0  00600835	movi2fp	f1,r3
 1173  00001cd4  0401000f	div	f0,f0,f1
 1174  00001cd8  00001034	movfp2i	r2,f0
 1175  00001cdc  8fc3fff4	lw	r3,-12(r30)
 1176  00001ce0  00400035	movi2fp	f0,r2
 1177  00001ce4  00600835	movi2fp	f1,r3
 1178  00001ce8  0401000e	mult	f0,f0,f1
 1179  00001cec  00001034	movfp2i	r2,f0
 1180  00001cf0  00220822	sub	r1,r1,r2
 1181  00001cf4  afc10000	sw	(r30),r1
 1182  00001cf8          	L70_LF2:
 1183  00001cf8  8fc1fff4	lw	r1,-12(r30)
 1184  00001cfc  6c220001	sgti	r2,r1,#1
 1185  00001d00  1440000c	bnez	r2,L71_LF2
 1186  00001d04  54000000	nop; delay slot nop
 1187  00001d08  0800000c	j	L61_LF2
 1188  00001d0c  54000000	nop; delay slot nop
 1189  00001d10          	L71_LF2:
 1190  00001d10  0bffff64	j	L68_LF2
 1191  00001d14  54000000	nop; delay slot nop
 1192  00001d18          	L69_LF2:
 1193  00001d18          	L63_LF2:
 1194  00001d18          	L61_LF2:
 1195  00001d18  8fc10004	lw	r1,4(r30)
 1196  00001d1c  20020000	addi	r2,r0,(#0x0)&0xff
 1197  00001d20  a0220000	sb	(r1),r2
 1198  00001d24          	L59_LF2:
 1199  00001d24  8fa20000	lw	r2,0(r29)
 1200  00001d28  8fa30004	lw	r3,4(r29)
 1201  00001d2c  8fdffff8	lw	r31,-8(r30)
 1202  00001d30  001ee820	add	r29,r0,r30
 1203  00001d34  8fdefffc	lw	r30,-4(r30)
 1204  00001d38  4be00000	jr	r31
 1205  00001d3c  54000000	nop
 1206  00001d40          	.endproc _ditoa
 1207  00001d40          	.align 2
 1208  00001d40          	.proc _dstrtol
 1209  00001d40          	.global _dstrtol
 1210  00001d40          	_dstrtol:
 1211                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1212  00001d40  afbefffc	sw	-4(r29),r30; push fp
 1213  00001d44  001df020	add	r30,r0,r29; fp = sp
 1214  00001d48  afbffff8	sw	-8(r29),r31; push ret addr
 1215  00001d4c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1216  00001d50  afa20000	sw	0(r29),r2
 1217  00001d54  20010000	addi	r1,r0,#0
 1218  00001d58  afc1fff4	sw	-12(r30),r1
 1219  00001d5c          	L73_LF2:
 1220  00001d5c  8fc10000	lw	r1,(r30)
 1221  00001d60  90220000	lbu	r2,(r1)
 1222  00001d64  60410020	seqi	r1,r2,#32
 1223  00001d68  14200034	bnez	r1,L75_LF2
 1224  00001d6c  54000000	nop; delay slot nop
 1225  00001d70  8fc10000	lw	r1,(r30)
 1226  00001d74  90220000	lbu	r2,(r1)
 1227  00001d78  60410009	seqi	r1,r2,#9
 1228  00001d7c  14200020	bnez	r1,L75_LF2
 1229  00001d80  54000000	nop; delay slot nop
 1230  00001d84  8fc10000	lw	r1,(r30)
 1231  00001d88  90220000	lbu	r2,(r1)
 1232  00001d8c  6041000a	seqi	r1,r2,#10
 1233  00001d90  1420000c	bnez	r1,L75_LF2
 1234  00001d94  54000000	nop; delay slot nop
 1235  00001d98  0800001c	j	L74_LF2
 1236  00001d9c  54000000	nop; delay slot nop
 1237  00001da0          	L75_LF2:
 1238  00001da0  8fc20000	lw	r2,(r30)
 1239  00001da4  20410001	addi	r1,r2,#1
 1240  00001da8  00011020	add	r2,r0,r1
 1241  00001dac  afc20000	sw	(r30),r2
 1242  00001db0  0bffffa8	j	L73_LF2
 1243  00001db4  54000000	nop; delay slot nop
 1244  00001db8          	L74_LF2:
 1245  00001db8  8fc10004	lw	r1,4(r30)
 1246  00001dbc  64220000	snei	r2,r1,#0
 1247  00001dc0  10400010	beqz	r2,L76_LF2
 1248  00001dc4  54000000	nop; delay slot nop
 1249  00001dc8  8fc10004	lw	r1,4(r30)
 1250  00001dcc  8fc20000	lw	r2,(r30)
 1251  00001dd0  ac220000	sw	(r1),r2
 1252  00001dd4          	L76_LF2:
 1253  00001dd4  8fc10000	lw	r1,(r30)
 1254  00001dd8  90220000	lbu	r2,(r1)
 1255  00001ddc  64410000	snei	r1,r2,#0
 1256  00001de0  14200010	bnez	r1,L77_LF2
 1257  00001de4  54000000	nop; delay slot nop
 1258  00001de8  8fc1fff4	lw	r1,-12(r30)
 1259  00001dec  08000294	j	L72_LF2
 1260  00001df0  54000000	nop; delay slot nop
 1261  00001df4          	L77_LF2:
 1262  00001df4  8fc10000	lw	r1,(r30)
 1263  00001df8  90220000	lbu	r2,(r1)
 1264  00001dfc  6041002d	seqi	r1,r2,#45
 1265  00001e00  10200024	beqz	r1,L78_LF2
 1266  00001e04  54000000	nop; delay slot nop
 1267  00001e08  2001ffff	addi	r1,r0,#-1
 1268  00001e0c  afc1ffec	sw	-20(r30),r1
 1269  00001e10  8fc20000	lw	r2,(r30)
 1270  00001e14  20410001	addi	r1,r2,#1
 1271  00001e18  00011020	add	r2,r0,r1
 1272  00001e1c  afc20000	sw	(r30),r2
 1273  00001e20  0800000c	j	L79_LF2
 1274  00001e24  54000000	nop; delay slot nop
 1275  00001e28          	L78_LF2:
 1276  00001e28  20010001	addi	r1,r0,#1
 1277  00001e2c  afc1ffec	sw	-20(r30),r1
 1278  00001e30          	L79_LF2:
 1279  00001e30  8fc10008	lw	r1,8(r30)
 1280  00001e34  64220000	snei	r2,r1,#0
 1281  00001e38  14400090	bnez	r2,L80_LF2
 1282  00001e3c  54000000	nop; delay slot nop
 1283  00001e40  8fc10000	lw	r1,(r30)
 1284  00001e44  90220000	lbu	r2,(r1)
 1285  00001e48  60410030	seqi	r1,r2,#48
 1286  00001e4c  10200074	beqz	r1,L81_LF2
 1287  00001e50  54000000	nop; delay slot nop
 1288  00001e54  8fc20000	lw	r2,(r30)
 1289  00001e58  20410001	addi	r1,r2,#1
 1290  00001e5c  00011020	add	r2,r0,r1
 1291  00001e60  afc20000	sw	(r30),r2
 1292  00001e64  8fc10000	lw	r1,(r30)
 1293  00001e68  90220000	lbu	r2,(r1)
 1294  00001e6c  60410078	seqi	r1,r2,#120
 1295  00001e70  14200020	bnez	r1,L83_LF2
 1296  00001e74  54000000	nop; delay slot nop
 1297  00001e78  8fc10000	lw	r1,(r30)
 1298  00001e7c  90220000	lbu	r2,(r1)
 1299  00001e80  60410058	seqi	r1,r2,#88
 1300  00001e84  1420000c	bnez	r1,L83_LF2
 1301  00001e88  54000000	nop; delay slot nop
 1302  00001e8c  08000024	j	L82_LF2
 1303  00001e90  54000000	nop; delay slot nop
 1304  00001e94          	L83_LF2:
 1305  00001e94  20010010	addi	r1,r0,#16
 1306  00001e98  afc10008	sw	8(r30),r1
 1307  00001e9c  8fc20000	lw	r2,(r30)
 1308  00001ea0  20410001	addi	r1,r2,#1
 1309  00001ea4  00011020	add	r2,r0,r1
 1310  00001ea8  afc20000	sw	(r30),r2
 1311  00001eac  0800000c	j	L84_LF2
 1312  00001eb0  54000000	nop; delay slot nop
 1313  00001eb4          	L82_LF2:
 1314  00001eb4  20010008	addi	r1,r0,#8
 1315  00001eb8  afc10008	sw	8(r30),r1
 1316  00001ebc          	L84_LF2:
 1317  00001ebc  0800000c	j	L80_LF2
 1318  00001ec0  54000000	nop; delay slot nop
 1319  00001ec4          	L81_LF2:
 1320  00001ec4  2001000a	addi	r1,r0,#10
 1321  00001ec8  afc10008	sw	8(r30),r1
 1322  00001ecc          	L85_LF2:
 1323  00001ecc          	L80_LF2:
 1324  00001ecc  8fc10008	lw	r1,8(r30)
 1325  00001ed0  70220000	slei	r2,r1,#0
 1326  00001ed4  1440001c	bnez	r2,L87_LF2
 1327  00001ed8  54000000	nop; delay slot nop
 1328  00001edc  8fc10008	lw	r1,8(r30)
 1329  00001ee0  6c220010	sgti	r2,r1,#16
 1330  00001ee4  1440000c	bnez	r2,L87_LF2
 1331  00001ee8  54000000	nop; delay slot nop
 1332  00001eec  08000010	j	L86_LF2
 1333  00001ef0  54000000	nop; delay slot nop
 1334  00001ef4          	L87_LF2:
 1335  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1336  00001ef8  08000188	j	L72_LF2
 1337  00001efc  54000000	nop; delay slot nop
 1338  00001f00          	L86_LF2:
 1339  00001f00  54000000	nop
 1340  00001f04          	L88_LF2:
 1341  00001f04  8fc10000	lw	r1,(r30)
 1342  00001f08  90220000	lbu	r2,(r1)
 1343  00001f0c  6c41002f	sgtui	r1,r2,#47
 1344  00001f10  10200030	beqz	r1,L91_LF2
 1345  00001f14  54000000	nop; delay slot nop
 1346  00001f18  8fc10000	lw	r1,(r30)
 1347  00001f1c  90220000	lbu	r2,(r1)
 1348  00001f20  70410039	sleui	r1,r2,#57
 1349  00001f24  1020001c	beqz	r1,L91_LF2
 1350  00001f28  54000000	nop; delay slot nop
 1351  00001f2c  8fc10000	lw	r1,(r30)
 1352  00001f30  90220000	lbu	r2,(r1)
 1353  00001f34  2041ffd0	addi	r1,r2,#-48
 1354  00001f38  afc1fff0	sw	-16(r30),r1
 1355  00001f3c  0800008c	j	L92_LF2
 1356  00001f40  54000000	nop; delay slot nop
 1357  00001f44          	L91_LF2:
 1358  00001f44  8fc10000	lw	r1,(r30)
 1359  00001f48  90220000	lbu	r2,(r1)
 1360  00001f4c  6c410060	sgtui	r1,r2,#96
 1361  00001f50  10200030	beqz	r1,L93_LF2
 1362  00001f54  54000000	nop; delay slot nop
 1363  00001f58  8fc10000	lw	r1,(r30)
 1364  00001f5c  90220000	lbu	r2,(r1)
 1365  00001f60  7041007a	sleui	r1,r2,#122
 1366  00001f64  1020001c	beqz	r1,L93_LF2
 1367  00001f68  54000000	nop; delay slot nop
 1368  00001f6c  8fc10000	lw	r1,(r30)
 1369  00001f70  90220000	lbu	r2,(r1)
 1370  00001f74  2041ffa9	addi	r1,r2,#-87
 1371  00001f78  afc1fff0	sw	-16(r30),r1
 1372  00001f7c  0800004c	j	L92_LF2
 1373  00001f80  54000000	nop; delay slot nop
 1374  00001f84          	L93_LF2:
 1375  00001f84  8fc10000	lw	r1,(r30)
 1376  00001f88  90220000	lbu	r2,(r1)
 1377  00001f8c  6c410040	sgtui	r1,r2,#64
 1378  00001f90  10200030	beqz	r1,L95_LF2
 1379  00001f94  54000000	nop; delay slot nop
 1380  00001f98  8fc10000	lw	r1,(r30)
 1381  00001f9c  90220000	lbu	r2,(r1)
 1382  00001fa0  7041005a	sleui	r1,r2,#90
 1383  00001fa4  1020001c	beqz	r1,L95_LF2
 1384  00001fa8  54000000	nop; delay slot nop
 1385  00001fac  8fc10000	lw	r1,(r30)
 1386  00001fb0  90220000	lbu	r2,(r1)
 1387  00001fb4  2041ffc9	addi	r1,r2,#-55
 1388  00001fb8  afc1fff0	sw	-16(r30),r1
 1389  00001fbc  0800000c	j	L92_LF2
 1390  00001fc0  54000000	nop; delay slot nop
 1391  00001fc4          	L95_LF2:
 1392  00001fc4  200103e8	addi	r1,r0,#1000
 1393  00001fc8  afc1fff0	sw	-16(r30),r1
 1394  00001fcc          	L96_LF2:
 1395  00001fcc          	L94_LF2:
 1396  00001fcc          	L92_LF2:
 1397  00001fcc  8fc1fff0	lw	r1,-16(r30)
 1398  00001fd0  8fc20008	lw	r2,8(r30)
 1399  00001fd4  0022082a	slt	r1,r1,r2
 1400  00001fd8  10200040	beqz	r1,L90_LF2
 1401  00001fdc  54000000	nop; delay slot nop
 1402  00001fe0  8fc1fff4	lw	r1,-12(r30)
 1403  00001fe4  8fc20008	lw	r2,8(r30)
 1404  00001fe8  00200035	movi2fp	f0,r1
 1405  00001fec  00400835	movi2fp	f1,r2
 1406  00001ff0  0401000e	mult	f0,f0,f1
 1407  00001ff4  00000834	movfp2i	r1,f0
 1408  00001ff8  afc1fff4	sw	-12(r30),r1
 1409  00001ffc  8fc1fff4	lw	r1,-12(r30)
 1410  00002000  8fc2fff0	lw	r2,-16(r30)
 1411  00002004  00220820	add	r1,r1,r2
 1412  00002008  afc1fff4	sw	-12(r30),r1
 1413  0000200c  8fc20000	lw	r2,(r30)
 1414  00002010  20410001	addi	r1,r2,#1
 1415  00002014  00011020	add	r2,r0,r1
 1416  00002018  afc20000	sw	(r30),r2
 1417  0000201c          	L97_LF2:
 1418  0000201c          	L90_LF2:
 1419  0000201c  8fc1fff0	lw	r1,-16(r30)
 1420  00002020  8fc20008	lw	r2,8(r30)
 1421  00002024  0022082a	slt	r1,r1,r2
 1422  00002028  1420000c	bnez	r1,L98_LF2
 1423  0000202c  54000000	nop; delay slot nop
 1424  00002030  0800000c	j	L89_LF2
 1425  00002034  54000000	nop; delay slot nop
 1426  00002038          	L98_LF2:
 1427  00002038  0bfffec8	j	L88_LF2
 1428  0000203c  54000000	nop; delay slot nop
 1429  00002040          	L89_LF2:
 1430  00002040  8fc10004	lw	r1,4(r30)
 1431  00002044  64220000	snei	r2,r1,#0
 1432  00002048  10400010	beqz	r2,L99_LF2
 1433  0000204c  54000000	nop; delay slot nop
 1434  00002050  8fc10004	lw	r1,4(r30)
 1435  00002054  8fc20000	lw	r2,(r30)
 1436  00002058  ac220000	sw	(r1),r2
 1437  0000205c          	L99_LF2:
 1438  0000205c  8fc1fff4	lw	r1,-12(r30)
 1439  00002060  8fc2ffec	lw	r2,-20(r30)
 1440  00002064  00200035	movi2fp	f0,r1
 1441  00002068  00400835	movi2fp	f1,r2
 1442  0000206c  0401000e	mult	f0,f0,f1
 1443  00002070  00000834	movfp2i	r1,f0
 1444  00002074  afc1fff4	sw	-12(r30),r1
 1445  00002078  8fc1fff4	lw	r1,-12(r30)
 1446  0000207c  08000004	j	L72_LF2
 1447  00002080  54000000	nop; delay slot nop
 1448  00002084          	L72_LF2:
 1449  00002084  8fa20000	lw	r2,0(r29)
 1450  00002088  8fdffff8	lw	r31,-8(r30)
 1451  0000208c  001ee820	add	r29,r0,r30
 1452  00002090  8fdefffc	lw	r30,-4(r30)
 1453  00002094  4be00000	jr	r31
 1454  00002098  54000000	nop
 1455  0000209c          	.endproc _dstrtol
 1456  0000209c          	.align 2
 1457  0000209c          	.proc _bcopy
 1458  0000209c          	.global _bcopy
 1459  0000209c          	_bcopy:
 1460                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1461  0000209c  afbefffc	sw	-4(r29),r30; push fp
 1462  000020a0  001df020	add	r30,r0,r29; fp = sp
 1463  000020a4  afbffff8	sw	-8(r29),r31; push ret addr
 1464  000020a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1465  000020ac  afa20000	sw	0(r29),r2
 1466  000020b0  afa30004	sw	4(r29),r3
 1467  000020b4  54000000	nop
 1468  000020b8          	L101_LF2:
 1469  000020b8  8fc10008	lw	r1,8(r30)
 1470  000020bc  2022ffff	addi	r2,r1,#-1
 1471  000020c0  afc20008	sw	8(r30),r2
 1472  000020c4  6c210000	sgti	r1,r1,#0
 1473  000020c8  1420000c	bnez	r1,L103_LF2
 1474  000020cc  54000000	nop; delay slot nop
 1475  000020d0  0800002c	j	L102_LF2
 1476  000020d4  54000000	nop; delay slot nop
 1477  000020d8          	L103_LF2:
 1478  000020d8  8fc10004	lw	r1,4(r30)
 1479  000020dc  20220001	addi	r2,r1,#1
 1480  000020e0  afc20004	sw	4(r30),r2
 1481  000020e4  8fc20000	lw	r2,(r30)
 1482  000020e8  20430001	addi	r3,r2,#1
 1483  000020ec  afc30000	sw	(r30),r3
 1484  000020f0  80420000	lb	r2,(r2)
 1485  000020f4  a0220000	sb	(r1),r2
 1486  000020f8  0bffffbc	j	L101_LF2
 1487  000020fc  54000000	nop; delay slot nop
 1488  00002100          	L102_LF2:
 1489  00002100          	L100_LF2:
 1490  00002100  8fa20000	lw	r2,0(r29)
 1491  00002104  8fa30004	lw	r3,4(r29)
 1492  00002108  8fdffff8	lw	r31,-8(r30)
 1493  0000210c  001ee820	add	r29,r0,r30
 1494  00002110  8fdefffc	lw	r30,-4(r30)
 1495  00002114  4be00000	jr	r31
 1496  00002118  54000000	nop
 1497  0000211c          	.endproc _bcopy
 1498  0000211c          	.align 2
 1499  0000211c          	.proc _bzero
 1500  0000211c          	.global _bzero
 1501  0000211c          	_bzero:
 1502                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1503  0000211c  afbefffc	sw	-4(r29),r30; push fp
 1504  00002120  001df020	add	r30,r0,r29; fp = sp
 1505  00002124  afbffff8	sw	-8(r29),r31; push ret addr
 1506  00002128  2fbd0010	subui	r29,r29,#16; alloc local storage
 1507  0000212c  afa20000	sw	0(r29),r2
 1508  00002130  54000000	nop
 1509  00002134          	L105_LF2:
 1510  00002134  8fc10004	lw	r1,4(r30)
 1511  00002138  2022ffff	addi	r2,r1,#-1
 1512  0000213c  afc20004	sw	4(r30),r2
 1513  00002140  6c210000	sgti	r1,r1,#0
 1514  00002144  1420000c	bnez	r1,L107_LF2
 1515  00002148  54000000	nop; delay slot nop
 1516  0000214c  08000020	j	L106_LF2
 1517  00002150  54000000	nop; delay slot nop
 1518  00002154          	L107_LF2:
 1519  00002154  8fc10000	lw	r1,(r30)
 1520  00002158  20220001	addi	r2,r1,#1
 1521  0000215c  afc20000	sw	(r30),r2
 1522  00002160  20020000	addi	r2,r0,(#0x0)&0xff
 1523  00002164  a0220000	sb	(r1),r2
 1524  00002168  0bffffc8	j	L105_LF2
 1525  0000216c  54000000	nop; delay slot nop
 1526  00002170          	L106_LF2:
 1527  00002170          	L104_LF2:
 1528  00002170  8fa20000	lw	r2,0(r29)
 1529  00002174  8fdffff8	lw	r31,-8(r30)
 1530  00002178  001ee820	add	r29,r0,r30
 1531  0000217c  8fdefffc	lw	r30,-4(r30)
 1532  00002180  4be00000	jr	r31
 1533  00002184  54000000	nop
 1534  00002188          	.endproc _bzero
 1535  00002188          	.align 2
 1536  00002188          	.proc _min
 1537  00002188          	.global _min
 1538  00002188          	_min:
 1539                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1540  00002188  afbefffc	sw	-4(r29),r30; push fp
 1541  0000218c  001df020	add	r30,r0,r29; fp = sp
 1542  00002190  afbffff8	sw	-8(r29),r31; push ret addr
 1543  00002194  2fbd0010	subui	r29,r29,#16; alloc local storage
 1544  00002198  afa20000	sw	0(r29),r2
 1545  0000219c  afa30004	sw	4(r29),r3
 1546  000021a0  8fc10000	lw	r1,(r30)
 1547  000021a4  8fc20004	lw	r2,4(r30)
 1548  000021a8  0022182c	sle	r3,r1,r2
 1549  000021ac  14600008	bnez	r3,L109_LF2
 1550  000021b0  54000000	nop; delay slot nop
 1551  000021b4  8fc10004	lw	r1,4(r30)
 1552  000021b8          	L109_LF2:
 1553  000021b8  08000004	j	L108_LF2
 1554  000021bc  54000000	nop; delay slot nop
 1555  000021c0          	L108_LF2:
 1556  000021c0  8fa20000	lw	r2,0(r29)
 1557  000021c4  8fa30004	lw	r3,4(r29)
 1558  000021c8  8fdffff8	lw	r31,-8(r30)
 1559  000021cc  001ee820	add	r29,r0,r30
 1560  000021d0  8fdefffc	lw	r30,-4(r30)
 1561  000021d4  4be00000	jr	r31
 1562  000021d8  54000000	nop
 1563  000021dc          	.endproc _min
 1564  000021dc          	.align 2
 1565  000021dc          	.proc _max
 1566  000021dc          	.global _max
 1567  000021dc          	_max:
 1568                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1569  000021dc  afbefffc	sw	-4(r29),r30; push fp
 1570  000021e0  001df020	add	r30,r0,r29; fp = sp
 1571  000021e4  afbffff8	sw	-8(r29),r31; push ret addr
 1572  000021e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1573  000021ec  afa20000	sw	0(r29),r2
 1574  000021f0  afa30004	sw	4(r29),r3
 1575  000021f4  8fc10000	lw	r1,(r30)
 1576  000021f8  8fc20004	lw	r2,4(r30)
 1577  000021fc  0022182d	sge	r3,r1,r2
 1578  00002200  14600008	bnez	r3,L111_LF2
 1579  00002204  54000000	nop; delay slot nop
 1580  00002208  8fc10004	lw	r1,4(r30)
 1581  0000220c          	L111_LF2:
 1582  0000220c  08000004	j	L110_LF2
 1583  00002210  54000000	nop; delay slot nop
 1584  00002214          	L110_LF2:
 1585  00002214  8fa20000	lw	r2,0(r29)
 1586  00002218  8fa30004	lw	r3,4(r29)
 1587  0000221c  8fdffff8	lw	r31,-8(r30)
 1588  00002220  001ee820	add	r29,r0,r30
 1589  00002224  8fdefffc	lw	r30,-4(r30)
 1590  00002228  4be00000	jr	r31
 1591  0000222c  54000000	nop
 1592  00002230          	.endproc _max
 1593                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1594                      ;;;
 1595                      ;;; Most of the traps are called in files from libtraps.
 1598  00002230          	.align 2
 1599  00002230          	.proc _exit
 1600  00002230          	.global _exit
 1601  00002230          	_exit:
 1602  00002230  44000300	trap	#0x300
 1603  00002234  4be00000	jr	r31
 1604  00002238  54000000	nop
 1605  0000223c          	.endproc _exit
 1607                      ; for the benefit of gcc.
 1608  0000223c          	.proc ___main
 1609  0000223c          	.global ___main
 1610  0000223c          	___main:
 1611  0000223c  4be00000	jr	r31
 1612  00002240  54000000	nop
 1613  00002244          	.endproc ___main
 1614  00002244          	.text
 1615  00002244          	.global _etext
 1616  00002244          	_etext:
 1617  00002244          	.align 3
 1618  00002248          	.data
 1619  00003090          	.global _edata
 1620  00003090          	_edata:
