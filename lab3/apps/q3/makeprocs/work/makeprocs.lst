 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 176
    4                      ; Text size: 4700
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  2073686f	.ascii " should not have any arguments.\n\000"
   82  00003004  756c6420	
   82  00003008  6e6f7420	
   82  0000300c  68617665	
   82  00003010  20616e79	
   82  00003014  20617267	
   82  00003018  756d656e	
   82  0000301c  74732e0a	
   82  00003020  00      	
   83  00003021          	.align 2
   84  00003024          	LC1_LF0:
   85  00003024  42616420	.ascii "Bad sem_create in \000"
   85  00003028  73656d5f	
   85  0000302c  63726561	
   85  00003030  74652069	
   85  00003034  6e2000  	
   86  00003037          	.align 2
   87  00003038          	LC2_LF0:
   88  00003038  0a00    	.ascii "\n\000"
   89  0000303a          	.align 2
   90  0000303c          	LC3_LF0:
   91  0000303c  53746172	.ascii "Starting nothing_procs...\n\000"
   91  00003040  74696e67	
   91  00003044  206e6f74	
   91  00003048  68696e67	
   91  0000304c  5f70726f	
   91  00003050  63732e2e	
   91  00003054  2e0a00  	
   92  00003057          	.align 2
   93  00003058          	LC4_LF0:
   94  00003058  6e6f7468	.ascii "nothing_proc.dlx.obj\000"
   94  0000305c  696e675f	
   94  00003060  70726f63	
   94  00003064  2e646c78	
   94  00003068  2e6f626a	
   94  0000306c  00      	
   95  0000306d          	.align 2
   96  00003070          	LC5_LF0:
   97  00003070  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
   97  00003074  73656d61	
   97  00003078  70686f72	
   97  0000307c  65207365	
   97  00003080  6d5f7072	
   97  00003084  6f63735f	
   97  00003088  636f6d70	
   97  0000308c  6c657465	
   97  00003090  64202825	
   97  00003094  64292069	
   97  00003098  6e2000  	
   98  0000309b          	.align 2
   99  0000309c          	LC6_LF0:
  100  0000309c  45786974	.ascii "Exiting makeprocs!\n\000"
  100  000030a0  696e6720	
  100  000030a4  6d616b65	
  100  000030a8  70726f63	
  100  000030ac  73210a00	
  101  000030b0          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 64 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0048	subui	r29,r29,#72; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc80004	lw	r8,4(r30)
  113  000010ec  0c001164	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  64410001	snei	r1,r2,#1
  116  000010f8  10200038	beqz	r1,L14_LF0
  117  000010fc  54000000	nop; not filled.
  118  00001100  23bdfff8	addi	r29,r29,#-8
  119  00001104  8d090000	lw	r9,(r8)
  120  00001108  afa90000	sw	(r29),r9
  121  0000110c  0c000294	jal	_Printf
  122  00001110  54000000	nop; not filled.
  123  00001114  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  124  00001118  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  125  0000111c  afa90000	sw	(r29),r9
  126  00001120  0c000280	jal	_Printf
  127  00001124  54000000	nop; not filled.
  128  00001128  0c000380	jal	_Exit
  129  0000112c  54000000	nop; not filled.
  130  00001130  23bd0008	addi	r29,r29,#8
  131  00001134          	L14_LF0:
  132  00001134  23bdfff8	addi	r29,r29,#-8
  133  00001138  2009fffd	addi	r9,r0,#-3
  134  0000113c  afa90000	sw	(r29),r9
  135  00001140  0c00029c	jal	_sem_create
  136  00001144  54000000	nop; not filled.
  137  00001148  00013820	add	r7,r0,r1
  138  0000114c  23bd0008	addi	r29,r29,#8
  139  00001150  60e1ffff	seqi	r1,r7,#-1
  140  00001154  1020004c	beqz	r1,L15_LF0
  141  00001158  54000000	nop; not filled.
  142  0000115c  23bdfff8	addi	r29,r29,#-8
  143  00001160  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  144  00001164  25293024	addui	r9,r9,(LC1_LF0)&0xffff
  145  00001168  afa90000	sw	(r29),r9
  146  0000116c  0c000234	jal	_Printf
  147  00001170  54000000	nop; not filled.
  148  00001174  8d090000	lw	r9,(r8)
  149  00001178  afa90000	sw	(r29),r9
  150  0000117c  0c000224	jal	_Printf
  151  00001180  54000000	nop; not filled.
  152  00001184  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  153  00001188  25293038	addui	r9,r9,(LC2_LF0)&0xffff
  154  0000118c  afa90000	sw	(r29),r9
  155  00001190  0c000210	jal	_Printf
  156  00001194  54000000	nop; not filled.
  157  00001198  0c000310	jal	_Exit
  158  0000119c  54000000	nop; not filled.
  159  000011a0  23bd0008	addi	r29,r29,#8
  160  000011a4          	L15_LF0:
  161  000011a4  23bdfff8	addi	r29,r29,#-8
  162  000011a8  afa70000	sw	(r29),r7
  163  000011ac  23c3ffe8	addi	r3,r30,#-24
  164  000011b0  afa30004	sw	4(r29),r3
  165  000011b4  0c000a14	jal	_ditoa
  166  000011b8  54000000	nop; not filled.
  167  000011bc  20090064	addi	r9,r0,#100
  168  000011c0  afa90000	sw	(r29),r9
  169  000011c4  23c5ffd8	addi	r5,r30,#-40
  170  000011c8  afa50004	sw	4(r29),r5
  171  000011cc  0c0009fc	jal	_ditoa
  172  000011d0  54000000	nop; not filled.
  173  000011d4  20094e20	addi	r9,r0,#20000
  174  000011d8  afa90000	sw	(r29),r9
  175  000011dc  23c6ffc8	addi	r6,r30,#-56
  176  000011e0  afa60004	sw	4(r29),r6
  177  000011e4  0c0009e4	jal	_ditoa
  178  000011e8  54000000	nop; not filled.
  179  000011ec  3c090001	lhi	r9,#1
  180  000011f0  252986a0	addui	r9,r9,#34464
  181  000011f4  afa90000	sw	(r29),r9
  182  000011f8  23c4ffb8	addi	r4,r30,#-72
  183  000011fc  afa40004	sw	4(r29),r4
  184  00001200  0c0009c8	jal	_ditoa
  185  00001204  54000000	nop; not filled.
  186  00001208  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  187  0000120c  2529303c	addui	r9,r9,(LC3_LF0)&0xffff
  188  00001210  afa90000	sw	(r29),r9
  189  00001214  0c00018c	jal	_Printf
  190  00001218  54000000	nop; not filled.
  191  0000121c  23bdfff0	addi	r29,r29,#-16
  192  00001220  3c020000	lhi	r2,((LC4_LF0)>>16)&0xffff
  193  00001224  24423058	addui	r2,r2,(LC4_LF0)&0xffff
  194  00001228  afa20000	sw	(r29),r2
  195  0000122c  20090000	addi	r9,r0,#0
  196  00001230  afa90004	sw	4(r29),r9
  197  00001234  20090001	addi	r9,r0,#1
  198  00001238  afa90008	sw	8(r29),r9
  199  0000123c  afa3000c	sw	12(r29),r3
  200  00001240  afa50010	sw	16(r29),r5
  201  00001244  20090000	addi	r9,r0,#0
  202  00001248  afa90014	sw	20(r29),r9
  203  0000124c  0c00016c	jal	_process_create
  204  00001250  54000000	nop; not filled.
  205  00001254  afa20000	sw	(r29),r2
  206  00001258  afa90004	sw	4(r29),r9
  207  0000125c  20090001	addi	r9,r0,#1
  208  00001260  afa90008	sw	8(r29),r9
  209  00001264  afa3000c	sw	12(r29),r3
  210  00001268  afa60010	sw	16(r29),r6
  211  0000126c  20090000	addi	r9,r0,#0
  212  00001270  afa90014	sw	20(r29),r9
  213  00001274  0c000144	jal	_process_create
  214  00001278  54000000	nop; not filled.
  215  0000127c  afa20000	sw	(r29),r2
  216  00001280  afa90004	sw	4(r29),r9
  217  00001284  20090001	addi	r9,r0,#1
  218  00001288  afa90008	sw	8(r29),r9
  219  0000128c  afa3000c	sw	12(r29),r3
  220  00001290  afa40010	sw	16(r29),r4
  221  00001294  20090000	addi	r9,r0,#0
  222  00001298  afa90014	sw	20(r29),r9
  223  0000129c  0c00011c	jal	_process_create
  224  000012a0  54000000	nop; not filled.
  225  000012a4  afa20000	sw	(r29),r2
  226  000012a8  afa90004	sw	4(r29),r9
  227  000012ac  20090001	addi	r9,r0,#1
  228  000012b0  afa90008	sw	8(r29),r9
  229  000012b4  afa3000c	sw	12(r29),r3
  230  000012b8  afa40010	sw	16(r29),r4
  231  000012bc  20090000	addi	r9,r0,#0
  232  000012c0  afa90014	sw	20(r29),r9
  233  000012c4  0c0000f4	jal	_process_create
  234  000012c8  54000000	nop; not filled.
  235  000012cc  afa70000	sw	(r29),r7
  236  000012d0  0c000118	jal	_sem_wait
  237  000012d4  54000000	nop; not filled.
  238  000012d8  23bd0018	addi	r29,r29,#24
  239  000012dc  64210001	snei	r1,r1,#1
  240  000012e0  10200050	beqz	r1,L16_LF0
  241  000012e4  54000000	nop; not filled.
  242  000012e8  23bdfff8	addi	r29,r29,#-8
  243  000012ec  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  244  000012f0  25293070	addui	r9,r9,(LC5_LF0)&0xffff
  245  000012f4  afa90000	sw	(r29),r9
  246  000012f8  afa70004	sw	4(r29),r7
  247  000012fc  0c0000a4	jal	_Printf
  248  00001300  54000000	nop; not filled.
  249  00001304  8d080000	lw	r8,(r8)
  250  00001308  afa80000	sw	(r29),r8
  251  0000130c  0c000094	jal	_Printf
  252  00001310  54000000	nop; not filled.
  253  00001314  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  254  00001318  25293038	addui	r9,r9,(LC2_LF0)&0xffff
  255  0000131c  afa90000	sw	(r29),r9
  256  00001320  0c000080	jal	_Printf
  257  00001324  54000000	nop; not filled.
  258  00001328  0c000180	jal	_Exit
  259  0000132c  54000000	nop; not filled.
  260  00001330  23bd0008	addi	r29,r29,#8
  261  00001334          	L16_LF0:
  262  00001334  23bdfff8	addi	r29,r29,#-8
  263  00001338  3c090000	lhi	r9,((LC6_LF0)>>16)&0xffff
  264  0000133c  2529309c	addui	r9,r9,(LC6_LF0)&0xffff
  265  00001340  afa90000	sw	(r29),r9
  266  00001344  0c00005c	jal	_Printf
  267  00001348  54000000	nop; not filled.
  268  0000134c  20010000	addi	r1,r0,#0
  269  00001350  23bd0008	addi	r29,r29,#8
  270  00001354  0c000ef0	jal	_exit
  271  00001358  54000000	nop
  272  0000135c          	.endproc _main
  273                      ;;;
  274                      ;;; Stub functions for DLX traps.
  275                      ;;;
  276                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  277                      ;;;
  278                      ;;; The traps such as Open and Close
  279                      ;;; (note the capital letters) are for use by user programs.  The traps
  280                      ;;; with names such as open and close (lower case) are for use by the OS.
  281                      ;;;
  284  0000135c          	.align 2
  286                      ;;; The following are the traps to be used by user-level programs
  287                      ;;;
  289  0000135c          	.align 2
  290  0000135c          	.proc _Open
  291  0000135c          	.global _Open
  292  0000135c          	_Open:
  293                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  294                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  295                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  296  0000135c  44000213	trap	#0x213
  297  00001360  4be00000	jr	r31
  298  00001364  54000000	nop
  299  00001368          	.endproc _Open
  301  00001368          	.proc _Close
  302  00001368          	.global _Close
  303  00001368          	_Close:
  304  00001368  44000214	trap	#0x214
  305  0000136c  4be00000	jr	r31
  306  00001370  54000000	nop
  307  00001374          	.endproc _Close
  309  00001374          	.proc _Read
  310  00001374          	.global _Read
  311  00001374          	_Read:
  312  00001374  44000210	trap	#0x210
  313  00001378  4be00000	jr	r31
  314  0000137c  54000000	nop
  315  00001380          	.endproc _Read
  317  00001380          	.proc _Write
  318  00001380          	.global _Write
  319  00001380          	_Write:
  320  00001380  44000211	trap	#0x211
  321  00001384  4be00000	jr	r31
  322  00001388  54000000	nop
  323  0000138c          	.endproc _Write
  325  0000138c          	.proc _Lseek
  326  0000138c          	.global _Lseek
  327  0000138c          	_Lseek:
  328  0000138c  44000212	trap	#0x212
  329  00001390  4be00000	jr	r31
  330  00001394  54000000	nop
  331  00001398          	.endproc _Lseek
  333  00001398          	.proc _Putchar
  334  00001398          	.global _Putchar
  335  00001398          	_Putchar:
  336  00001398  44000280	trap	#0x280
  337  0000139c  4be00000	jr	r31
  338  000013a0  54000000	nop
  339  000013a4          	.endproc _Putchar
  341  000013a4          	.proc _Printf
  342  000013a4          	.global _Printf
  343  000013a4          	_Printf:
  344  000013a4  44000201	trap	#0x201
  345  000013a8  4be00000	jr	r31
  346  000013ac  54000000	nop
  347  000013b0          	.endproc _Printf
  349  000013b0          	.proc _getpid
  350  000013b0          	.global _getpid
  351  000013b0          	_getpid:
  352  000013b0  44000431	trap	#0x431
  353  000013b4  4be00000	jr	r31
  354  000013b8  54000000	nop
  355  000013bc          	.endproc _getpid
  357  000013bc          	.proc _process_create
  358  000013bc          	.global _process_create
  359  000013bc          	_process_create:
  360  000013bc  44000432	trap	#0x432
  361  000013c0  4be00000	jr	r31
  362  000013c4  54000000	nop
  363  000013c8          	.endproc _process_create
  365  000013c8          	.proc _shmget
  366  000013c8          	.global _shmget
  367  000013c8          	_shmget:
  368  000013c8  44000440	trap	#0x440
  369  000013cc  4be00000	jr	r31
  370  000013d0  54000000	nop
  371  000013d4          	.endproc _shmget
  373  000013d4          	.proc _shmat
  374  000013d4          	.global _shmat
  375  000013d4          	_shmat:
  376  000013d4  44000441	trap	#0x441
  377  000013d8  4be00000	jr	r31
  378  000013dc  54000000	nop
  379  000013e0          	.endproc _shmat
  381  000013e0          	.proc _sem_create
  382  000013e0          	.global _sem_create
  383  000013e0          	_sem_create:
  384  000013e0  44000450	trap	#0x450
  385  000013e4  4be00000	jr	r31
  386  000013e8  54000000	nop
  387  000013ec          	.endproc _sem_create
  389  000013ec          	.proc _sem_wait
  390  000013ec          	.global _sem_wait
  391  000013ec          	_sem_wait:
  392  000013ec  44000451	trap	#0x451
  393  000013f0  4be00000	jr	r31
  394  000013f4  54000000	nop
  395  000013f8          	.endproc _sem_wait
  397  000013f8          	.proc _sem_signal
  398  000013f8          	.global _sem_signal
  399  000013f8          	_sem_signal:
  400  000013f8  44000452	trap	#0x452
  401  000013fc  4be00000	jr	r31
  402  00001400  54000000	nop
  403  00001404          	.endproc _sem_signal
  405  00001404          	.proc _lock_create
  406  00001404          	.global _lock_create
  407  00001404          	_lock_create:
  408  00001404  44000453	trap	#0x453
  409  00001408  4be00000	jr	r31
  410  0000140c  54000000	nop
  411  00001410          	.endproc _lock_create
  413  00001410          	.proc _lock_acquire
  414  00001410          	.global _lock_acquire
  415  00001410          	_lock_acquire:
  416  00001410  44000454	trap	#0x454
  417  00001414  4be00000	jr	r31
  418  00001418  54000000	nop
  419  0000141c          	.endproc _lock_acquire
  421  0000141c          	.proc _lock_release
  422  0000141c          	.global _lock_release
  423  0000141c          	_lock_release:
  424  0000141c  44000455	trap	#0x455
  425  00001420  4be00000	jr	r31
  426  00001424  54000000	nop
  427  00001428          	.endproc _lock_release
  429  00001428          	.proc _cond_create
  430  00001428          	.global _cond_create
  431  00001428          	_cond_create:
  432  00001428  44000456	trap	#0x456
  433  0000142c  4be00000	jr	r31
  434  00001430  54000000	nop
  435  00001434          	.endproc _cond_create
  437  00001434          	.proc _cond_wait
  438  00001434          	.global _cond_wait
  439  00001434          	_cond_wait:
  440  00001434  44000457	trap	#0x457
  441  00001438  4be00000	jr	r31
  442  0000143c  54000000	nop
  443  00001440          	.endproc _cond_wait
  445  00001440          	.proc _cond_signal
  446  00001440          	.global _cond_signal
  447  00001440          	_cond_signal:
  448  00001440  44000458	trap	#0x458
  449  00001444  4be00000	jr	r31
  450  00001448  54000000	nop
  451  0000144c          	.endproc _cond_signal
  453  0000144c          	.proc _cond_broadcast
  454  0000144c          	.global _cond_broadcast
  455  0000144c          	_cond_broadcast:
  456  0000144c  44000459	trap	#0x459
  457  00001450  4be00000	jr	r31
  458  00001454  54000000	nop
  459  00001458          	.endproc _cond_broadcast
  461  00001458          	.proc _mbox_create
  462  00001458          	.global _mbox_create
  463  00001458          	_mbox_create:
  464  00001458  44000460	trap	#0x460
  465  0000145c  4be00000	jr	r31
  466  00001460  54000000	nop
  467  00001464          	.endproc _mbox_create
  469  00001464          	.proc _mbox_open
  470  00001464          	.global _mbox_open
  471  00001464          	_mbox_open:
  472  00001464  44000461	trap	#0x461
  473  00001468  4be00000	jr	r31
  474  0000146c  54000000	nop
  475  00001470          	.endproc _mbox_open
  477  00001470          	.proc _mbox_close
  478  00001470          	.global _mbox_close
  479  00001470          	_mbox_close:
  480  00001470  44000462	trap	#0x462
  481  00001474  4be00000	jr	r31
  482  00001478  54000000	nop
  483  0000147c          	.endproc _mbox_close
  485  0000147c          	.proc _mbox_send
  486  0000147c          	.global _mbox_send
  487  0000147c          	_mbox_send:
  488  0000147c  44000463	trap	#0x463
  489  00001480  4be00000	jr	r31
  490  00001484  54000000	nop
  491  00001488          	.endproc _mbox_send
  493  00001488          	.proc _mbox_recv
  494  00001488          	.global _mbox_recv
  495  00001488          	_mbox_recv:
  496  00001488  44000464	trap	#0x464
  497  0000148c  4be00000	jr	r31
  498  00001490  54000000	nop
  499  00001494          	.endproc _mbox_recv
  501  00001494          	.proc _sleep
  502  00001494          	.global _sleep
  503  00001494          	_sleep:
  504  00001494  44000465	trap	#0x465
  505  00001498  4be00000	jr	r31
  506  0000149c  54000000	nop
  507  000014a0          	.endproc _sleep
  509  000014a0          	.proc _yield
  510  000014a0          	.global _yield
  511  000014a0          	_yield:
  512  000014a0  44000466	trap	#0x466
  513  000014a4  4be00000	jr	r31
  514  000014a8  54000000	nop
  515  000014ac          	.endproc _yield
  518  000014ac          	.proc _Exit
  519  000014ac          	.global _Exit
  520  000014ac          	_Exit:
  521  000014ac  44000500	trap	#0x500
  522  000014b0  4be00000	jr	r31
  523  000014b4  54000000	nop
  524  000014b8          	.endproc _Exit
  525                      ; Compiled by GCC
  527  000014b8          	.align 2
  528  000014b8          	.proc _isspace
  529  000014b8          	.global _isspace
  530  000014b8          	_isspace:
  531                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  532  000014b8  afbefffc	sw	-4(r29),r30; push fp
  533  000014bc  001df020	add	r30,r0,r29; fp = sp
  534  000014c0  afbffff8	sw	-8(r29),r31; push ret addr
  535  000014c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  536  000014c8  afa20000	sw	0(r29),r2
  537  000014cc  afa30004	sw	4(r29),r3
  538  000014d0  afa40008	sw	8(r29),r4
  539  000014d4  83c20003	lb	r2,3(r30)
  540  000014d8  20010000	addi	r1,r0,#0
  541  000014dc  304300ff	andi	r3,r2,#0x00ff
  542  000014e0  60640020	seqi	r4,r3,#32
  543  000014e4  1480002c	bnez	r4,L3_LF2
  544  000014e8  54000000	nop; delay slot nop
  545  000014ec  304300ff	andi	r3,r2,#0x00ff
  546  000014f0  60640009	seqi	r4,r3,#9
  547  000014f4  1480001c	bnez	r4,L3_LF2
  548  000014f8  54000000	nop; delay slot nop
  549  000014fc  304300ff	andi	r3,r2,#0x00ff
  550  00001500  6064000a	seqi	r4,r3,#10
  551  00001504  1480000c	bnez	r4,L3_LF2
  552  00001508  54000000	nop; delay slot nop
  553  0000150c  08000008	j	L2_LF2
  554  00001510  54000000	nop; delay slot nop
  555  00001514          	L3_LF2:
  556  00001514  20010001	addi	r1,r0,#1
  557  00001518          	L2_LF2:
  558  00001518  08000004	j	L1_LF2
  559  0000151c  54000000	nop; delay slot nop
  560  00001520          	L1_LF2:
  561  00001520  8fa20000	lw	r2,0(r29)
  562  00001524  8fa30004	lw	r3,4(r29)
  563  00001528  8fa40008	lw	r4,8(r29)
  564  0000152c  8fdffff8	lw	r31,-8(r30)
  565  00001530  001ee820	add	r29,r0,r30
  566  00001534  8fdefffc	lw	r30,-4(r30)
  567  00001538  4be00000	jr	r31
  568  0000153c  54000000	nop
  569  00001540          	.endproc _isspace
  570  00001540          	.align 2
  571  00001540          	.proc _isxdigit
  572  00001540          	.global _isxdigit
  573  00001540          	_isxdigit:
  574                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  575  00001540  afbefffc	sw	-4(r29),r30; push fp
  576  00001544  001df020	add	r30,r0,r29; fp = sp
  577  00001548  afbffff8	sw	-8(r29),r31; push ret addr
  578  0000154c  2fbd0018	subui	r29,r29,#24; alloc local storage
  579  00001550  afa20000	sw	0(r29),r2
  580  00001554  afa30004	sw	4(r29),r3
  581  00001558  afa40008	sw	8(r29),r4
  582  0000155c  83c20003	lb	r2,3(r30)
  583  00001560  20010000	addi	r1,r0,#0
  584  00001564  304300ff	andi	r3,r2,#0x00ff
  585  00001568  6c64002f	sgtui	r4,r3,#47
  586  0000156c  1080001c	beqz	r4,L7_LF2
  587  00001570  54000000	nop; delay slot nop
  588  00001574  304300ff	andi	r3,r2,#0x00ff
  589  00001578  70640039	sleui	r4,r3,#57
  590  0000157c  1480005c	bnez	r4,L6_LF2
  591  00001580  54000000	nop; delay slot nop
  592  00001584  08000004	j	L7_LF2
  593  00001588  54000000	nop; delay slot nop
  594  0000158c          	L7_LF2:
  595  0000158c  304300ff	andi	r3,r2,#0x00ff
  596  00001590  6c640060	sgtui	r4,r3,#96
  597  00001594  1080001c	beqz	r4,L8_LF2
  598  00001598  54000000	nop; delay slot nop
  599  0000159c  304300ff	andi	r3,r2,#0x00ff
  600  000015a0  70640066	sleui	r4,r3,#102
  601  000015a4  14800034	bnez	r4,L6_LF2
  602  000015a8  54000000	nop; delay slot nop
  603  000015ac  08000004	j	L8_LF2
  604  000015b0  54000000	nop; delay slot nop
  605  000015b4          	L8_LF2:
  606  000015b4  304300ff	andi	r3,r2,#0x00ff
  607  000015b8  6c640040	sgtui	r4,r3,#64
  608  000015bc  10800020	beqz	r4,L5_LF2
  609  000015c0  54000000	nop; delay slot nop
  610  000015c4  304300ff	andi	r3,r2,#0x00ff
  611  000015c8  70640041	sleui	r4,r3,#65
  612  000015cc  1480000c	bnez	r4,L6_LF2
  613  000015d0  54000000	nop; delay slot nop
  614  000015d4  08000008	j	L5_LF2
  615  000015d8  54000000	nop; delay slot nop
  616  000015dc          	L6_LF2:
  617  000015dc  20010001	addi	r1,r0,#1
  618  000015e0          	L5_LF2:
  619  000015e0  08000004	j	L4_LF2
  620  000015e4  54000000	nop; delay slot nop
  621  000015e8          	L4_LF2:
  622  000015e8  8fa20000	lw	r2,0(r29)
  623  000015ec  8fa30004	lw	r3,4(r29)
  624  000015f0  8fa40008	lw	r4,8(r29)
  625  000015f4  8fdffff8	lw	r31,-8(r30)
  626  000015f8  001ee820	add	r29,r0,r30
  627  000015fc  8fdefffc	lw	r30,-4(r30)
  628  00001600  4be00000	jr	r31
  629  00001604  54000000	nop
  630  00001608          	.endproc _isxdigit
  631  00001608          	.align 2
  632  00001608          	.proc _dstrcpy
  633  00001608          	.global _dstrcpy
  634  00001608          	_dstrcpy:
  635                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  636  00001608  afbefffc	sw	-4(r29),r30; push fp
  637  0000160c  001df020	add	r30,r0,r29; fp = sp
  638  00001610  afbffff8	sw	-8(r29),r31; push ret addr
  639  00001614  2fbd0018	subui	r29,r29,#24; alloc local storage
  640  00001618  afa20000	sw	0(r29),r2
  641  0000161c  afa30004	sw	4(r29),r3
  642  00001620  8fc10000	lw	r1,(r30)
  643  00001624  afc1fff4	sw	-12(r30),r1
  644  00001628          	L10_LF2:
  645  00001628  8fc10000	lw	r1,(r30)
  646  0000162c  20220001	addi	r2,r1,#1
  647  00001630  afc20000	sw	(r30),r2
  648  00001634  8fc20004	lw	r2,4(r30)
  649  00001638  20430001	addi	r3,r2,#1
  650  0000163c  afc30004	sw	4(r30),r3
  651  00001640  80420000	lb	r2,(r2)
  652  00001644  a0220000	sb	(r1),r2
  653  00001648  a3c2fff3	sb	-13(r30),r2
  654  0000164c          	L12_LF2:
  655  0000164c  93c1fff3	lbu	r1,-13(r30)
  656  00001650  64220000	snei	r2,r1,#0
  657  00001654  1440000c	bnez	r2,L13_LF2
  658  00001658  54000000	nop; delay slot nop
  659  0000165c  0800000c	j	L11_LF2
  660  00001660  54000000	nop; delay slot nop
  661  00001664          	L13_LF2:
  662  00001664  0bffffc0	j	L10_LF2
  663  00001668  54000000	nop; delay slot nop
  664  0000166c          	L11_LF2:
  665  0000166c  8fc1fff4	lw	r1,-12(r30)
  666  00001670  08000004	j	L9_LF2
  667  00001674  54000000	nop; delay slot nop
  668  00001678          	L9_LF2:
  669  00001678  8fa20000	lw	r2,0(r29)
  670  0000167c  8fa30004	lw	r3,4(r29)
  671  00001680  8fdffff8	lw	r31,-8(r30)
  672  00001684  001ee820	add	r29,r0,r30
  673  00001688  8fdefffc	lw	r30,-4(r30)
  674  0000168c  4be00000	jr	r31
  675  00001690  54000000	nop
  676  00001694          	.endproc _dstrcpy
  677  00001694          	.align 2
  678  00001694          	.proc _dstrncpy
  679  00001694          	.global _dstrncpy
  680  00001694          	_dstrncpy:
  681                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  682  00001694  afbefffc	sw	-4(r29),r30; push fp
  683  00001698  001df020	add	r30,r0,r29; fp = sp
  684  0000169c  afbffff8	sw	-8(r29),r31; push ret addr
  685  000016a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  686  000016a4  afa20000	sw	0(r29),r2
  687  000016a8  afa30004	sw	4(r29),r3
  688  000016ac  8fc10000	lw	r1,(r30)
  689  000016b0  afc1fff4	sw	-12(r30),r1
  690  000016b4          	L15_LF2:
  691  000016b4  8fc10008	lw	r1,8(r30)
  692  000016b8  2022ffff	addi	r2,r1,#-1
  693  000016bc  afc20008	sw	8(r30),r2
  694  000016c0  70210000	slei	r1,r1,#0
  695  000016c4  1020000c	beqz	r1,L18_LF2
  696  000016c8  54000000	nop; delay slot nop
  697  000016cc  08000048	j	L16_LF2
  698  000016d0  54000000	nop; delay slot nop
  699  000016d4          	L18_LF2:
  700  000016d4  8fc10000	lw	r1,(r30)
  701  000016d8  20220001	addi	r2,r1,#1
  702  000016dc  afc20000	sw	(r30),r2
  703  000016e0  8fc20004	lw	r2,4(r30)
  704  000016e4  20430001	addi	r3,r2,#1
  705  000016e8  afc30004	sw	4(r30),r3
  706  000016ec  80420000	lb	r2,(r2)
  707  000016f0  a0220000	sb	(r1),r2
  708  000016f4  a3c2fff3	sb	-13(r30),r2
  709  000016f8          	L17_LF2:
  710  000016f8  93c1fff3	lbu	r1,-13(r30)
  711  000016fc  64220000	snei	r2,r1,#0
  712  00001700  1440000c	bnez	r2,L19_LF2
  713  00001704  54000000	nop; delay slot nop
  714  00001708  0800000c	j	L16_LF2
  715  0000170c  54000000	nop; delay slot nop
  716  00001710          	L19_LF2:
  717  00001710  0bffffa0	j	L15_LF2
  718  00001714  54000000	nop; delay slot nop
  719  00001718          	L16_LF2:
  720  00001718  8fc1fff4	lw	r1,-12(r30)
  721  0000171c  08000004	j	L14_LF2
  722  00001720  54000000	nop; delay slot nop
  723  00001724          	L14_LF2:
  724  00001724  8fa20000	lw	r2,0(r29)
  725  00001728  8fa30004	lw	r3,4(r29)
  726  0000172c  8fdffff8	lw	r31,-8(r30)
  727  00001730  001ee820	add	r29,r0,r30
  728  00001734  8fdefffc	lw	r30,-4(r30)
  729  00001738  4be00000	jr	r31
  730  0000173c  54000000	nop
  731  00001740          	.endproc _dstrncpy
  732  00001740          	.align 2
  733  00001740          	.proc _dstrcat
  734  00001740          	.global _dstrcat
  735  00001740          	_dstrcat:
  736                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  737  00001740  afbefffc	sw	-4(r29),r30; push fp
  738  00001744  001df020	add	r30,r0,r29; fp = sp
  739  00001748  afbffff8	sw	-8(r29),r31; push ret addr
  740  0000174c  2fbd0018	subui	r29,r29,#24; alloc local storage
  741  00001750  afa20000	sw	0(r29),r2
  742  00001754  8fc10000	lw	r1,(r30)
  743  00001758  afc1fff4	sw	-12(r30),r1
  744  0000175c          	L21_LF2:
  745  0000175c  8fc10000	lw	r1,(r30)
  746  00001760  90220000	lbu	r2,(r1)
  747  00001764  64410000	snei	r1,r2,#0
  748  00001768  1420000c	bnez	r1,L23_LF2
  749  0000176c  54000000	nop; delay slot nop
  750  00001770  0800001c	j	L22_LF2
  751  00001774  54000000	nop; delay slot nop
  752  00001778          	L23_LF2:
  753  00001778  8fc20000	lw	r2,(r30)
  754  0000177c  20410001	addi	r1,r2,#1
  755  00001780  00011020	add	r2,r0,r1
  756  00001784  afc20000	sw	(r30),r2
  757  00001788  0bffffd0	j	L21_LF2
  758  0000178c  54000000	nop; delay slot nop
  759  00001790          	L22_LF2:
  760  00001790  23bdfff8	addi	r29,r29,#-8
  761  00001794  001d0820	add	r1,r0,r29
  762  00001798  8fc20000	lw	r2,(r30)
  763  0000179c  ac220000	sw	(r1),r2
  764  000017a0  8fc20004	lw	r2,4(r30)
  765  000017a4  ac220004	sw	4(r1),r2
  766  000017a8  0ffffe5c	jal	_dstrcpy
  767  000017ac  54000000	nop; delay slot nop
  768  000017b0  23bd0008	addi	r29,r29,#8
  769  000017b4  8fc1fff4	lw	r1,-12(r30)
  770  000017b8  08000004	j	L20_LF2
  771  000017bc  54000000	nop; delay slot nop
  772  000017c0          	L20_LF2:
  773  000017c0  8fa20000	lw	r2,0(r29)
  774  000017c4  8fdffff8	lw	r31,-8(r30)
  775  000017c8  001ee820	add	r29,r0,r30
  776  000017cc  8fdefffc	lw	r30,-4(r30)
  777  000017d0  4be00000	jr	r31
  778  000017d4  54000000	nop
  779  000017d8          	.endproc _dstrcat
  780  000017d8          	.align 2
  781  000017d8          	.proc _dstrncmp
  782  000017d8          	.global _dstrncmp
  783  000017d8          	_dstrncmp:
  784                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  785  000017d8  afbefffc	sw	-4(r29),r30; push fp
  786  000017dc  001df020	add	r30,r0,r29; fp = sp
  787  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  788  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  789  000017e8  afa20000	sw	0(r29),r2
  790  000017ec  afa30004	sw	4(r29),r3
  791  000017f0  54000000	nop
  792  000017f4  20010000	addi	r1,r0,#0
  793  000017f8  afc1fff4	sw	-12(r30),r1
  794  000017fc          	L25_LF2:
  795  000017fc  8fc1fff4	lw	r1,-12(r30)
  796  00001800  8fc20008	lw	r2,8(r30)
  797  00001804  0022082a	slt	r1,r1,r2
  798  00001808  1420000c	bnez	r1,L28_LF2
  799  0000180c  54000000	nop; delay slot nop
  800  00001810  08000088	j	L26_LF2
  801  00001814  54000000	nop; delay slot nop
  802  00001818          	L28_LF2:
  803  00001818  8fc10004	lw	r1,4(r30)
  804  0000181c  90220000	lbu	r2,(r1)
  805  00001820  64410000	snei	r1,r2,#0
  806  00001824  14200018	bnez	r1,L29_LF2
  807  00001828  54000000	nop; delay slot nop
  808  0000182c  20010000	addi	r1,r0,#0
  809  00001830  080000d8	j	L24_LF2
  810  00001834  54000000	nop; delay slot nop
  811  00001838  08000028	j	L30_LF2
  812  0000183c  54000000	nop; delay slot nop
  813  00001840          	L29_LF2:
  814  00001840  8fc10000	lw	r1,(r30)
  815  00001844  8fc20004	lw	r2,4(r30)
  816  00001848  90210000	lbu	r1,(r1)
  817  0000184c  90420000	lbu	r2,(r2)
  818  00001850  00220829	sne	r1,r1,r2
  819  00001854  1020000c	beqz	r1,L30_LF2
  820  00001858  54000000	nop; delay slot nop
  821  0000185c  0800003c	j	L26_LF2
  822  00001860  54000000	nop; delay slot nop
  823  00001864          	L31_LF2:
  824  00001864          	L30_LF2:
  825  00001864  8fc20000	lw	r2,(r30)
  826  00001868  20410001	addi	r1,r2,#1
  827  0000186c  00011020	add	r2,r0,r1
  828  00001870  afc20000	sw	(r30),r2
  829  00001874  8fc20004	lw	r2,4(r30)
  830  00001878  20410001	addi	r1,r2,#1
  831  0000187c  00011020	add	r2,r0,r1
  832  00001880  afc20004	sw	4(r30),r2
  833  00001884          	L27_LF2:
  834  00001884  8fc2fff4	lw	r2,-12(r30)
  835  00001888  20410001	addi	r1,r2,#1
  836  0000188c  00011020	add	r2,r0,r1
  837  00001890  afc2fff4	sw	-12(r30),r2
  838  00001894  0bffff64	j	L25_LF2
  839  00001898  54000000	nop; delay slot nop
  840  0000189c          	L26_LF2:
  841  0000189c  8fc1fff4	lw	r1,-12(r30)
  842  000018a0  8fc20008	lw	r2,8(r30)
  843  000018a4  00220828	seq	r1,r1,r2
  844  000018a8  10200018	beqz	r1,L32_LF2
  845  000018ac  54000000	nop; delay slot nop
  846  000018b0  20010000	addi	r1,r0,#0
  847  000018b4  08000054	j	L24_LF2
  848  000018b8  54000000	nop; delay slot nop
  849  000018bc  0800004c	j	L33_LF2
  850  000018c0  54000000	nop; delay slot nop
  851  000018c4          	L32_LF2:
  852  000018c4  8fc20000	lw	r2,(r30)
  853  000018c8  90410000	lbu	r1,(r2)
  854  000018cc  8fc20004	lw	r2,4(r30)
  855  000018d0  90430000	lbu	r3,(r2)
  856  000018d4  00230822	sub	r1,r1,r3
  857  000018d8  74220000	sgei	r2,r1,#0
  858  000018dc  10400020	beqz	r2,L34_LF2
  859  000018e0  54000000	nop; delay slot nop
  860  000018e4  8fc10000	lw	r1,(r30)
  861  000018e8  8fc20004	lw	r2,4(r30)
  862  000018ec  90210000	lbu	r1,(r1)
  863  000018f0  90420000	lbu	r2,(r2)
  864  000018f4  00220829	sne	r1,r1,r2
  865  000018f8  08000008	j	L35_LF2
  866  000018fc  54000000	nop; delay slot nop
  867  00001900          	L34_LF2:
  868  00001900  2001ffff	addi	r1,r0,#-1
  869  00001904          	L35_LF2:
  870  00001904  08000004	j	L24_LF2
  871  00001908  54000000	nop; delay slot nop
  872  0000190c          	L33_LF2:
  873  0000190c          	L24_LF2:
  874  0000190c  8fa20000	lw	r2,0(r29)
  875  00001910  8fa30004	lw	r3,4(r29)
  876  00001914  8fdffff8	lw	r31,-8(r30)
  877  00001918  001ee820	add	r29,r0,r30
  878  0000191c  8fdefffc	lw	r30,-4(r30)
  879  00001920  4be00000	jr	r31
  880  00001924  54000000	nop
  881  00001928          	.endproc _dstrncmp
  882  00001928          	.align 2
  883  00001928          	.proc _dstrlen
  884  00001928          	.global _dstrlen
  885  00001928          	_dstrlen:
  886                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  887  00001928  afbefffc	sw	-4(r29),r30; push fp
  888  0000192c  001df020	add	r30,r0,r29; fp = sp
  889  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  890  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  891  00001938  afa20000	sw	0(r29),r2
  892  0000193c  20010000	addi	r1,r0,#0
  893  00001940  afc1fff4	sw	-12(r30),r1
  894  00001944          	L37_LF2:
  895  00001944  8fc10000	lw	r1,(r30)
  896  00001948  20220001	addi	r2,r1,#1
  897  0000194c  afc20000	sw	(r30),r2
  898  00001950  90210000	lbu	r1,(r1)
  899  00001954  64220000	snei	r2,r1,#0
  900  00001958  1440000c	bnez	r2,L39_LF2
  901  0000195c  54000000	nop; delay slot nop
  902  00001960  0800001c	j	L38_LF2
  903  00001964  54000000	nop; delay slot nop
  904  00001968          	L39_LF2:
  905  00001968  8fc2fff4	lw	r2,-12(r30)
  906  0000196c  20410001	addi	r1,r2,#1
  907  00001970  00011020	add	r2,r0,r1
  908  00001974  afc2fff4	sw	-12(r30),r2
  909  00001978  0bffffc8	j	L37_LF2
  910  0000197c  54000000	nop; delay slot nop
  911  00001980          	L38_LF2:
  912  00001980  8fc1fff4	lw	r1,-12(r30)
  913  00001984  08000004	j	L36_LF2
  914  00001988  54000000	nop; delay slot nop
  915  0000198c          	L36_LF2:
  916  0000198c  8fa20000	lw	r2,0(r29)
  917  00001990  8fdffff8	lw	r31,-8(r30)
  918  00001994  001ee820	add	r29,r0,r30
  919  00001998  8fdefffc	lw	r30,-4(r30)
  920  0000199c  4be00000	jr	r31
  921  000019a0  54000000	nop
  922  000019a4          	.endproc _dstrlen
  923  000019a4          	.align 2
  924  000019a4          	.proc _dstrstr
  925  000019a4          	.global _dstrstr
  926  000019a4          	_dstrstr:
  927                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  928  000019a4  afbefffc	sw	-4(r29),r30; push fp
  929  000019a8  001df020	add	r30,r0,r29; fp = sp
  930  000019ac  afbffff8	sw	-8(r29),r31; push ret addr
  931  000019b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  932  000019b4  afa20000	sw	0(r29),r2
  933  000019b8  23bdfff8	addi	r29,r29,#-8
  934  000019bc  001d0820	add	r1,r0,r29
  935  000019c0  8fc20004	lw	r2,4(r30)
  936  000019c4  ac220000	sw	(r1),r2
  937  000019c8  0fffff5c	jal	_dstrlen
  938  000019cc  54000000	nop; delay slot nop
  939  000019d0  23bd0008	addi	r29,r29,#8
  940  000019d4  afc1fff4	sw	-12(r30),r1
  941  000019d8          	L41_LF2:
  942  000019d8  8fc10000	lw	r1,(r30)
  943  000019dc  90220000	lbu	r2,(r1)
  944  000019e0  64410000	snei	r1,r2,#0
  945  000019e4  1420000c	bnez	r1,L43_LF2
  946  000019e8  54000000	nop; delay slot nop
  947  000019ec  08000060	j	L42_LF2
  948  000019f0  54000000	nop; delay slot nop
  949  000019f4          	L43_LF2:
  950  000019f4  23bdfff0	addi	r29,r29,#-16
  951  000019f8  001d0820	add	r1,r0,r29
  952  000019fc  8fc20000	lw	r2,(r30)
  953  00001a00  ac220000	sw	(r1),r2
  954  00001a04  8fc20004	lw	r2,4(r30)
  955  00001a08  ac220004	sw	4(r1),r2
  956  00001a0c  8fc2fff4	lw	r2,-12(r30)
  957  00001a10  ac220008	sw	8(r1),r2
  958  00001a14  0ffffdc0	jal	_dstrncmp
  959  00001a18  54000000	nop; delay slot nop
  960  00001a1c  23bd0010	addi	r29,r29,#16
  961  00001a20  64220000	snei	r2,r1,#0
  962  00001a24  14400010	bnez	r2,L44_LF2
  963  00001a28  54000000	nop; delay slot nop
  964  00001a2c  8fc10000	lw	r1,(r30)
  965  00001a30  08000028	j	L40_LF2
  966  00001a34  54000000	nop; delay slot nop
  967  00001a38          	L44_LF2:
  968  00001a38  8fc20000	lw	r2,(r30)
  969  00001a3c  20410001	addi	r1,r2,#1
  970  00001a40  00011020	add	r2,r0,r1
  971  00001a44  afc20000	sw	(r30),r2
  972  00001a48  0bffff8c	j	L41_LF2
  973  00001a4c  54000000	nop; delay slot nop
  974  00001a50          	L42_LF2:
  975  00001a50  20010000	addi	r1,r0,#0
  976  00001a54  08000004	j	L40_LF2
  977  00001a58  54000000	nop; delay slot nop
  978  00001a5c          	L40_LF2:
  979  00001a5c  8fa20000	lw	r2,0(r29)
  980  00001a60  8fdffff8	lw	r31,-8(r30)
  981  00001a64  001ee820	add	r29,r0,r30
  982  00001a68  8fdefffc	lw	r30,-4(r30)
  983  00001a6c  4be00000	jr	r31
  984  00001a70  54000000	nop
  985  00001a74          	.endproc _dstrstr
  986  00001a74          	.align 2
  987  00001a74          	.proc _dmindex
  988  00001a74          	.global _dmindex
  989  00001a74          	_dmindex:
  990                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  991  00001a74  afbefffc	sw	-4(r29),r30; push fp
  992  00001a78  001df020	add	r30,r0,r29; fp = sp
  993  00001a7c  afbffff8	sw	-8(r29),r31; push ret addr
  994  00001a80  2fbd0018	subui	r29,r29,#24; alloc local storage
  995  00001a84  afa20000	sw	0(r29),r2
  996  00001a88  54000000	nop
  997  00001a8c          	L46_LF2:
  998  00001a8c  8fc10000	lw	r1,(r30)
  999  00001a90  90220000	lbu	r2,(r1)
 1000  00001a94  64410000	snei	r1,r2,#0
 1001  00001a98  1420000c	bnez	r1,L48_LF2
 1002  00001a9c  54000000	nop; delay slot nop
 1003  00001aa0  08000070	j	L47_LF2
 1004  00001aa4  54000000	nop; delay slot nop
 1005  00001aa8          	L48_LF2:
 1006  00001aa8  8fc10004	lw	r1,4(r30)
 1007  00001aac  afc1fff4	sw	-12(r30),r1
 1008  00001ab0          	L49_LF2:
 1009  00001ab0  8fc1fff4	lw	r1,-12(r30)
 1010  00001ab4  90220000	lbu	r2,(r1)
 1011  00001ab8  64410000	snei	r1,r2,#0
 1012  00001abc  1420000c	bnez	r1,L52_LF2
 1013  00001ac0  54000000	nop; delay slot nop
 1014  00001ac4  08000044	j	L50_LF2
 1015  00001ac8  54000000	nop; delay slot nop
 1016  00001acc          	L52_LF2:
 1017  00001acc  8fc10000	lw	r1,(r30)
 1018  00001ad0  8fc2fff4	lw	r2,-12(r30)
 1019  00001ad4  90210000	lbu	r1,(r1)
 1020  00001ad8  90420000	lbu	r2,(r2)
 1021  00001adc  00220828	seq	r1,r1,r2
 1022  00001ae0  10200010	beqz	r1,L51_LF2
 1023  00001ae4  54000000	nop; delay slot nop
 1024  00001ae8  8fc10000	lw	r1,(r30)
 1025  00001aec  08000030	j	L45_LF2
 1026  00001af0  54000000	nop; delay slot nop
 1027  00001af4          	L53_LF2:
 1028  00001af4          	L51_LF2:
 1029  00001af4  8fc2fff4	lw	r2,-12(r30)
 1030  00001af8  20410001	addi	r1,r2,#1
 1031  00001afc  00011020	add	r2,r0,r1
 1032  00001b00  afc2fff4	sw	-12(r30),r2
 1033  00001b04  0bffffa8	j	L49_LF2
 1034  00001b08  54000000	nop; delay slot nop
 1035  00001b0c          	L50_LF2:
 1036  00001b0c  0bffff7c	j	L46_LF2
 1037  00001b10  54000000	nop; delay slot nop
 1038  00001b14          	L47_LF2:
 1039  00001b14  20010000	addi	r1,r0,#0
 1040  00001b18  08000004	j	L45_LF2
 1041  00001b1c  54000000	nop; delay slot nop
 1042  00001b20          	L45_LF2:
 1043  00001b20  8fa20000	lw	r2,0(r29)
 1044  00001b24  8fdffff8	lw	r31,-8(r30)
 1045  00001b28  001ee820	add	r29,r0,r30
 1046  00001b2c  8fdefffc	lw	r30,-4(r30)
 1047  00001b30  4be00000	jr	r31
 1048  00001b34  54000000	nop
 1049  00001b38          	.endproc _dmindex
 1050  00001b38          	.align 2
 1051  00001b38          	.proc _dindex
 1052  00001b38          	.global _dindex
 1053  00001b38          	_dindex:
 1054                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1055  00001b38  afbefffc	sw	-4(r29),r30; push fp
 1056  00001b3c  001df020	add	r30,r0,r29; fp = sp
 1057  00001b40  afbffff8	sw	-8(r29),r31; push ret addr
 1058  00001b44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1059  00001b48  afa20000	sw	0(r29),r2
 1060  00001b4c  54000000	nop
 1061  00001b50          	L55_LF2:
 1062  00001b50  8fc10000	lw	r1,(r30)
 1063  00001b54  90220000	lbu	r2,(r1)
 1064  00001b58  64410000	snei	r1,r2,#0
 1065  00001b5c  1420000c	bnez	r1,L57_LF2
 1066  00001b60  54000000	nop; delay slot nop
 1067  00001b64  08000040	j	L56_LF2
 1068  00001b68  54000000	nop; delay slot nop
 1069  00001b6c          	L57_LF2:
 1070  00001b6c  8fc10000	lw	r1,(r30)
 1071  00001b70  90220000	lbu	r2,(r1)
 1072  00001b74  8fc10004	lw	r1,4(r30)
 1073  00001b78  00411028	seq	r2,r2,r1
 1074  00001b7c  10400010	beqz	r2,L58_LF2
 1075  00001b80  54000000	nop; delay slot nop
 1076  00001b84  8fc10000	lw	r1,(r30)
 1077  00001b88  08000028	j	L54_LF2
 1078  00001b8c  54000000	nop; delay slot nop
 1079  00001b90          	L58_LF2:
 1080  00001b90  8fc20000	lw	r2,(r30)
 1081  00001b94  20410001	addi	r1,r2,#1
 1082  00001b98  00011020	add	r2,r0,r1
 1083  00001b9c  afc20000	sw	(r30),r2
 1084  00001ba0  0bffffac	j	L55_LF2
 1085  00001ba4  54000000	nop; delay slot nop
 1086  00001ba8          	L56_LF2:
 1087  00001ba8  20010000	addi	r1,r0,#0
 1088  00001bac  08000004	j	L54_LF2
 1089  00001bb0  54000000	nop; delay slot nop
 1090  00001bb4          	L54_LF2:
 1091  00001bb4  8fa20000	lw	r2,0(r29)
 1092  00001bb8  8fdffff8	lw	r31,-8(r30)
 1093  00001bbc  001ee820	add	r29,r0,r30
 1094  00001bc0  8fdefffc	lw	r30,-4(r30)
 1095  00001bc4  4be00000	jr	r31
 1096  00001bc8  54000000	nop
 1097  00001bcc          	.endproc _dindex
 1098  00001bcc          	.align 2
 1099  00001bcc          	.proc _ditoa
 1100  00001bcc          	.global _ditoa
 1101  00001bcc          	_ditoa:
 1102                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1103  00001bcc  afbefffc	sw	-4(r29),r30; push fp
 1104  00001bd0  001df020	add	r30,r0,r29; fp = sp
 1105  00001bd4  afbffff8	sw	-8(r29),r31; push ret addr
 1106  00001bd8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1107  00001bdc  afa20000	sw	0(r29),r2
 1108  00001be0  afa30004	sw	4(r29),r3
 1109  00001be4  8fc10000	lw	r1,(r30)
 1110  00001be8  68220000	slti	r2,r1,#0
 1111  00001bec  1040002c	beqz	r2,L60_LF2
 1112  00001bf0  54000000	nop; delay slot nop
 1113  00001bf4  8fc10004	lw	r1,4(r30)
 1114  00001bf8  20220001	addi	r2,r1,#1
 1115  00001bfc  afc20004	sw	4(r30),r2
 1116  00001c00  2002002d	addi	r2,r0,(#0x2d)&0xff
 1117  00001c04  a0220000	sb	(r1),r2
 1118  00001c08  8fc10000	lw	r1,(r30)
 1119  00001c0c  00011022	sub	r2,r0,r1
 1120  00001c10  afc20000	sw	(r30),r2
 1121  00001c14  08000118	j	L61_LF2
 1122  00001c18  54000000	nop; delay slot nop
 1123  00001c1c          	L60_LF2:
 1124  00001c1c  8fc10000	lw	r1,(r30)
 1125  00001c20  64220000	snei	r2,r1,#0
 1126  00001c24  14400020	bnez	r2,L62_LF2
 1127  00001c28  54000000	nop; delay slot nop
 1128  00001c2c  8fc10004	lw	r1,4(r30)
 1129  00001c30  20220001	addi	r2,r1,#1
 1130  00001c34  afc20004	sw	4(r30),r2
 1131  00001c38  20020030	addi	r2,r0,(#0x30)&0xff
 1132  00001c3c  a0220000	sb	(r1),r2
 1133  00001c40  080000ec	j	L61_LF2
 1134  00001c44  54000000	nop; delay slot nop
 1135  00001c48          	L62_LF2:
 1136  00001c48  20010001	addi	r1,r0,#1
 1137  00001c4c  afc1fff4	sw	-12(r30),r1
 1138  00001c50          	L64_LF2:
 1139  00001c50  8fc1fff4	lw	r1,-12(r30)
 1140  00001c54  8fc20000	lw	r2,(r30)
 1141  00001c58  0022082c	sle	r1,r1,r2
 1142  00001c5c  1420000c	bnez	r1,L66_LF2
 1143  00001c60  54000000	nop; delay slot nop
 1144  00001c64  08000024	j	L65_LF2
 1145  00001c68  54000000	nop; delay slot nop
 1146  00001c6c          	L67_LF2:
 1147  00001c6c          	L66_LF2:
 1148  00001c6c  8fc1fff4	lw	r1,-12(r30)
 1149  00001c70  00011820	add	r3,r0,r1
 1150  00001c74  50620002	slli	r2,r3,#0x2
 1151  00001c78  00411020	add	r2,r2,r1
 1152  00001c7c  50410001	slli	r1,r2,#0x1
 1153  00001c80  afc1fff4	sw	-12(r30),r1
 1154  00001c84  0bffffc8	j	L64_LF2
 1155  00001c88  54000000	nop; delay slot nop
 1156  00001c8c          	L65_LF2:
 1157  00001c8c  54000000	nop
 1158  00001c90          	L68_LF2:
 1159  00001c90  8fc1fff4	lw	r1,-12(r30)
 1160  00001c94  2002000a	addi	r2,r0,#10
 1161  00001c98  00200035	movi2fp	f0,r1
 1162  00001c9c  00400835	movi2fp	f1,r2
 1163  00001ca0  0401000f	div	f0,f0,f1
 1164  00001ca4  00000834	movfp2i	r1,f0
 1165  00001ca8  afc1fff4	sw	-12(r30),r1
 1166  00001cac  8fc10004	lw	r1,4(r30)
 1167  00001cb0  20220001	addi	r2,r1,#1
 1168  00001cb4  afc20004	sw	4(r30),r2
 1169  00001cb8  8fc20000	lw	r2,(r30)
 1170  00001cbc  8fc3fff4	lw	r3,-12(r30)
 1171  00001cc0  00400035	movi2fp	f0,r2
 1172  00001cc4  00600835	movi2fp	f1,r3
 1173  00001cc8  0401000f	div	f0,f0,f1
 1174  00001ccc  00001034	movfp2i	r2,f0
 1175  00001cd0  00021820	add	r3,r0,r2
 1176  00001cd4  20620030	addi	r2,r3,#48
 1177  00001cd8  a0220000	sb	(r1),r2
 1178  00001cdc  8fc10000	lw	r1,(r30)
 1179  00001ce0  8fc3fff4	lw	r3,-12(r30)
 1180  00001ce4  00200035	movi2fp	f0,r1
 1181  00001ce8  00600835	movi2fp	f1,r3
 1182  00001cec  0401000f	div	f0,f0,f1
 1183  00001cf0  00001034	movfp2i	r2,f0
 1184  00001cf4  8fc3fff4	lw	r3,-12(r30)
 1185  00001cf8  00400035	movi2fp	f0,r2
 1186  00001cfc  00600835	movi2fp	f1,r3
 1187  00001d00  0401000e	mult	f0,f0,f1
 1188  00001d04  00001034	movfp2i	r2,f0
 1189  00001d08  00220822	sub	r1,r1,r2
 1190  00001d0c  afc10000	sw	(r30),r1
 1191  00001d10          	L70_LF2:
 1192  00001d10  8fc1fff4	lw	r1,-12(r30)
 1193  00001d14  6c220001	sgti	r2,r1,#1
 1194  00001d18  1440000c	bnez	r2,L71_LF2
 1195  00001d1c  54000000	nop; delay slot nop
 1196  00001d20  0800000c	j	L61_LF2
 1197  00001d24  54000000	nop; delay slot nop
 1198  00001d28          	L71_LF2:
 1199  00001d28  0bffff64	j	L68_LF2
 1200  00001d2c  54000000	nop; delay slot nop
 1201  00001d30          	L69_LF2:
 1202  00001d30          	L63_LF2:
 1203  00001d30          	L61_LF2:
 1204  00001d30  8fc10004	lw	r1,4(r30)
 1205  00001d34  20020000	addi	r2,r0,(#0x0)&0xff
 1206  00001d38  a0220000	sb	(r1),r2
 1207  00001d3c          	L59_LF2:
 1208  00001d3c  8fa20000	lw	r2,0(r29)
 1209  00001d40  8fa30004	lw	r3,4(r29)
 1210  00001d44  8fdffff8	lw	r31,-8(r30)
 1211  00001d48  001ee820	add	r29,r0,r30
 1212  00001d4c  8fdefffc	lw	r30,-4(r30)
 1213  00001d50  4be00000	jr	r31
 1214  00001d54  54000000	nop
 1215  00001d58          	.endproc _ditoa
 1216  00001d58          	.align 2
 1217  00001d58          	.proc _dstrtol
 1218  00001d58          	.global _dstrtol
 1219  00001d58          	_dstrtol:
 1220                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1221  00001d58  afbefffc	sw	-4(r29),r30; push fp
 1222  00001d5c  001df020	add	r30,r0,r29; fp = sp
 1223  00001d60  afbffff8	sw	-8(r29),r31; push ret addr
 1224  00001d64  2fbd0020	subui	r29,r29,#32; alloc local storage
 1225  00001d68  afa20000	sw	0(r29),r2
 1226  00001d6c  20010000	addi	r1,r0,#0
 1227  00001d70  afc1fff4	sw	-12(r30),r1
 1228  00001d74          	L73_LF2:
 1229  00001d74  8fc10000	lw	r1,(r30)
 1230  00001d78  90220000	lbu	r2,(r1)
 1231  00001d7c  60410020	seqi	r1,r2,#32
 1232  00001d80  14200034	bnez	r1,L75_LF2
 1233  00001d84  54000000	nop; delay slot nop
 1234  00001d88  8fc10000	lw	r1,(r30)
 1235  00001d8c  90220000	lbu	r2,(r1)
 1236  00001d90  60410009	seqi	r1,r2,#9
 1237  00001d94  14200020	bnez	r1,L75_LF2
 1238  00001d98  54000000	nop; delay slot nop
 1239  00001d9c  8fc10000	lw	r1,(r30)
 1240  00001da0  90220000	lbu	r2,(r1)
 1241  00001da4  6041000a	seqi	r1,r2,#10
 1242  00001da8  1420000c	bnez	r1,L75_LF2
 1243  00001dac  54000000	nop; delay slot nop
 1244  00001db0  0800001c	j	L74_LF2
 1245  00001db4  54000000	nop; delay slot nop
 1246  00001db8          	L75_LF2:
 1247  00001db8  8fc20000	lw	r2,(r30)
 1248  00001dbc  20410001	addi	r1,r2,#1
 1249  00001dc0  00011020	add	r2,r0,r1
 1250  00001dc4  afc20000	sw	(r30),r2
 1251  00001dc8  0bffffa8	j	L73_LF2
 1252  00001dcc  54000000	nop; delay slot nop
 1253  00001dd0          	L74_LF2:
 1254  00001dd0  8fc10004	lw	r1,4(r30)
 1255  00001dd4  64220000	snei	r2,r1,#0
 1256  00001dd8  10400010	beqz	r2,L76_LF2
 1257  00001ddc  54000000	nop; delay slot nop
 1258  00001de0  8fc10004	lw	r1,4(r30)
 1259  00001de4  8fc20000	lw	r2,(r30)
 1260  00001de8  ac220000	sw	(r1),r2
 1261  00001dec          	L76_LF2:
 1262  00001dec  8fc10000	lw	r1,(r30)
 1263  00001df0  90220000	lbu	r2,(r1)
 1264  00001df4  64410000	snei	r1,r2,#0
 1265  00001df8  14200010	bnez	r1,L77_LF2
 1266  00001dfc  54000000	nop; delay slot nop
 1267  00001e00  8fc1fff4	lw	r1,-12(r30)
 1268  00001e04  08000294	j	L72_LF2
 1269  00001e08  54000000	nop; delay slot nop
 1270  00001e0c          	L77_LF2:
 1271  00001e0c  8fc10000	lw	r1,(r30)
 1272  00001e10  90220000	lbu	r2,(r1)
 1273  00001e14  6041002d	seqi	r1,r2,#45
 1274  00001e18  10200024	beqz	r1,L78_LF2
 1275  00001e1c  54000000	nop; delay slot nop
 1276  00001e20  2001ffff	addi	r1,r0,#-1
 1277  00001e24  afc1ffec	sw	-20(r30),r1
 1278  00001e28  8fc20000	lw	r2,(r30)
 1279  00001e2c  20410001	addi	r1,r2,#1
 1280  00001e30  00011020	add	r2,r0,r1
 1281  00001e34  afc20000	sw	(r30),r2
 1282  00001e38  0800000c	j	L79_LF2
 1283  00001e3c  54000000	nop; delay slot nop
 1284  00001e40          	L78_LF2:
 1285  00001e40  20010001	addi	r1,r0,#1
 1286  00001e44  afc1ffec	sw	-20(r30),r1
 1287  00001e48          	L79_LF2:
 1288  00001e48  8fc10008	lw	r1,8(r30)
 1289  00001e4c  64220000	snei	r2,r1,#0
 1290  00001e50  14400090	bnez	r2,L80_LF2
 1291  00001e54  54000000	nop; delay slot nop
 1292  00001e58  8fc10000	lw	r1,(r30)
 1293  00001e5c  90220000	lbu	r2,(r1)
 1294  00001e60  60410030	seqi	r1,r2,#48
 1295  00001e64  10200074	beqz	r1,L81_LF2
 1296  00001e68  54000000	nop; delay slot nop
 1297  00001e6c  8fc20000	lw	r2,(r30)
 1298  00001e70  20410001	addi	r1,r2,#1
 1299  00001e74  00011020	add	r2,r0,r1
 1300  00001e78  afc20000	sw	(r30),r2
 1301  00001e7c  8fc10000	lw	r1,(r30)
 1302  00001e80  90220000	lbu	r2,(r1)
 1303  00001e84  60410078	seqi	r1,r2,#120
 1304  00001e88  14200020	bnez	r1,L83_LF2
 1305  00001e8c  54000000	nop; delay slot nop
 1306  00001e90  8fc10000	lw	r1,(r30)
 1307  00001e94  90220000	lbu	r2,(r1)
 1308  00001e98  60410058	seqi	r1,r2,#88
 1309  00001e9c  1420000c	bnez	r1,L83_LF2
 1310  00001ea0  54000000	nop; delay slot nop
 1311  00001ea4  08000024	j	L82_LF2
 1312  00001ea8  54000000	nop; delay slot nop
 1313  00001eac          	L83_LF2:
 1314  00001eac  20010010	addi	r1,r0,#16
 1315  00001eb0  afc10008	sw	8(r30),r1
 1316  00001eb4  8fc20000	lw	r2,(r30)
 1317  00001eb8  20410001	addi	r1,r2,#1
 1318  00001ebc  00011020	add	r2,r0,r1
 1319  00001ec0  afc20000	sw	(r30),r2
 1320  00001ec4  0800000c	j	L84_LF2
 1321  00001ec8  54000000	nop; delay slot nop
 1322  00001ecc          	L82_LF2:
 1323  00001ecc  20010008	addi	r1,r0,#8
 1324  00001ed0  afc10008	sw	8(r30),r1
 1325  00001ed4          	L84_LF2:
 1326  00001ed4  0800000c	j	L80_LF2
 1327  00001ed8  54000000	nop; delay slot nop
 1328  00001edc          	L81_LF2:
 1329  00001edc  2001000a	addi	r1,r0,#10
 1330  00001ee0  afc10008	sw	8(r30),r1
 1331  00001ee4          	L85_LF2:
 1332  00001ee4          	L80_LF2:
 1333  00001ee4  8fc10008	lw	r1,8(r30)
 1334  00001ee8  70220000	slei	r2,r1,#0
 1335  00001eec  1440001c	bnez	r2,L87_LF2
 1336  00001ef0  54000000	nop; delay slot nop
 1337  00001ef4  8fc10008	lw	r1,8(r30)
 1338  00001ef8  6c220010	sgti	r2,r1,#16
 1339  00001efc  1440000c	bnez	r2,L87_LF2
 1340  00001f00  54000000	nop; delay slot nop
 1341  00001f04  08000010	j	L86_LF2
 1342  00001f08  54000000	nop; delay slot nop
 1343  00001f0c          	L87_LF2:
 1344  00001f0c  8fc1fff4	lw	r1,-12(r30)
 1345  00001f10  08000188	j	L72_LF2
 1346  00001f14  54000000	nop; delay slot nop
 1347  00001f18          	L86_LF2:
 1348  00001f18  54000000	nop
 1349  00001f1c          	L88_LF2:
 1350  00001f1c  8fc10000	lw	r1,(r30)
 1351  00001f20  90220000	lbu	r2,(r1)
 1352  00001f24  6c41002f	sgtui	r1,r2,#47
 1353  00001f28  10200030	beqz	r1,L91_LF2
 1354  00001f2c  54000000	nop; delay slot nop
 1355  00001f30  8fc10000	lw	r1,(r30)
 1356  00001f34  90220000	lbu	r2,(r1)
 1357  00001f38  70410039	sleui	r1,r2,#57
 1358  00001f3c  1020001c	beqz	r1,L91_LF2
 1359  00001f40  54000000	nop; delay slot nop
 1360  00001f44  8fc10000	lw	r1,(r30)
 1361  00001f48  90220000	lbu	r2,(r1)
 1362  00001f4c  2041ffd0	addi	r1,r2,#-48
 1363  00001f50  afc1fff0	sw	-16(r30),r1
 1364  00001f54  0800008c	j	L92_LF2
 1365  00001f58  54000000	nop; delay slot nop
 1366  00001f5c          	L91_LF2:
 1367  00001f5c  8fc10000	lw	r1,(r30)
 1368  00001f60  90220000	lbu	r2,(r1)
 1369  00001f64  6c410060	sgtui	r1,r2,#96
 1370  00001f68  10200030	beqz	r1,L93_LF2
 1371  00001f6c  54000000	nop; delay slot nop
 1372  00001f70  8fc10000	lw	r1,(r30)
 1373  00001f74  90220000	lbu	r2,(r1)
 1374  00001f78  7041007a	sleui	r1,r2,#122
 1375  00001f7c  1020001c	beqz	r1,L93_LF2
 1376  00001f80  54000000	nop; delay slot nop
 1377  00001f84  8fc10000	lw	r1,(r30)
 1378  00001f88  90220000	lbu	r2,(r1)
 1379  00001f8c  2041ffa9	addi	r1,r2,#-87
 1380  00001f90  afc1fff0	sw	-16(r30),r1
 1381  00001f94  0800004c	j	L92_LF2
 1382  00001f98  54000000	nop; delay slot nop
 1383  00001f9c          	L93_LF2:
 1384  00001f9c  8fc10000	lw	r1,(r30)
 1385  00001fa0  90220000	lbu	r2,(r1)
 1386  00001fa4  6c410040	sgtui	r1,r2,#64
 1387  00001fa8  10200030	beqz	r1,L95_LF2
 1388  00001fac  54000000	nop; delay slot nop
 1389  00001fb0  8fc10000	lw	r1,(r30)
 1390  00001fb4  90220000	lbu	r2,(r1)
 1391  00001fb8  7041005a	sleui	r1,r2,#90
 1392  00001fbc  1020001c	beqz	r1,L95_LF2
 1393  00001fc0  54000000	nop; delay slot nop
 1394  00001fc4  8fc10000	lw	r1,(r30)
 1395  00001fc8  90220000	lbu	r2,(r1)
 1396  00001fcc  2041ffc9	addi	r1,r2,#-55
 1397  00001fd0  afc1fff0	sw	-16(r30),r1
 1398  00001fd4  0800000c	j	L92_LF2
 1399  00001fd8  54000000	nop; delay slot nop
 1400  00001fdc          	L95_LF2:
 1401  00001fdc  200103e8	addi	r1,r0,#1000
 1402  00001fe0  afc1fff0	sw	-16(r30),r1
 1403  00001fe4          	L96_LF2:
 1404  00001fe4          	L94_LF2:
 1405  00001fe4          	L92_LF2:
 1406  00001fe4  8fc1fff0	lw	r1,-16(r30)
 1407  00001fe8  8fc20008	lw	r2,8(r30)
 1408  00001fec  0022082a	slt	r1,r1,r2
 1409  00001ff0  10200040	beqz	r1,L90_LF2
 1410  00001ff4  54000000	nop; delay slot nop
 1411  00001ff8  8fc1fff4	lw	r1,-12(r30)
 1412  00001ffc  8fc20008	lw	r2,8(r30)
 1413  00002000  00200035	movi2fp	f0,r1
 1414  00002004  00400835	movi2fp	f1,r2
 1415  00002008  0401000e	mult	f0,f0,f1
 1416  0000200c  00000834	movfp2i	r1,f0
 1417  00002010  afc1fff4	sw	-12(r30),r1
 1418  00002014  8fc1fff4	lw	r1,-12(r30)
 1419  00002018  8fc2fff0	lw	r2,-16(r30)
 1420  0000201c  00220820	add	r1,r1,r2
 1421  00002020  afc1fff4	sw	-12(r30),r1
 1422  00002024  8fc20000	lw	r2,(r30)
 1423  00002028  20410001	addi	r1,r2,#1
 1424  0000202c  00011020	add	r2,r0,r1
 1425  00002030  afc20000	sw	(r30),r2
 1426  00002034          	L97_LF2:
 1427  00002034          	L90_LF2:
 1428  00002034  8fc1fff0	lw	r1,-16(r30)
 1429  00002038  8fc20008	lw	r2,8(r30)
 1430  0000203c  0022082a	slt	r1,r1,r2
 1431  00002040  1420000c	bnez	r1,L98_LF2
 1432  00002044  54000000	nop; delay slot nop
 1433  00002048  0800000c	j	L89_LF2
 1434  0000204c  54000000	nop; delay slot nop
 1435  00002050          	L98_LF2:
 1436  00002050  0bfffec8	j	L88_LF2
 1437  00002054  54000000	nop; delay slot nop
 1438  00002058          	L89_LF2:
 1439  00002058  8fc10004	lw	r1,4(r30)
 1440  0000205c  64220000	snei	r2,r1,#0
 1441  00002060  10400010	beqz	r2,L99_LF2
 1442  00002064  54000000	nop; delay slot nop
 1443  00002068  8fc10004	lw	r1,4(r30)
 1444  0000206c  8fc20000	lw	r2,(r30)
 1445  00002070  ac220000	sw	(r1),r2
 1446  00002074          	L99_LF2:
 1447  00002074  8fc1fff4	lw	r1,-12(r30)
 1448  00002078  8fc2ffec	lw	r2,-20(r30)
 1449  0000207c  00200035	movi2fp	f0,r1
 1450  00002080  00400835	movi2fp	f1,r2
 1451  00002084  0401000e	mult	f0,f0,f1
 1452  00002088  00000834	movfp2i	r1,f0
 1453  0000208c  afc1fff4	sw	-12(r30),r1
 1454  00002090  8fc1fff4	lw	r1,-12(r30)
 1455  00002094  08000004	j	L72_LF2
 1456  00002098  54000000	nop; delay slot nop
 1457  0000209c          	L72_LF2:
 1458  0000209c  8fa20000	lw	r2,0(r29)
 1459  000020a0  8fdffff8	lw	r31,-8(r30)
 1460  000020a4  001ee820	add	r29,r0,r30
 1461  000020a8  8fdefffc	lw	r30,-4(r30)
 1462  000020ac  4be00000	jr	r31
 1463  000020b0  54000000	nop
 1464  000020b4          	.endproc _dstrtol
 1465  000020b4          	.align 2
 1466  000020b4          	.proc _bcopy
 1467  000020b4          	.global _bcopy
 1468  000020b4          	_bcopy:
 1469                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1470  000020b4  afbefffc	sw	-4(r29),r30; push fp
 1471  000020b8  001df020	add	r30,r0,r29; fp = sp
 1472  000020bc  afbffff8	sw	-8(r29),r31; push ret addr
 1473  000020c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1474  000020c4  afa20000	sw	0(r29),r2
 1475  000020c8  afa30004	sw	4(r29),r3
 1476  000020cc  54000000	nop
 1477  000020d0          	L101_LF2:
 1478  000020d0  8fc10008	lw	r1,8(r30)
 1479  000020d4  2022ffff	addi	r2,r1,#-1
 1480  000020d8  afc20008	sw	8(r30),r2
 1481  000020dc  6c210000	sgti	r1,r1,#0
 1482  000020e0  1420000c	bnez	r1,L103_LF2
 1483  000020e4  54000000	nop; delay slot nop
 1484  000020e8  0800002c	j	L102_LF2
 1485  000020ec  54000000	nop; delay slot nop
 1486  000020f0          	L103_LF2:
 1487  000020f0  8fc10004	lw	r1,4(r30)
 1488  000020f4  20220001	addi	r2,r1,#1
 1489  000020f8  afc20004	sw	4(r30),r2
 1490  000020fc  8fc20000	lw	r2,(r30)
 1491  00002100  20430001	addi	r3,r2,#1
 1492  00002104  afc30000	sw	(r30),r3
 1493  00002108  80420000	lb	r2,(r2)
 1494  0000210c  a0220000	sb	(r1),r2
 1495  00002110  0bffffbc	j	L101_LF2
 1496  00002114  54000000	nop; delay slot nop
 1497  00002118          	L102_LF2:
 1498  00002118          	L100_LF2:
 1499  00002118  8fa20000	lw	r2,0(r29)
 1500  0000211c  8fa30004	lw	r3,4(r29)
 1501  00002120  8fdffff8	lw	r31,-8(r30)
 1502  00002124  001ee820	add	r29,r0,r30
 1503  00002128  8fdefffc	lw	r30,-4(r30)
 1504  0000212c  4be00000	jr	r31
 1505  00002130  54000000	nop
 1506  00002134          	.endproc _bcopy
 1507  00002134          	.align 2
 1508  00002134          	.proc _bzero
 1509  00002134          	.global _bzero
 1510  00002134          	_bzero:
 1511                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1512  00002134  afbefffc	sw	-4(r29),r30; push fp
 1513  00002138  001df020	add	r30,r0,r29; fp = sp
 1514  0000213c  afbffff8	sw	-8(r29),r31; push ret addr
 1515  00002140  2fbd0010	subui	r29,r29,#16; alloc local storage
 1516  00002144  afa20000	sw	0(r29),r2
 1517  00002148  54000000	nop
 1518  0000214c          	L105_LF2:
 1519  0000214c  8fc10004	lw	r1,4(r30)
 1520  00002150  2022ffff	addi	r2,r1,#-1
 1521  00002154  afc20004	sw	4(r30),r2
 1522  00002158  6c210000	sgti	r1,r1,#0
 1523  0000215c  1420000c	bnez	r1,L107_LF2
 1524  00002160  54000000	nop; delay slot nop
 1525  00002164  08000020	j	L106_LF2
 1526  00002168  54000000	nop; delay slot nop
 1527  0000216c          	L107_LF2:
 1528  0000216c  8fc10000	lw	r1,(r30)
 1529  00002170  20220001	addi	r2,r1,#1
 1530  00002174  afc20000	sw	(r30),r2
 1531  00002178  20020000	addi	r2,r0,(#0x0)&0xff
 1532  0000217c  a0220000	sb	(r1),r2
 1533  00002180  0bffffc8	j	L105_LF2
 1534  00002184  54000000	nop; delay slot nop
 1535  00002188          	L106_LF2:
 1536  00002188          	L104_LF2:
 1537  00002188  8fa20000	lw	r2,0(r29)
 1538  0000218c  8fdffff8	lw	r31,-8(r30)
 1539  00002190  001ee820	add	r29,r0,r30
 1540  00002194  8fdefffc	lw	r30,-4(r30)
 1541  00002198  4be00000	jr	r31
 1542  0000219c  54000000	nop
 1543  000021a0          	.endproc _bzero
 1544  000021a0          	.align 2
 1545  000021a0          	.proc _min
 1546  000021a0          	.global _min
 1547  000021a0          	_min:
 1548                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1549  000021a0  afbefffc	sw	-4(r29),r30; push fp
 1550  000021a4  001df020	add	r30,r0,r29; fp = sp
 1551  000021a8  afbffff8	sw	-8(r29),r31; push ret addr
 1552  000021ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1553  000021b0  afa20000	sw	0(r29),r2
 1554  000021b4  afa30004	sw	4(r29),r3
 1555  000021b8  8fc10000	lw	r1,(r30)
 1556  000021bc  8fc20004	lw	r2,4(r30)
 1557  000021c0  0022182c	sle	r3,r1,r2
 1558  000021c4  14600008	bnez	r3,L109_LF2
 1559  000021c8  54000000	nop; delay slot nop
 1560  000021cc  8fc10004	lw	r1,4(r30)
 1561  000021d0          	L109_LF2:
 1562  000021d0  08000004	j	L108_LF2
 1563  000021d4  54000000	nop; delay slot nop
 1564  000021d8          	L108_LF2:
 1565  000021d8  8fa20000	lw	r2,0(r29)
 1566  000021dc  8fa30004	lw	r3,4(r29)
 1567  000021e0  8fdffff8	lw	r31,-8(r30)
 1568  000021e4  001ee820	add	r29,r0,r30
 1569  000021e8  8fdefffc	lw	r30,-4(r30)
 1570  000021ec  4be00000	jr	r31
 1571  000021f0  54000000	nop
 1572  000021f4          	.endproc _min
 1573  000021f4          	.align 2
 1574  000021f4          	.proc _max
 1575  000021f4          	.global _max
 1576  000021f4          	_max:
 1577                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1578  000021f4  afbefffc	sw	-4(r29),r30; push fp
 1579  000021f8  001df020	add	r30,r0,r29; fp = sp
 1580  000021fc  afbffff8	sw	-8(r29),r31; push ret addr
 1581  00002200  2fbd0010	subui	r29,r29,#16; alloc local storage
 1582  00002204  afa20000	sw	0(r29),r2
 1583  00002208  afa30004	sw	4(r29),r3
 1584  0000220c  8fc10000	lw	r1,(r30)
 1585  00002210  8fc20004	lw	r2,4(r30)
 1586  00002214  0022182d	sge	r3,r1,r2
 1587  00002218  14600008	bnez	r3,L111_LF2
 1588  0000221c  54000000	nop; delay slot nop
 1589  00002220  8fc10004	lw	r1,4(r30)
 1590  00002224          	L111_LF2:
 1591  00002224  08000004	j	L110_LF2
 1592  00002228  54000000	nop; delay slot nop
 1593  0000222c          	L110_LF2:
 1594  0000222c  8fa20000	lw	r2,0(r29)
 1595  00002230  8fa30004	lw	r3,4(r29)
 1596  00002234  8fdffff8	lw	r31,-8(r30)
 1597  00002238  001ee820	add	r29,r0,r30
 1598  0000223c  8fdefffc	lw	r30,-4(r30)
 1599  00002240  4be00000	jr	r31
 1600  00002244  54000000	nop
 1601  00002248          	.endproc _max
 1602                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1603                      ;;;
 1604                      ;;; Most of the traps are called in files from libtraps.
 1607  00002248          	.align 2
 1608  00002248          	.proc _exit
 1609  00002248          	.global _exit
 1610  00002248          	_exit:
 1611  00002248  44000300	trap	#0x300
 1612  0000224c  4be00000	jr	r31
 1613  00002250  54000000	nop
 1614  00002254          	.endproc _exit
 1616                      ; for the benefit of gcc.
 1617  00002254          	.proc ___main
 1618  00002254          	.global ___main
 1619  00002254          	___main:
 1620  00002254  4be00000	jr	r31
 1621  00002258  54000000	nop
 1622  0000225c          	.endproc ___main
 1623  0000225c          	.text
 1624  0000225c          	.global _etext
 1625  0000225c          	_etext:
 1626  0000225c          	.align 3
 1627  00002260          	.data
 1628  000030b0          	.global _edata
 1629  000030b0          	_edata:
