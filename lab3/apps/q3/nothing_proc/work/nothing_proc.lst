 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 134
    4                      ; Text size: 4428
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  496e636f	.ascii "Incorrect number of arguments (%d) for %s\n\000"
   82  00003004  72726563	
   82  00003008  74206e75	
   82  0000300c  6d626572	
   82  00003010  206f6620	
   82  00003014  61726775	
   82  00003018  6d656e74	
   82  0000301c  73202825	
   82  00003020  64292066	
   82  00003024  6f722025	
   82  00003028  730a00  	
   83  0000302b          	.align 2
   84  0000302c          	LC1_LF0:
   85  0000302c  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
   85  00003030  73656d61	
   85  00003034  70686f72	
   85  00003038  65207365	
   85  0000303c  6d5f7072	
   85  00003040  6f63735f	
   85  00003044  636f6d70	
   85  00003048  6c657465	
   85  0000304c  64202825	
   85  00003050  64292069	
   85  00003054  6e2000  	
   86  00003057          	.align 2
   87  00003058          	LC2_LF0:
   88  00003058  2c206578	.ascii ", exiting...\n\000"
   88  0000305c  6974696e	
   88  00003060  672e2e2e	
   88  00003064  0a00    	
   89  00003066          	.align 2
   90  00003068          	LC3_LF0:
   91  00003068  45786974	.ascii "Exiting proc with wait of %d\n\000"
   91  0000306c  696e6720	
   91  00003070  70726f63	
   91  00003074  20776974	
   91  00003078  68207761	
   91  0000307c  6974206f	
   91  00003080  66202564	
   91  00003084  0a00    	
   92  00003086          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc50004	lw	r5,4(r30)
  104  000010ec  0c001054	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410003	snei	r1,r2,#3
  107  000010f8  10200034	beqz	r1,L14_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff0	addi	r29,r29,#-16
  110  00001104  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  111  00001108  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  112  0000110c  afa60000	sw	(r29),r6
  113  00001110  afa20004	sw	4(r29),r2
  114  00001114  8ca60000	lw	r6,(r5)
  115  00001118  afa60008	sw	8(r29),r6
  116  0000111c  0c000174	jal	_Printf
  117  00001120  54000000	nop; not filled.
  118  00001124  0c000274	jal	_Exit
  119  00001128  54000000	nop; not filled.
  120  0000112c  23bd0010	addi	r29,r29,#16
  121  00001130          	L14_LF0:
  122  00001130  23bdfff0	addi	r29,r29,#-16
  123  00001134  8ca60004	lw	r6,4(r5)
  124  00001138  afa60000	sw	(r29),r6
  125  0000113c  20060000	addi	r6,r0,#0
  126  00001140  afa60004	sw	4(r29),r6
  127  00001144  2006000a	addi	r6,r0,#10
  128  00001148  afa60008	sw	8(r29),r6
  129  0000114c  0c000af8	jal	_dstrtol
  130  00001150  54000000	nop; not filled.
  131  00001154  00012020	add	r4,r0,r1
  132  00001158  8ca60008	lw	r6,8(r5)
  133  0000115c  afa60000	sw	(r29),r6
  134  00001160  20060000	addi	r6,r0,#0
  135  00001164  afa60004	sw	4(r29),r6
  136  00001168  2006000a	addi	r6,r0,#10
  137  0000116c  afa60008	sw	8(r29),r6
  138  00001170  0c000ad4	jal	_dstrtol
  139  00001174  54000000	nop; not filled.
  140  00001178  00011820	add	r3,r0,r1
  141  0000117c  20020000	addi	r2,r0,#0
  142  00001180  23bd0010	addi	r29,r29,#16
  143  00001184  0043082a	slt	r1,r2,r3
  144  00001188  10200028	beqz	r1,L16_LF0
  145  0000118c  54000000	nop; not filled.
  146  00001190          	L18_LF0:
  147  00001190  201f0000	addi	r31,r0,#0
  148  00001194          	L22_LF0:
  149  00001194  23ff0001	addi	r31,r31,#1
  150  00001198  73e10063	slei	r1,r31,#99
  151  0000119c  1420fff4	bnez	r1,L22_LF0
  152  000011a0  54000000	nop; not filled.
  153  000011a4  20420001	addi	r2,r2,#1
  154  000011a8  0043082a	slt	r1,r2,r3
  155  000011ac  1420ffe0	bnez	r1,L18_LF0
  156  000011b0  54000000	nop; not filled.
  157  000011b4          	L16_LF0:
  158  000011b4  23bdfff8	addi	r29,r29,#-8
  159  000011b8  afa40000	sw	(r29),r4
  160  000011bc  0c000128	jal	_sem_signal
  161  000011c0  54000000	nop; not filled.
  162  000011c4  23bd0008	addi	r29,r29,#8
  163  000011c8  64210001	snei	r1,r1,#1
  164  000011cc  10200050	beqz	r1,L25_LF0
  165  000011d0  54000000	nop; not filled.
  166  000011d4  23bdfff8	addi	r29,r29,#-8
  167  000011d8  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  168  000011dc  24c6302c	addui	r6,r6,(LC1_LF0)&0xffff
  169  000011e0  afa60000	sw	(r29),r6
  170  000011e4  afa40004	sw	4(r29),r4
  171  000011e8  0c0000a8	jal	_Printf
  172  000011ec  54000000	nop; not filled.
  173  000011f0  8ca50000	lw	r5,(r5)
  174  000011f4  afa50000	sw	(r29),r5
  175  000011f8  0c000098	jal	_Printf
  176  000011fc  54000000	nop; not filled.
  177  00001200  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  178  00001204  24c63058	addui	r6,r6,(LC2_LF0)&0xffff
  179  00001208  afa60000	sw	(r29),r6
  180  0000120c  0c000084	jal	_Printf
  181  00001210  54000000	nop; not filled.
  182  00001214  0c000184	jal	_Exit
  183  00001218  54000000	nop; not filled.
  184  0000121c  23bd0008	addi	r29,r29,#8
  185  00001220          	L25_LF0:
  186  00001220  23bdfff8	addi	r29,r29,#-8
  187  00001224  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  188  00001228  24c63068	addui	r6,r6,(LC3_LF0)&0xffff
  189  0000122c  afa60000	sw	(r29),r6
  190  00001230  afa30004	sw	4(r29),r3
  191  00001234  0c00005c	jal	_Printf
  192  00001238  54000000	nop; not filled.
  193  0000123c  20010000	addi	r1,r0,#0
  194  00001240  23bd0008	addi	r29,r29,#8
  195  00001244  0c000ef0	jal	_exit
  196  00001248  54000000	nop
  197  0000124c          	.endproc _main
  198                      ;;;
  199                      ;;; Stub functions for DLX traps.
  200                      ;;;
  201                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  202                      ;;;
  203                      ;;; The traps such as Open and Close
  204                      ;;; (note the capital letters) are for use by user programs.  The traps
  205                      ;;; with names such as open and close (lower case) are for use by the OS.
  206                      ;;;
  209  0000124c          	.align 2
  211                      ;;; The following are the traps to be used by user-level programs
  212                      ;;;
  214  0000124c          	.align 2
  215  0000124c          	.proc _Open
  216  0000124c          	.global _Open
  217  0000124c          	_Open:
  218                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  219                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  220                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  221  0000124c  44000213	trap	#0x213
  222  00001250  4be00000	jr	r31
  223  00001254  54000000	nop
  224  00001258          	.endproc _Open
  226  00001258          	.proc _Close
  227  00001258          	.global _Close
  228  00001258          	_Close:
  229  00001258  44000214	trap	#0x214
  230  0000125c  4be00000	jr	r31
  231  00001260  54000000	nop
  232  00001264          	.endproc _Close
  234  00001264          	.proc _Read
  235  00001264          	.global _Read
  236  00001264          	_Read:
  237  00001264  44000210	trap	#0x210
  238  00001268  4be00000	jr	r31
  239  0000126c  54000000	nop
  240  00001270          	.endproc _Read
  242  00001270          	.proc _Write
  243  00001270          	.global _Write
  244  00001270          	_Write:
  245  00001270  44000211	trap	#0x211
  246  00001274  4be00000	jr	r31
  247  00001278  54000000	nop
  248  0000127c          	.endproc _Write
  250  0000127c          	.proc _Lseek
  251  0000127c          	.global _Lseek
  252  0000127c          	_Lseek:
  253  0000127c  44000212	trap	#0x212
  254  00001280  4be00000	jr	r31
  255  00001284  54000000	nop
  256  00001288          	.endproc _Lseek
  258  00001288          	.proc _Putchar
  259  00001288          	.global _Putchar
  260  00001288          	_Putchar:
  261  00001288  44000280	trap	#0x280
  262  0000128c  4be00000	jr	r31
  263  00001290  54000000	nop
  264  00001294          	.endproc _Putchar
  266  00001294          	.proc _Printf
  267  00001294          	.global _Printf
  268  00001294          	_Printf:
  269  00001294  44000201	trap	#0x201
  270  00001298  4be00000	jr	r31
  271  0000129c  54000000	nop
  272  000012a0          	.endproc _Printf
  274  000012a0          	.proc _getpid
  275  000012a0          	.global _getpid
  276  000012a0          	_getpid:
  277  000012a0  44000431	trap	#0x431
  278  000012a4  4be00000	jr	r31
  279  000012a8  54000000	nop
  280  000012ac          	.endproc _getpid
  282  000012ac          	.proc _process_create
  283  000012ac          	.global _process_create
  284  000012ac          	_process_create:
  285  000012ac  44000432	trap	#0x432
  286  000012b0  4be00000	jr	r31
  287  000012b4  54000000	nop
  288  000012b8          	.endproc _process_create
  290  000012b8          	.proc _shmget
  291  000012b8          	.global _shmget
  292  000012b8          	_shmget:
  293  000012b8  44000440	trap	#0x440
  294  000012bc  4be00000	jr	r31
  295  000012c0  54000000	nop
  296  000012c4          	.endproc _shmget
  298  000012c4          	.proc _shmat
  299  000012c4          	.global _shmat
  300  000012c4          	_shmat:
  301  000012c4  44000441	trap	#0x441
  302  000012c8  4be00000	jr	r31
  303  000012cc  54000000	nop
  304  000012d0          	.endproc _shmat
  306  000012d0          	.proc _sem_create
  307  000012d0          	.global _sem_create
  308  000012d0          	_sem_create:
  309  000012d0  44000450	trap	#0x450
  310  000012d4  4be00000	jr	r31
  311  000012d8  54000000	nop
  312  000012dc          	.endproc _sem_create
  314  000012dc          	.proc _sem_wait
  315  000012dc          	.global _sem_wait
  316  000012dc          	_sem_wait:
  317  000012dc  44000451	trap	#0x451
  318  000012e0  4be00000	jr	r31
  319  000012e4  54000000	nop
  320  000012e8          	.endproc _sem_wait
  322  000012e8          	.proc _sem_signal
  323  000012e8          	.global _sem_signal
  324  000012e8          	_sem_signal:
  325  000012e8  44000452	trap	#0x452
  326  000012ec  4be00000	jr	r31
  327  000012f0  54000000	nop
  328  000012f4          	.endproc _sem_signal
  330  000012f4          	.proc _lock_create
  331  000012f4          	.global _lock_create
  332  000012f4          	_lock_create:
  333  000012f4  44000453	trap	#0x453
  334  000012f8  4be00000	jr	r31
  335  000012fc  54000000	nop
  336  00001300          	.endproc _lock_create
  338  00001300          	.proc _lock_acquire
  339  00001300          	.global _lock_acquire
  340  00001300          	_lock_acquire:
  341  00001300  44000454	trap	#0x454
  342  00001304  4be00000	jr	r31
  343  00001308  54000000	nop
  344  0000130c          	.endproc _lock_acquire
  346  0000130c          	.proc _lock_release
  347  0000130c          	.global _lock_release
  348  0000130c          	_lock_release:
  349  0000130c  44000455	trap	#0x455
  350  00001310  4be00000	jr	r31
  351  00001314  54000000	nop
  352  00001318          	.endproc _lock_release
  354  00001318          	.proc _cond_create
  355  00001318          	.global _cond_create
  356  00001318          	_cond_create:
  357  00001318  44000456	trap	#0x456
  358  0000131c  4be00000	jr	r31
  359  00001320  54000000	nop
  360  00001324          	.endproc _cond_create
  362  00001324          	.proc _cond_wait
  363  00001324          	.global _cond_wait
  364  00001324          	_cond_wait:
  365  00001324  44000457	trap	#0x457
  366  00001328  4be00000	jr	r31
  367  0000132c  54000000	nop
  368  00001330          	.endproc _cond_wait
  370  00001330          	.proc _cond_signal
  371  00001330          	.global _cond_signal
  372  00001330          	_cond_signal:
  373  00001330  44000458	trap	#0x458
  374  00001334  4be00000	jr	r31
  375  00001338  54000000	nop
  376  0000133c          	.endproc _cond_signal
  378  0000133c          	.proc _cond_broadcast
  379  0000133c          	.global _cond_broadcast
  380  0000133c          	_cond_broadcast:
  381  0000133c  44000459	trap	#0x459
  382  00001340  4be00000	jr	r31
  383  00001344  54000000	nop
  384  00001348          	.endproc _cond_broadcast
  386  00001348          	.proc _mbox_create
  387  00001348          	.global _mbox_create
  388  00001348          	_mbox_create:
  389  00001348  44000460	trap	#0x460
  390  0000134c  4be00000	jr	r31
  391  00001350  54000000	nop
  392  00001354          	.endproc _mbox_create
  394  00001354          	.proc _mbox_open
  395  00001354          	.global _mbox_open
  396  00001354          	_mbox_open:
  397  00001354  44000461	trap	#0x461
  398  00001358  4be00000	jr	r31
  399  0000135c  54000000	nop
  400  00001360          	.endproc _mbox_open
  402  00001360          	.proc _mbox_close
  403  00001360          	.global _mbox_close
  404  00001360          	_mbox_close:
  405  00001360  44000462	trap	#0x462
  406  00001364  4be00000	jr	r31
  407  00001368  54000000	nop
  408  0000136c          	.endproc _mbox_close
  410  0000136c          	.proc _mbox_send
  411  0000136c          	.global _mbox_send
  412  0000136c          	_mbox_send:
  413  0000136c  44000463	trap	#0x463
  414  00001370  4be00000	jr	r31
  415  00001374  54000000	nop
  416  00001378          	.endproc _mbox_send
  418  00001378          	.proc _mbox_recv
  419  00001378          	.global _mbox_recv
  420  00001378          	_mbox_recv:
  421  00001378  44000464	trap	#0x464
  422  0000137c  4be00000	jr	r31
  423  00001380  54000000	nop
  424  00001384          	.endproc _mbox_recv
  426  00001384          	.proc _sleep
  427  00001384          	.global _sleep
  428  00001384          	_sleep:
  429  00001384  44000465	trap	#0x465
  430  00001388  4be00000	jr	r31
  431  0000138c  54000000	nop
  432  00001390          	.endproc _sleep
  434  00001390          	.proc _yield
  435  00001390          	.global _yield
  436  00001390          	_yield:
  437  00001390  44000466	trap	#0x466
  438  00001394  4be00000	jr	r31
  439  00001398  54000000	nop
  440  0000139c          	.endproc _yield
  443  0000139c          	.proc _Exit
  444  0000139c          	.global _Exit
  445  0000139c          	_Exit:
  446  0000139c  44000500	trap	#0x500
  447  000013a0  4be00000	jr	r31
  448  000013a4  54000000	nop
  449  000013a8          	.endproc _Exit
  450                      ; Compiled by GCC
  452  000013a8          	.align 2
  453  000013a8          	.proc _isspace
  454  000013a8          	.global _isspace
  455  000013a8          	_isspace:
  456                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  457  000013a8  afbefffc	sw	-4(r29),r30; push fp
  458  000013ac  001df020	add	r30,r0,r29; fp = sp
  459  000013b0  afbffff8	sw	-8(r29),r31; push ret addr
  460  000013b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  461  000013b8  afa20000	sw	0(r29),r2
  462  000013bc  afa30004	sw	4(r29),r3
  463  000013c0  afa40008	sw	8(r29),r4
  464  000013c4  83c20003	lb	r2,3(r30)
  465  000013c8  20010000	addi	r1,r0,#0
  466  000013cc  304300ff	andi	r3,r2,#0x00ff
  467  000013d0  60640020	seqi	r4,r3,#32
  468  000013d4  1480002c	bnez	r4,L3_LF2
  469  000013d8  54000000	nop; delay slot nop
  470  000013dc  304300ff	andi	r3,r2,#0x00ff
  471  000013e0  60640009	seqi	r4,r3,#9
  472  000013e4  1480001c	bnez	r4,L3_LF2
  473  000013e8  54000000	nop; delay slot nop
  474  000013ec  304300ff	andi	r3,r2,#0x00ff
  475  000013f0  6064000a	seqi	r4,r3,#10
  476  000013f4  1480000c	bnez	r4,L3_LF2
  477  000013f8  54000000	nop; delay slot nop
  478  000013fc  08000008	j	L2_LF2
  479  00001400  54000000	nop; delay slot nop
  480  00001404          	L3_LF2:
  481  00001404  20010001	addi	r1,r0,#1
  482  00001408          	L2_LF2:
  483  00001408  08000004	j	L1_LF2
  484  0000140c  54000000	nop; delay slot nop
  485  00001410          	L1_LF2:
  486  00001410  8fa20000	lw	r2,0(r29)
  487  00001414  8fa30004	lw	r3,4(r29)
  488  00001418  8fa40008	lw	r4,8(r29)
  489  0000141c  8fdffff8	lw	r31,-8(r30)
  490  00001420  001ee820	add	r29,r0,r30
  491  00001424  8fdefffc	lw	r30,-4(r30)
  492  00001428  4be00000	jr	r31
  493  0000142c  54000000	nop
  494  00001430          	.endproc _isspace
  495  00001430          	.align 2
  496  00001430          	.proc _isxdigit
  497  00001430          	.global _isxdigit
  498  00001430          	_isxdigit:
  499                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  500  00001430  afbefffc	sw	-4(r29),r30; push fp
  501  00001434  001df020	add	r30,r0,r29; fp = sp
  502  00001438  afbffff8	sw	-8(r29),r31; push ret addr
  503  0000143c  2fbd0018	subui	r29,r29,#24; alloc local storage
  504  00001440  afa20000	sw	0(r29),r2
  505  00001444  afa30004	sw	4(r29),r3
  506  00001448  afa40008	sw	8(r29),r4
  507  0000144c  83c20003	lb	r2,3(r30)
  508  00001450  20010000	addi	r1,r0,#0
  509  00001454  304300ff	andi	r3,r2,#0x00ff
  510  00001458  6c64002f	sgtui	r4,r3,#47
  511  0000145c  1080001c	beqz	r4,L7_LF2
  512  00001460  54000000	nop; delay slot nop
  513  00001464  304300ff	andi	r3,r2,#0x00ff
  514  00001468  70640039	sleui	r4,r3,#57
  515  0000146c  1480005c	bnez	r4,L6_LF2
  516  00001470  54000000	nop; delay slot nop
  517  00001474  08000004	j	L7_LF2
  518  00001478  54000000	nop; delay slot nop
  519  0000147c          	L7_LF2:
  520  0000147c  304300ff	andi	r3,r2,#0x00ff
  521  00001480  6c640060	sgtui	r4,r3,#96
  522  00001484  1080001c	beqz	r4,L8_LF2
  523  00001488  54000000	nop; delay slot nop
  524  0000148c  304300ff	andi	r3,r2,#0x00ff
  525  00001490  70640066	sleui	r4,r3,#102
  526  00001494  14800034	bnez	r4,L6_LF2
  527  00001498  54000000	nop; delay slot nop
  528  0000149c  08000004	j	L8_LF2
  529  000014a0  54000000	nop; delay slot nop
  530  000014a4          	L8_LF2:
  531  000014a4  304300ff	andi	r3,r2,#0x00ff
  532  000014a8  6c640040	sgtui	r4,r3,#64
  533  000014ac  10800020	beqz	r4,L5_LF2
  534  000014b0  54000000	nop; delay slot nop
  535  000014b4  304300ff	andi	r3,r2,#0x00ff
  536  000014b8  70640041	sleui	r4,r3,#65
  537  000014bc  1480000c	bnez	r4,L6_LF2
  538  000014c0  54000000	nop; delay slot nop
  539  000014c4  08000008	j	L5_LF2
  540  000014c8  54000000	nop; delay slot nop
  541  000014cc          	L6_LF2:
  542  000014cc  20010001	addi	r1,r0,#1
  543  000014d0          	L5_LF2:
  544  000014d0  08000004	j	L4_LF2
  545  000014d4  54000000	nop; delay slot nop
  546  000014d8          	L4_LF2:
  547  000014d8  8fa20000	lw	r2,0(r29)
  548  000014dc  8fa30004	lw	r3,4(r29)
  549  000014e0  8fa40008	lw	r4,8(r29)
  550  000014e4  8fdffff8	lw	r31,-8(r30)
  551  000014e8  001ee820	add	r29,r0,r30
  552  000014ec  8fdefffc	lw	r30,-4(r30)
  553  000014f0  4be00000	jr	r31
  554  000014f4  54000000	nop
  555  000014f8          	.endproc _isxdigit
  556  000014f8          	.align 2
  557  000014f8          	.proc _dstrcpy
  558  000014f8          	.global _dstrcpy
  559  000014f8          	_dstrcpy:
  560                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  561  000014f8  afbefffc	sw	-4(r29),r30; push fp
  562  000014fc  001df020	add	r30,r0,r29; fp = sp
  563  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  564  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  565  00001508  afa20000	sw	0(r29),r2
  566  0000150c  afa30004	sw	4(r29),r3
  567  00001510  8fc10000	lw	r1,(r30)
  568  00001514  afc1fff4	sw	-12(r30),r1
  569  00001518          	L10_LF2:
  570  00001518  8fc10000	lw	r1,(r30)
  571  0000151c  20220001	addi	r2,r1,#1
  572  00001520  afc20000	sw	(r30),r2
  573  00001524  8fc20004	lw	r2,4(r30)
  574  00001528  20430001	addi	r3,r2,#1
  575  0000152c  afc30004	sw	4(r30),r3
  576  00001530  80420000	lb	r2,(r2)
  577  00001534  a0220000	sb	(r1),r2
  578  00001538  a3c2fff3	sb	-13(r30),r2
  579  0000153c          	L12_LF2:
  580  0000153c  93c1fff3	lbu	r1,-13(r30)
  581  00001540  64220000	snei	r2,r1,#0
  582  00001544  1440000c	bnez	r2,L13_LF2
  583  00001548  54000000	nop; delay slot nop
  584  0000154c  0800000c	j	L11_LF2
  585  00001550  54000000	nop; delay slot nop
  586  00001554          	L13_LF2:
  587  00001554  0bffffc0	j	L10_LF2
  588  00001558  54000000	nop; delay slot nop
  589  0000155c          	L11_LF2:
  590  0000155c  8fc1fff4	lw	r1,-12(r30)
  591  00001560  08000004	j	L9_LF2
  592  00001564  54000000	nop; delay slot nop
  593  00001568          	L9_LF2:
  594  00001568  8fa20000	lw	r2,0(r29)
  595  0000156c  8fa30004	lw	r3,4(r29)
  596  00001570  8fdffff8	lw	r31,-8(r30)
  597  00001574  001ee820	add	r29,r0,r30
  598  00001578  8fdefffc	lw	r30,-4(r30)
  599  0000157c  4be00000	jr	r31
  600  00001580  54000000	nop
  601  00001584          	.endproc _dstrcpy
  602  00001584          	.align 2
  603  00001584          	.proc _dstrncpy
  604  00001584          	.global _dstrncpy
  605  00001584          	_dstrncpy:
  606                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  607  00001584  afbefffc	sw	-4(r29),r30; push fp
  608  00001588  001df020	add	r30,r0,r29; fp = sp
  609  0000158c  afbffff8	sw	-8(r29),r31; push ret addr
  610  00001590  2fbd0018	subui	r29,r29,#24; alloc local storage
  611  00001594  afa20000	sw	0(r29),r2
  612  00001598  afa30004	sw	4(r29),r3
  613  0000159c  8fc10000	lw	r1,(r30)
  614  000015a0  afc1fff4	sw	-12(r30),r1
  615  000015a4          	L15_LF2:
  616  000015a4  8fc10008	lw	r1,8(r30)
  617  000015a8  2022ffff	addi	r2,r1,#-1
  618  000015ac  afc20008	sw	8(r30),r2
  619  000015b0  70210000	slei	r1,r1,#0
  620  000015b4  1020000c	beqz	r1,L18_LF2
  621  000015b8  54000000	nop; delay slot nop
  622  000015bc  08000048	j	L16_LF2
  623  000015c0  54000000	nop; delay slot nop
  624  000015c4          	L18_LF2:
  625  000015c4  8fc10000	lw	r1,(r30)
  626  000015c8  20220001	addi	r2,r1,#1
  627  000015cc  afc20000	sw	(r30),r2
  628  000015d0  8fc20004	lw	r2,4(r30)
  629  000015d4  20430001	addi	r3,r2,#1
  630  000015d8  afc30004	sw	4(r30),r3
  631  000015dc  80420000	lb	r2,(r2)
  632  000015e0  a0220000	sb	(r1),r2
  633  000015e4  a3c2fff3	sb	-13(r30),r2
  634  000015e8          	L17_LF2:
  635  000015e8  93c1fff3	lbu	r1,-13(r30)
  636  000015ec  64220000	snei	r2,r1,#0
  637  000015f0  1440000c	bnez	r2,L19_LF2
  638  000015f4  54000000	nop; delay slot nop
  639  000015f8  0800000c	j	L16_LF2
  640  000015fc  54000000	nop; delay slot nop
  641  00001600          	L19_LF2:
  642  00001600  0bffffa0	j	L15_LF2
  643  00001604  54000000	nop; delay slot nop
  644  00001608          	L16_LF2:
  645  00001608  8fc1fff4	lw	r1,-12(r30)
  646  0000160c  08000004	j	L14_LF2
  647  00001610  54000000	nop; delay slot nop
  648  00001614          	L14_LF2:
  649  00001614  8fa20000	lw	r2,0(r29)
  650  00001618  8fa30004	lw	r3,4(r29)
  651  0000161c  8fdffff8	lw	r31,-8(r30)
  652  00001620  001ee820	add	r29,r0,r30
  653  00001624  8fdefffc	lw	r30,-4(r30)
  654  00001628  4be00000	jr	r31
  655  0000162c  54000000	nop
  656  00001630          	.endproc _dstrncpy
  657  00001630          	.align 2
  658  00001630          	.proc _dstrcat
  659  00001630          	.global _dstrcat
  660  00001630          	_dstrcat:
  661                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  662  00001630  afbefffc	sw	-4(r29),r30; push fp
  663  00001634  001df020	add	r30,r0,r29; fp = sp
  664  00001638  afbffff8	sw	-8(r29),r31; push ret addr
  665  0000163c  2fbd0018	subui	r29,r29,#24; alloc local storage
  666  00001640  afa20000	sw	0(r29),r2
  667  00001644  8fc10000	lw	r1,(r30)
  668  00001648  afc1fff4	sw	-12(r30),r1
  669  0000164c          	L21_LF2:
  670  0000164c  8fc10000	lw	r1,(r30)
  671  00001650  90220000	lbu	r2,(r1)
  672  00001654  64410000	snei	r1,r2,#0
  673  00001658  1420000c	bnez	r1,L23_LF2
  674  0000165c  54000000	nop; delay slot nop
  675  00001660  0800001c	j	L22_LF2
  676  00001664  54000000	nop; delay slot nop
  677  00001668          	L23_LF2:
  678  00001668  8fc20000	lw	r2,(r30)
  679  0000166c  20410001	addi	r1,r2,#1
  680  00001670  00011020	add	r2,r0,r1
  681  00001674  afc20000	sw	(r30),r2
  682  00001678  0bffffd0	j	L21_LF2
  683  0000167c  54000000	nop; delay slot nop
  684  00001680          	L22_LF2:
  685  00001680  23bdfff8	addi	r29,r29,#-8
  686  00001684  001d0820	add	r1,r0,r29
  687  00001688  8fc20000	lw	r2,(r30)
  688  0000168c  ac220000	sw	(r1),r2
  689  00001690  8fc20004	lw	r2,4(r30)
  690  00001694  ac220004	sw	4(r1),r2
  691  00001698  0ffffe5c	jal	_dstrcpy
  692  0000169c  54000000	nop; delay slot nop
  693  000016a0  23bd0008	addi	r29,r29,#8
  694  000016a4  8fc1fff4	lw	r1,-12(r30)
  695  000016a8  08000004	j	L20_LF2
  696  000016ac  54000000	nop; delay slot nop
  697  000016b0          	L20_LF2:
  698  000016b0  8fa20000	lw	r2,0(r29)
  699  000016b4  8fdffff8	lw	r31,-8(r30)
  700  000016b8  001ee820	add	r29,r0,r30
  701  000016bc  8fdefffc	lw	r30,-4(r30)
  702  000016c0  4be00000	jr	r31
  703  000016c4  54000000	nop
  704  000016c8          	.endproc _dstrcat
  705  000016c8          	.align 2
  706  000016c8          	.proc _dstrncmp
  707  000016c8          	.global _dstrncmp
  708  000016c8          	_dstrncmp:
  709                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  710  000016c8  afbefffc	sw	-4(r29),r30; push fp
  711  000016cc  001df020	add	r30,r0,r29; fp = sp
  712  000016d0  afbffff8	sw	-8(r29),r31; push ret addr
  713  000016d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  714  000016d8  afa20000	sw	0(r29),r2
  715  000016dc  afa30004	sw	4(r29),r3
  716  000016e0  54000000	nop
  717  000016e4  20010000	addi	r1,r0,#0
  718  000016e8  afc1fff4	sw	-12(r30),r1
  719  000016ec          	L25_LF2:
  720  000016ec  8fc1fff4	lw	r1,-12(r30)
  721  000016f0  8fc20008	lw	r2,8(r30)
  722  000016f4  0022082a	slt	r1,r1,r2
  723  000016f8  1420000c	bnez	r1,L28_LF2
  724  000016fc  54000000	nop; delay slot nop
  725  00001700  08000088	j	L26_LF2
  726  00001704  54000000	nop; delay slot nop
  727  00001708          	L28_LF2:
  728  00001708  8fc10004	lw	r1,4(r30)
  729  0000170c  90220000	lbu	r2,(r1)
  730  00001710  64410000	snei	r1,r2,#0
  731  00001714  14200018	bnez	r1,L29_LF2
  732  00001718  54000000	nop; delay slot nop
  733  0000171c  20010000	addi	r1,r0,#0
  734  00001720  080000d8	j	L24_LF2
  735  00001724  54000000	nop; delay slot nop
  736  00001728  08000028	j	L30_LF2
  737  0000172c  54000000	nop; delay slot nop
  738  00001730          	L29_LF2:
  739  00001730  8fc10000	lw	r1,(r30)
  740  00001734  8fc20004	lw	r2,4(r30)
  741  00001738  90210000	lbu	r1,(r1)
  742  0000173c  90420000	lbu	r2,(r2)
  743  00001740  00220829	sne	r1,r1,r2
  744  00001744  1020000c	beqz	r1,L30_LF2
  745  00001748  54000000	nop; delay slot nop
  746  0000174c  0800003c	j	L26_LF2
  747  00001750  54000000	nop; delay slot nop
  748  00001754          	L31_LF2:
  749  00001754          	L30_LF2:
  750  00001754  8fc20000	lw	r2,(r30)
  751  00001758  20410001	addi	r1,r2,#1
  752  0000175c  00011020	add	r2,r0,r1
  753  00001760  afc20000	sw	(r30),r2
  754  00001764  8fc20004	lw	r2,4(r30)
  755  00001768  20410001	addi	r1,r2,#1
  756  0000176c  00011020	add	r2,r0,r1
  757  00001770  afc20004	sw	4(r30),r2
  758  00001774          	L27_LF2:
  759  00001774  8fc2fff4	lw	r2,-12(r30)
  760  00001778  20410001	addi	r1,r2,#1
  761  0000177c  00011020	add	r2,r0,r1
  762  00001780  afc2fff4	sw	-12(r30),r2
  763  00001784  0bffff64	j	L25_LF2
  764  00001788  54000000	nop; delay slot nop
  765  0000178c          	L26_LF2:
  766  0000178c  8fc1fff4	lw	r1,-12(r30)
  767  00001790  8fc20008	lw	r2,8(r30)
  768  00001794  00220828	seq	r1,r1,r2
  769  00001798  10200018	beqz	r1,L32_LF2
  770  0000179c  54000000	nop; delay slot nop
  771  000017a0  20010000	addi	r1,r0,#0
  772  000017a4  08000054	j	L24_LF2
  773  000017a8  54000000	nop; delay slot nop
  774  000017ac  0800004c	j	L33_LF2
  775  000017b0  54000000	nop; delay slot nop
  776  000017b4          	L32_LF2:
  777  000017b4  8fc20000	lw	r2,(r30)
  778  000017b8  90410000	lbu	r1,(r2)
  779  000017bc  8fc20004	lw	r2,4(r30)
  780  000017c0  90430000	lbu	r3,(r2)
  781  000017c4  00230822	sub	r1,r1,r3
  782  000017c8  74220000	sgei	r2,r1,#0
  783  000017cc  10400020	beqz	r2,L34_LF2
  784  000017d0  54000000	nop; delay slot nop
  785  000017d4  8fc10000	lw	r1,(r30)
  786  000017d8  8fc20004	lw	r2,4(r30)
  787  000017dc  90210000	lbu	r1,(r1)
  788  000017e0  90420000	lbu	r2,(r2)
  789  000017e4  00220829	sne	r1,r1,r2
  790  000017e8  08000008	j	L35_LF2
  791  000017ec  54000000	nop; delay slot nop
  792  000017f0          	L34_LF2:
  793  000017f0  2001ffff	addi	r1,r0,#-1
  794  000017f4          	L35_LF2:
  795  000017f4  08000004	j	L24_LF2
  796  000017f8  54000000	nop; delay slot nop
  797  000017fc          	L33_LF2:
  798  000017fc          	L24_LF2:
  799  000017fc  8fa20000	lw	r2,0(r29)
  800  00001800  8fa30004	lw	r3,4(r29)
  801  00001804  8fdffff8	lw	r31,-8(r30)
  802  00001808  001ee820	add	r29,r0,r30
  803  0000180c  8fdefffc	lw	r30,-4(r30)
  804  00001810  4be00000	jr	r31
  805  00001814  54000000	nop
  806  00001818          	.endproc _dstrncmp
  807  00001818          	.align 2
  808  00001818          	.proc _dstrlen
  809  00001818          	.global _dstrlen
  810  00001818          	_dstrlen:
  811                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  812  00001818  afbefffc	sw	-4(r29),r30; push fp
  813  0000181c  001df020	add	r30,r0,r29; fp = sp
  814  00001820  afbffff8	sw	-8(r29),r31; push ret addr
  815  00001824  2fbd0018	subui	r29,r29,#24; alloc local storage
  816  00001828  afa20000	sw	0(r29),r2
  817  0000182c  20010000	addi	r1,r0,#0
  818  00001830  afc1fff4	sw	-12(r30),r1
  819  00001834          	L37_LF2:
  820  00001834  8fc10000	lw	r1,(r30)
  821  00001838  20220001	addi	r2,r1,#1
  822  0000183c  afc20000	sw	(r30),r2
  823  00001840  90210000	lbu	r1,(r1)
  824  00001844  64220000	snei	r2,r1,#0
  825  00001848  1440000c	bnez	r2,L39_LF2
  826  0000184c  54000000	nop; delay slot nop
  827  00001850  0800001c	j	L38_LF2
  828  00001854  54000000	nop; delay slot nop
  829  00001858          	L39_LF2:
  830  00001858  8fc2fff4	lw	r2,-12(r30)
  831  0000185c  20410001	addi	r1,r2,#1
  832  00001860  00011020	add	r2,r0,r1
  833  00001864  afc2fff4	sw	-12(r30),r2
  834  00001868  0bffffc8	j	L37_LF2
  835  0000186c  54000000	nop; delay slot nop
  836  00001870          	L38_LF2:
  837  00001870  8fc1fff4	lw	r1,-12(r30)
  838  00001874  08000004	j	L36_LF2
  839  00001878  54000000	nop; delay slot nop
  840  0000187c          	L36_LF2:
  841  0000187c  8fa20000	lw	r2,0(r29)
  842  00001880  8fdffff8	lw	r31,-8(r30)
  843  00001884  001ee820	add	r29,r0,r30
  844  00001888  8fdefffc	lw	r30,-4(r30)
  845  0000188c  4be00000	jr	r31
  846  00001890  54000000	nop
  847  00001894          	.endproc _dstrlen
  848  00001894          	.align 2
  849  00001894          	.proc _dstrstr
  850  00001894          	.global _dstrstr
  851  00001894          	_dstrstr:
  852                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  853  00001894  afbefffc	sw	-4(r29),r30; push fp
  854  00001898  001df020	add	r30,r0,r29; fp = sp
  855  0000189c  afbffff8	sw	-8(r29),r31; push ret addr
  856  000018a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  857  000018a4  afa20000	sw	0(r29),r2
  858  000018a8  23bdfff8	addi	r29,r29,#-8
  859  000018ac  001d0820	add	r1,r0,r29
  860  000018b0  8fc20004	lw	r2,4(r30)
  861  000018b4  ac220000	sw	(r1),r2
  862  000018b8  0fffff5c	jal	_dstrlen
  863  000018bc  54000000	nop; delay slot nop
  864  000018c0  23bd0008	addi	r29,r29,#8
  865  000018c4  afc1fff4	sw	-12(r30),r1
  866  000018c8          	L41_LF2:
  867  000018c8  8fc10000	lw	r1,(r30)
  868  000018cc  90220000	lbu	r2,(r1)
  869  000018d0  64410000	snei	r1,r2,#0
  870  000018d4  1420000c	bnez	r1,L43_LF2
  871  000018d8  54000000	nop; delay slot nop
  872  000018dc  08000060	j	L42_LF2
  873  000018e0  54000000	nop; delay slot nop
  874  000018e4          	L43_LF2:
  875  000018e4  23bdfff0	addi	r29,r29,#-16
  876  000018e8  001d0820	add	r1,r0,r29
  877  000018ec  8fc20000	lw	r2,(r30)
  878  000018f0  ac220000	sw	(r1),r2
  879  000018f4  8fc20004	lw	r2,4(r30)
  880  000018f8  ac220004	sw	4(r1),r2
  881  000018fc  8fc2fff4	lw	r2,-12(r30)
  882  00001900  ac220008	sw	8(r1),r2
  883  00001904  0ffffdc0	jal	_dstrncmp
  884  00001908  54000000	nop; delay slot nop
  885  0000190c  23bd0010	addi	r29,r29,#16
  886  00001910  64220000	snei	r2,r1,#0
  887  00001914  14400010	bnez	r2,L44_LF2
  888  00001918  54000000	nop; delay slot nop
  889  0000191c  8fc10000	lw	r1,(r30)
  890  00001920  08000028	j	L40_LF2
  891  00001924  54000000	nop; delay slot nop
  892  00001928          	L44_LF2:
  893  00001928  8fc20000	lw	r2,(r30)
  894  0000192c  20410001	addi	r1,r2,#1
  895  00001930  00011020	add	r2,r0,r1
  896  00001934  afc20000	sw	(r30),r2
  897  00001938  0bffff8c	j	L41_LF2
  898  0000193c  54000000	nop; delay slot nop
  899  00001940          	L42_LF2:
  900  00001940  20010000	addi	r1,r0,#0
  901  00001944  08000004	j	L40_LF2
  902  00001948  54000000	nop; delay slot nop
  903  0000194c          	L40_LF2:
  904  0000194c  8fa20000	lw	r2,0(r29)
  905  00001950  8fdffff8	lw	r31,-8(r30)
  906  00001954  001ee820	add	r29,r0,r30
  907  00001958  8fdefffc	lw	r30,-4(r30)
  908  0000195c  4be00000	jr	r31
  909  00001960  54000000	nop
  910  00001964          	.endproc _dstrstr
  911  00001964          	.align 2
  912  00001964          	.proc _dmindex
  913  00001964          	.global _dmindex
  914  00001964          	_dmindex:
  915                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  916  00001964  afbefffc	sw	-4(r29),r30; push fp
  917  00001968  001df020	add	r30,r0,r29; fp = sp
  918  0000196c  afbffff8	sw	-8(r29),r31; push ret addr
  919  00001970  2fbd0018	subui	r29,r29,#24; alloc local storage
  920  00001974  afa20000	sw	0(r29),r2
  921  00001978  54000000	nop
  922  0000197c          	L46_LF2:
  923  0000197c  8fc10000	lw	r1,(r30)
  924  00001980  90220000	lbu	r2,(r1)
  925  00001984  64410000	snei	r1,r2,#0
  926  00001988  1420000c	bnez	r1,L48_LF2
  927  0000198c  54000000	nop; delay slot nop
  928  00001990  08000070	j	L47_LF2
  929  00001994  54000000	nop; delay slot nop
  930  00001998          	L48_LF2:
  931  00001998  8fc10004	lw	r1,4(r30)
  932  0000199c  afc1fff4	sw	-12(r30),r1
  933  000019a0          	L49_LF2:
  934  000019a0  8fc1fff4	lw	r1,-12(r30)
  935  000019a4  90220000	lbu	r2,(r1)
  936  000019a8  64410000	snei	r1,r2,#0
  937  000019ac  1420000c	bnez	r1,L52_LF2
  938  000019b0  54000000	nop; delay slot nop
  939  000019b4  08000044	j	L50_LF2
  940  000019b8  54000000	nop; delay slot nop
  941  000019bc          	L52_LF2:
  942  000019bc  8fc10000	lw	r1,(r30)
  943  000019c0  8fc2fff4	lw	r2,-12(r30)
  944  000019c4  90210000	lbu	r1,(r1)
  945  000019c8  90420000	lbu	r2,(r2)
  946  000019cc  00220828	seq	r1,r1,r2
  947  000019d0  10200010	beqz	r1,L51_LF2
  948  000019d4  54000000	nop; delay slot nop
  949  000019d8  8fc10000	lw	r1,(r30)
  950  000019dc  08000030	j	L45_LF2
  951  000019e0  54000000	nop; delay slot nop
  952  000019e4          	L53_LF2:
  953  000019e4          	L51_LF2:
  954  000019e4  8fc2fff4	lw	r2,-12(r30)
  955  000019e8  20410001	addi	r1,r2,#1
  956  000019ec  00011020	add	r2,r0,r1
  957  000019f0  afc2fff4	sw	-12(r30),r2
  958  000019f4  0bffffa8	j	L49_LF2
  959  000019f8  54000000	nop; delay slot nop
  960  000019fc          	L50_LF2:
  961  000019fc  0bffff7c	j	L46_LF2
  962  00001a00  54000000	nop; delay slot nop
  963  00001a04          	L47_LF2:
  964  00001a04  20010000	addi	r1,r0,#0
  965  00001a08  08000004	j	L45_LF2
  966  00001a0c  54000000	nop; delay slot nop
  967  00001a10          	L45_LF2:
  968  00001a10  8fa20000	lw	r2,0(r29)
  969  00001a14  8fdffff8	lw	r31,-8(r30)
  970  00001a18  001ee820	add	r29,r0,r30
  971  00001a1c  8fdefffc	lw	r30,-4(r30)
  972  00001a20  4be00000	jr	r31
  973  00001a24  54000000	nop
  974  00001a28          	.endproc _dmindex
  975  00001a28          	.align 2
  976  00001a28          	.proc _dindex
  977  00001a28          	.global _dindex
  978  00001a28          	_dindex:
  979                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  980  00001a28  afbefffc	sw	-4(r29),r30; push fp
  981  00001a2c  001df020	add	r30,r0,r29; fp = sp
  982  00001a30  afbffff8	sw	-8(r29),r31; push ret addr
  983  00001a34  2fbd0010	subui	r29,r29,#16; alloc local storage
  984  00001a38  afa20000	sw	0(r29),r2
  985  00001a3c  54000000	nop
  986  00001a40          	L55_LF2:
  987  00001a40  8fc10000	lw	r1,(r30)
  988  00001a44  90220000	lbu	r2,(r1)
  989  00001a48  64410000	snei	r1,r2,#0
  990  00001a4c  1420000c	bnez	r1,L57_LF2
  991  00001a50  54000000	nop; delay slot nop
  992  00001a54  08000040	j	L56_LF2
  993  00001a58  54000000	nop; delay slot nop
  994  00001a5c          	L57_LF2:
  995  00001a5c  8fc10000	lw	r1,(r30)
  996  00001a60  90220000	lbu	r2,(r1)
  997  00001a64  8fc10004	lw	r1,4(r30)
  998  00001a68  00411028	seq	r2,r2,r1
  999  00001a6c  10400010	beqz	r2,L58_LF2
 1000  00001a70  54000000	nop; delay slot nop
 1001  00001a74  8fc10000	lw	r1,(r30)
 1002  00001a78  08000028	j	L54_LF2
 1003  00001a7c  54000000	nop; delay slot nop
 1004  00001a80          	L58_LF2:
 1005  00001a80  8fc20000	lw	r2,(r30)
 1006  00001a84  20410001	addi	r1,r2,#1
 1007  00001a88  00011020	add	r2,r0,r1
 1008  00001a8c  afc20000	sw	(r30),r2
 1009  00001a90  0bffffac	j	L55_LF2
 1010  00001a94  54000000	nop; delay slot nop
 1011  00001a98          	L56_LF2:
 1012  00001a98  20010000	addi	r1,r0,#0
 1013  00001a9c  08000004	j	L54_LF2
 1014  00001aa0  54000000	nop; delay slot nop
 1015  00001aa4          	L54_LF2:
 1016  00001aa4  8fa20000	lw	r2,0(r29)
 1017  00001aa8  8fdffff8	lw	r31,-8(r30)
 1018  00001aac  001ee820	add	r29,r0,r30
 1019  00001ab0  8fdefffc	lw	r30,-4(r30)
 1020  00001ab4  4be00000	jr	r31
 1021  00001ab8  54000000	nop
 1022  00001abc          	.endproc _dindex
 1023  00001abc          	.align 2
 1024  00001abc          	.proc _ditoa
 1025  00001abc          	.global _ditoa
 1026  00001abc          	_ditoa:
 1027                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1028  00001abc  afbefffc	sw	-4(r29),r30; push fp
 1029  00001ac0  001df020	add	r30,r0,r29; fp = sp
 1030  00001ac4  afbffff8	sw	-8(r29),r31; push ret addr
 1031  00001ac8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1032  00001acc  afa20000	sw	0(r29),r2
 1033  00001ad0  afa30004	sw	4(r29),r3
 1034  00001ad4  8fc10000	lw	r1,(r30)
 1035  00001ad8  68220000	slti	r2,r1,#0
 1036  00001adc  1040002c	beqz	r2,L60_LF2
 1037  00001ae0  54000000	nop; delay slot nop
 1038  00001ae4  8fc10004	lw	r1,4(r30)
 1039  00001ae8  20220001	addi	r2,r1,#1
 1040  00001aec  afc20004	sw	4(r30),r2
 1041  00001af0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1042  00001af4  a0220000	sb	(r1),r2
 1043  00001af8  8fc10000	lw	r1,(r30)
 1044  00001afc  00011022	sub	r2,r0,r1
 1045  00001b00  afc20000	sw	(r30),r2
 1046  00001b04  08000118	j	L61_LF2
 1047  00001b08  54000000	nop; delay slot nop
 1048  00001b0c          	L60_LF2:
 1049  00001b0c  8fc10000	lw	r1,(r30)
 1050  00001b10  64220000	snei	r2,r1,#0
 1051  00001b14  14400020	bnez	r2,L62_LF2
 1052  00001b18  54000000	nop; delay slot nop
 1053  00001b1c  8fc10004	lw	r1,4(r30)
 1054  00001b20  20220001	addi	r2,r1,#1
 1055  00001b24  afc20004	sw	4(r30),r2
 1056  00001b28  20020030	addi	r2,r0,(#0x30)&0xff
 1057  00001b2c  a0220000	sb	(r1),r2
 1058  00001b30  080000ec	j	L61_LF2
 1059  00001b34  54000000	nop; delay slot nop
 1060  00001b38          	L62_LF2:
 1061  00001b38  20010001	addi	r1,r0,#1
 1062  00001b3c  afc1fff4	sw	-12(r30),r1
 1063  00001b40          	L64_LF2:
 1064  00001b40  8fc1fff4	lw	r1,-12(r30)
 1065  00001b44  8fc20000	lw	r2,(r30)
 1066  00001b48  0022082c	sle	r1,r1,r2
 1067  00001b4c  1420000c	bnez	r1,L66_LF2
 1068  00001b50  54000000	nop; delay slot nop
 1069  00001b54  08000024	j	L65_LF2
 1070  00001b58  54000000	nop; delay slot nop
 1071  00001b5c          	L67_LF2:
 1072  00001b5c          	L66_LF2:
 1073  00001b5c  8fc1fff4	lw	r1,-12(r30)
 1074  00001b60  00011820	add	r3,r0,r1
 1075  00001b64  50620002	slli	r2,r3,#0x2
 1076  00001b68  00411020	add	r2,r2,r1
 1077  00001b6c  50410001	slli	r1,r2,#0x1
 1078  00001b70  afc1fff4	sw	-12(r30),r1
 1079  00001b74  0bffffc8	j	L64_LF2
 1080  00001b78  54000000	nop; delay slot nop
 1081  00001b7c          	L65_LF2:
 1082  00001b7c  54000000	nop
 1083  00001b80          	L68_LF2:
 1084  00001b80  8fc1fff4	lw	r1,-12(r30)
 1085  00001b84  2002000a	addi	r2,r0,#10
 1086  00001b88  00200035	movi2fp	f0,r1
 1087  00001b8c  00400835	movi2fp	f1,r2
 1088  00001b90  0401000f	div	f0,f0,f1
 1089  00001b94  00000834	movfp2i	r1,f0
 1090  00001b98  afc1fff4	sw	-12(r30),r1
 1091  00001b9c  8fc10004	lw	r1,4(r30)
 1092  00001ba0  20220001	addi	r2,r1,#1
 1093  00001ba4  afc20004	sw	4(r30),r2
 1094  00001ba8  8fc20000	lw	r2,(r30)
 1095  00001bac  8fc3fff4	lw	r3,-12(r30)
 1096  00001bb0  00400035	movi2fp	f0,r2
 1097  00001bb4  00600835	movi2fp	f1,r3
 1098  00001bb8  0401000f	div	f0,f0,f1
 1099  00001bbc  00001034	movfp2i	r2,f0
 1100  00001bc0  00021820	add	r3,r0,r2
 1101  00001bc4  20620030	addi	r2,r3,#48
 1102  00001bc8  a0220000	sb	(r1),r2
 1103  00001bcc  8fc10000	lw	r1,(r30)
 1104  00001bd0  8fc3fff4	lw	r3,-12(r30)
 1105  00001bd4  00200035	movi2fp	f0,r1
 1106  00001bd8  00600835	movi2fp	f1,r3
 1107  00001bdc  0401000f	div	f0,f0,f1
 1108  00001be0  00001034	movfp2i	r2,f0
 1109  00001be4  8fc3fff4	lw	r3,-12(r30)
 1110  00001be8  00400035	movi2fp	f0,r2
 1111  00001bec  00600835	movi2fp	f1,r3
 1112  00001bf0  0401000e	mult	f0,f0,f1
 1113  00001bf4  00001034	movfp2i	r2,f0
 1114  00001bf8  00220822	sub	r1,r1,r2
 1115  00001bfc  afc10000	sw	(r30),r1
 1116  00001c00          	L70_LF2:
 1117  00001c00  8fc1fff4	lw	r1,-12(r30)
 1118  00001c04  6c220001	sgti	r2,r1,#1
 1119  00001c08  1440000c	bnez	r2,L71_LF2
 1120  00001c0c  54000000	nop; delay slot nop
 1121  00001c10  0800000c	j	L61_LF2
 1122  00001c14  54000000	nop; delay slot nop
 1123  00001c18          	L71_LF2:
 1124  00001c18  0bffff64	j	L68_LF2
 1125  00001c1c  54000000	nop; delay slot nop
 1126  00001c20          	L69_LF2:
 1127  00001c20          	L63_LF2:
 1128  00001c20          	L61_LF2:
 1129  00001c20  8fc10004	lw	r1,4(r30)
 1130  00001c24  20020000	addi	r2,r0,(#0x0)&0xff
 1131  00001c28  a0220000	sb	(r1),r2
 1132  00001c2c          	L59_LF2:
 1133  00001c2c  8fa20000	lw	r2,0(r29)
 1134  00001c30  8fa30004	lw	r3,4(r29)
 1135  00001c34  8fdffff8	lw	r31,-8(r30)
 1136  00001c38  001ee820	add	r29,r0,r30
 1137  00001c3c  8fdefffc	lw	r30,-4(r30)
 1138  00001c40  4be00000	jr	r31
 1139  00001c44  54000000	nop
 1140  00001c48          	.endproc _ditoa
 1141  00001c48          	.align 2
 1142  00001c48          	.proc _dstrtol
 1143  00001c48          	.global _dstrtol
 1144  00001c48          	_dstrtol:
 1145                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1146  00001c48  afbefffc	sw	-4(r29),r30; push fp
 1147  00001c4c  001df020	add	r30,r0,r29; fp = sp
 1148  00001c50  afbffff8	sw	-8(r29),r31; push ret addr
 1149  00001c54  2fbd0020	subui	r29,r29,#32; alloc local storage
 1150  00001c58  afa20000	sw	0(r29),r2
 1151  00001c5c  20010000	addi	r1,r0,#0
 1152  00001c60  afc1fff4	sw	-12(r30),r1
 1153  00001c64          	L73_LF2:
 1154  00001c64  8fc10000	lw	r1,(r30)
 1155  00001c68  90220000	lbu	r2,(r1)
 1156  00001c6c  60410020	seqi	r1,r2,#32
 1157  00001c70  14200034	bnez	r1,L75_LF2
 1158  00001c74  54000000	nop; delay slot nop
 1159  00001c78  8fc10000	lw	r1,(r30)
 1160  00001c7c  90220000	lbu	r2,(r1)
 1161  00001c80  60410009	seqi	r1,r2,#9
 1162  00001c84  14200020	bnez	r1,L75_LF2
 1163  00001c88  54000000	nop; delay slot nop
 1164  00001c8c  8fc10000	lw	r1,(r30)
 1165  00001c90  90220000	lbu	r2,(r1)
 1166  00001c94  6041000a	seqi	r1,r2,#10
 1167  00001c98  1420000c	bnez	r1,L75_LF2
 1168  00001c9c  54000000	nop; delay slot nop
 1169  00001ca0  0800001c	j	L74_LF2
 1170  00001ca4  54000000	nop; delay slot nop
 1171  00001ca8          	L75_LF2:
 1172  00001ca8  8fc20000	lw	r2,(r30)
 1173  00001cac  20410001	addi	r1,r2,#1
 1174  00001cb0  00011020	add	r2,r0,r1
 1175  00001cb4  afc20000	sw	(r30),r2
 1176  00001cb8  0bffffa8	j	L73_LF2
 1177  00001cbc  54000000	nop; delay slot nop
 1178  00001cc0          	L74_LF2:
 1179  00001cc0  8fc10004	lw	r1,4(r30)
 1180  00001cc4  64220000	snei	r2,r1,#0
 1181  00001cc8  10400010	beqz	r2,L76_LF2
 1182  00001ccc  54000000	nop; delay slot nop
 1183  00001cd0  8fc10004	lw	r1,4(r30)
 1184  00001cd4  8fc20000	lw	r2,(r30)
 1185  00001cd8  ac220000	sw	(r1),r2
 1186  00001cdc          	L76_LF2:
 1187  00001cdc  8fc10000	lw	r1,(r30)
 1188  00001ce0  90220000	lbu	r2,(r1)
 1189  00001ce4  64410000	snei	r1,r2,#0
 1190  00001ce8  14200010	bnez	r1,L77_LF2
 1191  00001cec  54000000	nop; delay slot nop
 1192  00001cf0  8fc1fff4	lw	r1,-12(r30)
 1193  00001cf4  08000294	j	L72_LF2
 1194  00001cf8  54000000	nop; delay slot nop
 1195  00001cfc          	L77_LF2:
 1196  00001cfc  8fc10000	lw	r1,(r30)
 1197  00001d00  90220000	lbu	r2,(r1)
 1198  00001d04  6041002d	seqi	r1,r2,#45
 1199  00001d08  10200024	beqz	r1,L78_LF2
 1200  00001d0c  54000000	nop; delay slot nop
 1201  00001d10  2001ffff	addi	r1,r0,#-1
 1202  00001d14  afc1ffec	sw	-20(r30),r1
 1203  00001d18  8fc20000	lw	r2,(r30)
 1204  00001d1c  20410001	addi	r1,r2,#1
 1205  00001d20  00011020	add	r2,r0,r1
 1206  00001d24  afc20000	sw	(r30),r2
 1207  00001d28  0800000c	j	L79_LF2
 1208  00001d2c  54000000	nop; delay slot nop
 1209  00001d30          	L78_LF2:
 1210  00001d30  20010001	addi	r1,r0,#1
 1211  00001d34  afc1ffec	sw	-20(r30),r1
 1212  00001d38          	L79_LF2:
 1213  00001d38  8fc10008	lw	r1,8(r30)
 1214  00001d3c  64220000	snei	r2,r1,#0
 1215  00001d40  14400090	bnez	r2,L80_LF2
 1216  00001d44  54000000	nop; delay slot nop
 1217  00001d48  8fc10000	lw	r1,(r30)
 1218  00001d4c  90220000	lbu	r2,(r1)
 1219  00001d50  60410030	seqi	r1,r2,#48
 1220  00001d54  10200074	beqz	r1,L81_LF2
 1221  00001d58  54000000	nop; delay slot nop
 1222  00001d5c  8fc20000	lw	r2,(r30)
 1223  00001d60  20410001	addi	r1,r2,#1
 1224  00001d64  00011020	add	r2,r0,r1
 1225  00001d68  afc20000	sw	(r30),r2
 1226  00001d6c  8fc10000	lw	r1,(r30)
 1227  00001d70  90220000	lbu	r2,(r1)
 1228  00001d74  60410078	seqi	r1,r2,#120
 1229  00001d78  14200020	bnez	r1,L83_LF2
 1230  00001d7c  54000000	nop; delay slot nop
 1231  00001d80  8fc10000	lw	r1,(r30)
 1232  00001d84  90220000	lbu	r2,(r1)
 1233  00001d88  60410058	seqi	r1,r2,#88
 1234  00001d8c  1420000c	bnez	r1,L83_LF2
 1235  00001d90  54000000	nop; delay slot nop
 1236  00001d94  08000024	j	L82_LF2
 1237  00001d98  54000000	nop; delay slot nop
 1238  00001d9c          	L83_LF2:
 1239  00001d9c  20010010	addi	r1,r0,#16
 1240  00001da0  afc10008	sw	8(r30),r1
 1241  00001da4  8fc20000	lw	r2,(r30)
 1242  00001da8  20410001	addi	r1,r2,#1
 1243  00001dac  00011020	add	r2,r0,r1
 1244  00001db0  afc20000	sw	(r30),r2
 1245  00001db4  0800000c	j	L84_LF2
 1246  00001db8  54000000	nop; delay slot nop
 1247  00001dbc          	L82_LF2:
 1248  00001dbc  20010008	addi	r1,r0,#8
 1249  00001dc0  afc10008	sw	8(r30),r1
 1250  00001dc4          	L84_LF2:
 1251  00001dc4  0800000c	j	L80_LF2
 1252  00001dc8  54000000	nop; delay slot nop
 1253  00001dcc          	L81_LF2:
 1254  00001dcc  2001000a	addi	r1,r0,#10
 1255  00001dd0  afc10008	sw	8(r30),r1
 1256  00001dd4          	L85_LF2:
 1257  00001dd4          	L80_LF2:
 1258  00001dd4  8fc10008	lw	r1,8(r30)
 1259  00001dd8  70220000	slei	r2,r1,#0
 1260  00001ddc  1440001c	bnez	r2,L87_LF2
 1261  00001de0  54000000	nop; delay slot nop
 1262  00001de4  8fc10008	lw	r1,8(r30)
 1263  00001de8  6c220010	sgti	r2,r1,#16
 1264  00001dec  1440000c	bnez	r2,L87_LF2
 1265  00001df0  54000000	nop; delay slot nop
 1266  00001df4  08000010	j	L86_LF2
 1267  00001df8  54000000	nop; delay slot nop
 1268  00001dfc          	L87_LF2:
 1269  00001dfc  8fc1fff4	lw	r1,-12(r30)
 1270  00001e00  08000188	j	L72_LF2
 1271  00001e04  54000000	nop; delay slot nop
 1272  00001e08          	L86_LF2:
 1273  00001e08  54000000	nop
 1274  00001e0c          	L88_LF2:
 1275  00001e0c  8fc10000	lw	r1,(r30)
 1276  00001e10  90220000	lbu	r2,(r1)
 1277  00001e14  6c41002f	sgtui	r1,r2,#47
 1278  00001e18  10200030	beqz	r1,L91_LF2
 1279  00001e1c  54000000	nop; delay slot nop
 1280  00001e20  8fc10000	lw	r1,(r30)
 1281  00001e24  90220000	lbu	r2,(r1)
 1282  00001e28  70410039	sleui	r1,r2,#57
 1283  00001e2c  1020001c	beqz	r1,L91_LF2
 1284  00001e30  54000000	nop; delay slot nop
 1285  00001e34  8fc10000	lw	r1,(r30)
 1286  00001e38  90220000	lbu	r2,(r1)
 1287  00001e3c  2041ffd0	addi	r1,r2,#-48
 1288  00001e40  afc1fff0	sw	-16(r30),r1
 1289  00001e44  0800008c	j	L92_LF2
 1290  00001e48  54000000	nop; delay slot nop
 1291  00001e4c          	L91_LF2:
 1292  00001e4c  8fc10000	lw	r1,(r30)
 1293  00001e50  90220000	lbu	r2,(r1)
 1294  00001e54  6c410060	sgtui	r1,r2,#96
 1295  00001e58  10200030	beqz	r1,L93_LF2
 1296  00001e5c  54000000	nop; delay slot nop
 1297  00001e60  8fc10000	lw	r1,(r30)
 1298  00001e64  90220000	lbu	r2,(r1)
 1299  00001e68  7041007a	sleui	r1,r2,#122
 1300  00001e6c  1020001c	beqz	r1,L93_LF2
 1301  00001e70  54000000	nop; delay slot nop
 1302  00001e74  8fc10000	lw	r1,(r30)
 1303  00001e78  90220000	lbu	r2,(r1)
 1304  00001e7c  2041ffa9	addi	r1,r2,#-87
 1305  00001e80  afc1fff0	sw	-16(r30),r1
 1306  00001e84  0800004c	j	L92_LF2
 1307  00001e88  54000000	nop; delay slot nop
 1308  00001e8c          	L93_LF2:
 1309  00001e8c  8fc10000	lw	r1,(r30)
 1310  00001e90  90220000	lbu	r2,(r1)
 1311  00001e94  6c410040	sgtui	r1,r2,#64
 1312  00001e98  10200030	beqz	r1,L95_LF2
 1313  00001e9c  54000000	nop; delay slot nop
 1314  00001ea0  8fc10000	lw	r1,(r30)
 1315  00001ea4  90220000	lbu	r2,(r1)
 1316  00001ea8  7041005a	sleui	r1,r2,#90
 1317  00001eac  1020001c	beqz	r1,L95_LF2
 1318  00001eb0  54000000	nop; delay slot nop
 1319  00001eb4  8fc10000	lw	r1,(r30)
 1320  00001eb8  90220000	lbu	r2,(r1)
 1321  00001ebc  2041ffc9	addi	r1,r2,#-55
 1322  00001ec0  afc1fff0	sw	-16(r30),r1
 1323  00001ec4  0800000c	j	L92_LF2
 1324  00001ec8  54000000	nop; delay slot nop
 1325  00001ecc          	L95_LF2:
 1326  00001ecc  200103e8	addi	r1,r0,#1000
 1327  00001ed0  afc1fff0	sw	-16(r30),r1
 1328  00001ed4          	L96_LF2:
 1329  00001ed4          	L94_LF2:
 1330  00001ed4          	L92_LF2:
 1331  00001ed4  8fc1fff0	lw	r1,-16(r30)
 1332  00001ed8  8fc20008	lw	r2,8(r30)
 1333  00001edc  0022082a	slt	r1,r1,r2
 1334  00001ee0  10200040	beqz	r1,L90_LF2
 1335  00001ee4  54000000	nop; delay slot nop
 1336  00001ee8  8fc1fff4	lw	r1,-12(r30)
 1337  00001eec  8fc20008	lw	r2,8(r30)
 1338  00001ef0  00200035	movi2fp	f0,r1
 1339  00001ef4  00400835	movi2fp	f1,r2
 1340  00001ef8  0401000e	mult	f0,f0,f1
 1341  00001efc  00000834	movfp2i	r1,f0
 1342  00001f00  afc1fff4	sw	-12(r30),r1
 1343  00001f04  8fc1fff4	lw	r1,-12(r30)
 1344  00001f08  8fc2fff0	lw	r2,-16(r30)
 1345  00001f0c  00220820	add	r1,r1,r2
 1346  00001f10  afc1fff4	sw	-12(r30),r1
 1347  00001f14  8fc20000	lw	r2,(r30)
 1348  00001f18  20410001	addi	r1,r2,#1
 1349  00001f1c  00011020	add	r2,r0,r1
 1350  00001f20  afc20000	sw	(r30),r2
 1351  00001f24          	L97_LF2:
 1352  00001f24          	L90_LF2:
 1353  00001f24  8fc1fff0	lw	r1,-16(r30)
 1354  00001f28  8fc20008	lw	r2,8(r30)
 1355  00001f2c  0022082a	slt	r1,r1,r2
 1356  00001f30  1420000c	bnez	r1,L98_LF2
 1357  00001f34  54000000	nop; delay slot nop
 1358  00001f38  0800000c	j	L89_LF2
 1359  00001f3c  54000000	nop; delay slot nop
 1360  00001f40          	L98_LF2:
 1361  00001f40  0bfffec8	j	L88_LF2
 1362  00001f44  54000000	nop; delay slot nop
 1363  00001f48          	L89_LF2:
 1364  00001f48  8fc10004	lw	r1,4(r30)
 1365  00001f4c  64220000	snei	r2,r1,#0
 1366  00001f50  10400010	beqz	r2,L99_LF2
 1367  00001f54  54000000	nop; delay slot nop
 1368  00001f58  8fc10004	lw	r1,4(r30)
 1369  00001f5c  8fc20000	lw	r2,(r30)
 1370  00001f60  ac220000	sw	(r1),r2
 1371  00001f64          	L99_LF2:
 1372  00001f64  8fc1fff4	lw	r1,-12(r30)
 1373  00001f68  8fc2ffec	lw	r2,-20(r30)
 1374  00001f6c  00200035	movi2fp	f0,r1
 1375  00001f70  00400835	movi2fp	f1,r2
 1376  00001f74  0401000e	mult	f0,f0,f1
 1377  00001f78  00000834	movfp2i	r1,f0
 1378  00001f7c  afc1fff4	sw	-12(r30),r1
 1379  00001f80  8fc1fff4	lw	r1,-12(r30)
 1380  00001f84  08000004	j	L72_LF2
 1381  00001f88  54000000	nop; delay slot nop
 1382  00001f8c          	L72_LF2:
 1383  00001f8c  8fa20000	lw	r2,0(r29)
 1384  00001f90  8fdffff8	lw	r31,-8(r30)
 1385  00001f94  001ee820	add	r29,r0,r30
 1386  00001f98  8fdefffc	lw	r30,-4(r30)
 1387  00001f9c  4be00000	jr	r31
 1388  00001fa0  54000000	nop
 1389  00001fa4          	.endproc _dstrtol
 1390  00001fa4          	.align 2
 1391  00001fa4          	.proc _bcopy
 1392  00001fa4          	.global _bcopy
 1393  00001fa4          	_bcopy:
 1394                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1395  00001fa4  afbefffc	sw	-4(r29),r30; push fp
 1396  00001fa8  001df020	add	r30,r0,r29; fp = sp
 1397  00001fac  afbffff8	sw	-8(r29),r31; push ret addr
 1398  00001fb0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1399  00001fb4  afa20000	sw	0(r29),r2
 1400  00001fb8  afa30004	sw	4(r29),r3
 1401  00001fbc  54000000	nop
 1402  00001fc0          	L101_LF2:
 1403  00001fc0  8fc10008	lw	r1,8(r30)
 1404  00001fc4  2022ffff	addi	r2,r1,#-1
 1405  00001fc8  afc20008	sw	8(r30),r2
 1406  00001fcc  6c210000	sgti	r1,r1,#0
 1407  00001fd0  1420000c	bnez	r1,L103_LF2
 1408  00001fd4  54000000	nop; delay slot nop
 1409  00001fd8  0800002c	j	L102_LF2
 1410  00001fdc  54000000	nop; delay slot nop
 1411  00001fe0          	L103_LF2:
 1412  00001fe0  8fc10004	lw	r1,4(r30)
 1413  00001fe4  20220001	addi	r2,r1,#1
 1414  00001fe8  afc20004	sw	4(r30),r2
 1415  00001fec  8fc20000	lw	r2,(r30)
 1416  00001ff0  20430001	addi	r3,r2,#1
 1417  00001ff4  afc30000	sw	(r30),r3
 1418  00001ff8  80420000	lb	r2,(r2)
 1419  00001ffc  a0220000	sb	(r1),r2
 1420  00002000  0bffffbc	j	L101_LF2
 1421  00002004  54000000	nop; delay slot nop
 1422  00002008          	L102_LF2:
 1423  00002008          	L100_LF2:
 1424  00002008  8fa20000	lw	r2,0(r29)
 1425  0000200c  8fa30004	lw	r3,4(r29)
 1426  00002010  8fdffff8	lw	r31,-8(r30)
 1427  00002014  001ee820	add	r29,r0,r30
 1428  00002018  8fdefffc	lw	r30,-4(r30)
 1429  0000201c  4be00000	jr	r31
 1430  00002020  54000000	nop
 1431  00002024          	.endproc _bcopy
 1432  00002024          	.align 2
 1433  00002024          	.proc _bzero
 1434  00002024          	.global _bzero
 1435  00002024          	_bzero:
 1436                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1437  00002024  afbefffc	sw	-4(r29),r30; push fp
 1438  00002028  001df020	add	r30,r0,r29; fp = sp
 1439  0000202c  afbffff8	sw	-8(r29),r31; push ret addr
 1440  00002030  2fbd0010	subui	r29,r29,#16; alloc local storage
 1441  00002034  afa20000	sw	0(r29),r2
 1442  00002038  54000000	nop
 1443  0000203c          	L105_LF2:
 1444  0000203c  8fc10004	lw	r1,4(r30)
 1445  00002040  2022ffff	addi	r2,r1,#-1
 1446  00002044  afc20004	sw	4(r30),r2
 1447  00002048  6c210000	sgti	r1,r1,#0
 1448  0000204c  1420000c	bnez	r1,L107_LF2
 1449  00002050  54000000	nop; delay slot nop
 1450  00002054  08000020	j	L106_LF2
 1451  00002058  54000000	nop; delay slot nop
 1452  0000205c          	L107_LF2:
 1453  0000205c  8fc10000	lw	r1,(r30)
 1454  00002060  20220001	addi	r2,r1,#1
 1455  00002064  afc20000	sw	(r30),r2
 1456  00002068  20020000	addi	r2,r0,(#0x0)&0xff
 1457  0000206c  a0220000	sb	(r1),r2
 1458  00002070  0bffffc8	j	L105_LF2
 1459  00002074  54000000	nop; delay slot nop
 1460  00002078          	L106_LF2:
 1461  00002078          	L104_LF2:
 1462  00002078  8fa20000	lw	r2,0(r29)
 1463  0000207c  8fdffff8	lw	r31,-8(r30)
 1464  00002080  001ee820	add	r29,r0,r30
 1465  00002084  8fdefffc	lw	r30,-4(r30)
 1466  00002088  4be00000	jr	r31
 1467  0000208c  54000000	nop
 1468  00002090          	.endproc _bzero
 1469  00002090          	.align 2
 1470  00002090          	.proc _min
 1471  00002090          	.global _min
 1472  00002090          	_min:
 1473                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1474  00002090  afbefffc	sw	-4(r29),r30; push fp
 1475  00002094  001df020	add	r30,r0,r29; fp = sp
 1476  00002098  afbffff8	sw	-8(r29),r31; push ret addr
 1477  0000209c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1478  000020a0  afa20000	sw	0(r29),r2
 1479  000020a4  afa30004	sw	4(r29),r3
 1480  000020a8  8fc10000	lw	r1,(r30)
 1481  000020ac  8fc20004	lw	r2,4(r30)
 1482  000020b0  0022182c	sle	r3,r1,r2
 1483  000020b4  14600008	bnez	r3,L109_LF2
 1484  000020b8  54000000	nop; delay slot nop
 1485  000020bc  8fc10004	lw	r1,4(r30)
 1486  000020c0          	L109_LF2:
 1487  000020c0  08000004	j	L108_LF2
 1488  000020c4  54000000	nop; delay slot nop
 1489  000020c8          	L108_LF2:
 1490  000020c8  8fa20000	lw	r2,0(r29)
 1491  000020cc  8fa30004	lw	r3,4(r29)
 1492  000020d0  8fdffff8	lw	r31,-8(r30)
 1493  000020d4  001ee820	add	r29,r0,r30
 1494  000020d8  8fdefffc	lw	r30,-4(r30)
 1495  000020dc  4be00000	jr	r31
 1496  000020e0  54000000	nop
 1497  000020e4          	.endproc _min
 1498  000020e4          	.align 2
 1499  000020e4          	.proc _max
 1500  000020e4          	.global _max
 1501  000020e4          	_max:
 1502                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1503  000020e4  afbefffc	sw	-4(r29),r30; push fp
 1504  000020e8  001df020	add	r30,r0,r29; fp = sp
 1505  000020ec  afbffff8	sw	-8(r29),r31; push ret addr
 1506  000020f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1507  000020f4  afa20000	sw	0(r29),r2
 1508  000020f8  afa30004	sw	4(r29),r3
 1509  000020fc  8fc10000	lw	r1,(r30)
 1510  00002100  8fc20004	lw	r2,4(r30)
 1511  00002104  0022182d	sge	r3,r1,r2
 1512  00002108  14600008	bnez	r3,L111_LF2
 1513  0000210c  54000000	nop; delay slot nop
 1514  00002110  8fc10004	lw	r1,4(r30)
 1515  00002114          	L111_LF2:
 1516  00002114  08000004	j	L110_LF2
 1517  00002118  54000000	nop; delay slot nop
 1518  0000211c          	L110_LF2:
 1519  0000211c  8fa20000	lw	r2,0(r29)
 1520  00002120  8fa30004	lw	r3,4(r29)
 1521  00002124  8fdffff8	lw	r31,-8(r30)
 1522  00002128  001ee820	add	r29,r0,r30
 1523  0000212c  8fdefffc	lw	r30,-4(r30)
 1524  00002130  4be00000	jr	r31
 1525  00002134  54000000	nop
 1526  00002138          	.endproc _max
 1527                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1528                      ;;;
 1529                      ;;; Most of the traps are called in files from libtraps.
 1532  00002138          	.align 2
 1533  00002138          	.proc _exit
 1534  00002138          	.global _exit
 1535  00002138          	_exit:
 1536  00002138  44000300	trap	#0x300
 1537  0000213c  4be00000	jr	r31
 1538  00002140  54000000	nop
 1539  00002144          	.endproc _exit
 1541                      ; for the benefit of gcc.
 1542  00002144          	.proc ___main
 1543  00002144          	.global ___main
 1544  00002144          	___main:
 1545  00002144  4be00000	jr	r31
 1546  00002148  54000000	nop
 1547  0000214c          	.endproc ___main
 1548  0000214c          	.text
 1549  0000214c          	.global _etext
 1550  0000214c          	_etext:
 1551  0000214c          	.align 3
 1552  00002150          	.data
 1553  00003086          	.global _edata
 1554  00003086          	_edata:
