 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 178
    4                      ; Text size: 4716
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  496e636f	.ascii "Incorrect args (%d) for: \000"
   82  00003004  72726563	
   82  00003008  74206172	
   82  0000300c  67732028	
   82  00003010  25642920	
   82  00003014  666f723a	
   82  00003018  2000    	
   83  0000301a          	.align 2
   84  0000301c          	LC1_LF0:
   85  0000301c  0a00    	.ascii "\n\000"
   86  0000301e          	.align 2
   87  00003020          	LC2_LF0:
   88  00003020  42616420	.ascii "Bad mbox_open in \000"
   88  00003024  6d626f78	
   88  00003028  5f6f7065	
   88  0000302c  6e20696e	
   88  00003030  2000    	
   89  00003032          	.align 2
   90  00003034          	LC3_LF0:
   91  00003034  42616420	.ascii "Bad mbox_send in \000"
   91  00003038  6d626f78	
   91  0000303c  5f73656e	
   91  00003040  6420696e	
   91  00003044  2000    	
   92  00003046          	.align 2
   93  00003048          	LC4_LF0:
   94  00003048  434f2069	.ascii "CO injected into Radeon atmosphere, PID: %d \n\000"
   94  0000304c  6e6a6563	
   94  00003050  74656420	
   94  00003054  696e746f	
   94  00003058  20526164	
   94  0000305c  656f6e20	
   94  00003060  61746d6f	
   94  00003064  73706865	
   94  00003068  72652c20	
   94  0000306c  5049443a	
   94  00003070  20256420	
   94  00003074  0a00    	
   95  00003076          	.align 2
   96  00003078          	LC5_LF0:
   97  00003078  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
   97  0000307c  73656d61	
   97  00003080  70686f72	
   97  00003084  65207365	
   97  00003088  6d5f7072	
   97  0000308c  6f63735f	
   97  00003090  636f6d70	
   97  00003094  6c657465	
   97  00003098  64202825	
   97  0000309c  64292069	
   97  000030a0  6e2000  	
   98  000030a3          	.align 2
   99  000030a4          	LC6_LF0:
  100  000030a4  2c206578	.ascii ", exiting...\n\000"
  100  000030a8  6974696e	
  100  000030ac  672e2e2e	
  100  000030b0  0a00    	
  101  000030b2          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc50004	lw	r5,4(r30)
  113  000010ec  0c001174	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  64410004	snei	r1,r2,#4
  116  000010f8  10200050	beqz	r1,L14_LF0
  117  000010fc  54000000	nop; not filled.
  118  00001100  23bdfff8	addi	r29,r29,#-8
  119  00001104  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  120  00001108  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  121  0000110c  afa80000	sw	(r29),r8
  122  00001110  afa20004	sw	4(r29),r2
  123  00001114  0c00029c	jal	_Printf
  124  00001118  54000000	nop; not filled.
  125  0000111c  8ca80000	lw	r8,(r5)
  126  00001120  afa80000	sw	(r29),r8
  127  00001124  0c00028c	jal	_Printf
  128  00001128  54000000	nop; not filled.
  129  0000112c  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  130  00001130  2508301c	addui	r8,r8,(LC1_LF0)&0xffff
  131  00001134  afa80000	sw	(r29),r8
  132  00001138  0c000278	jal	_Printf
  133  0000113c  54000000	nop; not filled.
  134  00001140  0c000378	jal	_Exit
  135  00001144  54000000	nop; not filled.
  136  00001148  23bd0008	addi	r29,r29,#8
  137  0000114c          	L14_LF0:
  138  0000114c  23bdfff0	addi	r29,r29,#-16
  139  00001150  8ca80004	lw	r8,4(r5)
  140  00001154  afa80000	sw	(r29),r8
  141  00001158  20080000	addi	r8,r0,#0
  142  0000115c  afa80004	sw	4(r29),r8
  143  00001160  2008000a	addi	r8,r0,#10
  144  00001164  afa80008	sw	8(r29),r8
  145  00001168  0c000bfc	jal	_dstrtol
  146  0000116c  54000000	nop; not filled.
  147  00001170  00013820	add	r7,r0,r1
  148  00001174  8ca80008	lw	r8,8(r5)
  149  00001178  afa80000	sw	(r29),r8
  150  0000117c  20080000	addi	r8,r0,#0
  151  00001180  afa80004	sw	4(r29),r8
  152  00001184  2008000a	addi	r8,r0,#10
  153  00001188  afa80008	sw	8(r29),r8
  154  0000118c  0c000bd8	jal	_dstrtol
  155  00001190  54000000	nop; not filled.
  156  00001194  00012020	add	r4,r0,r1
  157  00001198  8ca8000c	lw	r8,12(r5)
  158  0000119c  afa80000	sw	(r29),r8
  159  000011a0  20080000	addi	r8,r0,#0
  160  000011a4  afa80004	sw	4(r29),r8
  161  000011a8  2008000a	addi	r8,r0,#10
  162  000011ac  afa80008	sw	8(r29),r8
  163  000011b0  0c000bb4	jal	_dstrtol
  164  000011b4  54000000	nop; not filled.
  165  000011b8  00011820	add	r3,r0,r1
  166  000011bc  afa30000	sw	(r29),r3
  167  000011c0  0c0002b0	jal	_mbox_open
  168  000011c4  54000000	nop; not filled.
  169  000011c8  23bd0010	addi	r29,r29,#16
  170  000011cc  6021ffff	seqi	r1,r1,#-1
  171  000011d0  1020004c	beqz	r1,L15_LF0
  172  000011d4  54000000	nop; not filled.
  173  000011d8  23bdfff8	addi	r29,r29,#-8
  174  000011dc  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  175  000011e0  25083020	addui	r8,r8,(LC2_LF0)&0xffff
  176  000011e4  afa80000	sw	(r29),r8
  177  000011e8  0c0001c8	jal	_Printf
  178  000011ec  54000000	nop; not filled.
  179  000011f0  8ca80000	lw	r8,(r5)
  180  000011f4  afa80000	sw	(r29),r8
  181  000011f8  0c0001b8	jal	_Printf
  182  000011fc  54000000	nop; not filled.
  183  00001200  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  184  00001204  2508301c	addui	r8,r8,(LC1_LF0)&0xffff
  185  00001208  afa80000	sw	(r29),r8
  186  0000120c  0c0001a4	jal	_Printf
  187  00001210  54000000	nop; not filled.
  188  00001214  0c0002a4	jal	_Exit
  189  00001218  54000000	nop; not filled.
  190  0000121c  23bd0008	addi	r29,r29,#8
  191  00001220          	L15_LF0:
  192  00001220  20080001	addi	r8,r0,#1
  193  00001224  afc8fff4	sw	-12(r30),r8
  194  00001228  20020000	addi	r2,r0,#0
  195  0000122c  0044082a	slt	r1,r2,r4
  196  00001230  102000b4	beqz	r1,L17_LF0
  197  00001234  54000000	nop; not filled.
  198  00001238  23c6fff4	addi	r6,r30,#-12
  199  0000123c          	L19_LF0:
  200  0000123c  23bdfff0	addi	r29,r29,#-16
  201  00001240  afa30000	sw	(r29),r3
  202  00001244  20080004	addi	r8,r0,#4
  203  00001248  afa80004	sw	4(r29),r8
  204  0000124c  afa60008	sw	8(r29),r6
  205  00001250  0c000238	jal	_mbox_send
  206  00001254  54000000	nop; not filled.
  207  00001258  23bd0010	addi	r29,r29,#16
  208  0000125c  6021ffff	seqi	r1,r1,#-1
  209  00001260  1020004c	beqz	r1,L20_LF0
  210  00001264  54000000	nop; not filled.
  211  00001268  23bdfff8	addi	r29,r29,#-8
  212  0000126c  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  213  00001270  25083034	addui	r8,r8,(LC3_LF0)&0xffff
  214  00001274  afa80000	sw	(r29),r8
  215  00001278  0c000138	jal	_Printf
  216  0000127c  54000000	nop; not filled.
  217  00001280  8ca80000	lw	r8,(r5)
  218  00001284  afa80000	sw	(r29),r8
  219  00001288  0c000128	jal	_Printf
  220  0000128c  54000000	nop; not filled.
  221  00001290  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  222  00001294  2508301c	addui	r8,r8,(LC1_LF0)&0xffff
  223  00001298  afa80000	sw	(r29),r8
  224  0000129c  0c000114	jal	_Printf
  225  000012a0  54000000	nop; not filled.
  226  000012a4  0c000214	jal	_Exit
  227  000012a8  54000000	nop; not filled.
  228  000012ac  23bd0008	addi	r29,r29,#8
  229  000012b0          	L20_LF0:
  230  000012b0  0c00010c	jal	_getpid
  231  000012b4  54000000	nop; not filled.
  232  000012b8  23bdfff8	addi	r29,r29,#-8
  233  000012bc  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  234  000012c0  25083048	addui	r8,r8,(LC4_LF0)&0xffff
  235  000012c4  afa80000	sw	(r29),r8
  236  000012c8  afa10004	sw	4(r29),r1
  237  000012cc  0c0000e4	jal	_Printf
  238  000012d0  54000000	nop; not filled.
  239  000012d4  23bd0008	addi	r29,r29,#8
  240  000012d8  20420001	addi	r2,r2,#1
  241  000012dc  0044082a	slt	r1,r2,r4
  242  000012e0  1420ff58	bnez	r1,L19_LF0
  243  000012e4  54000000	nop; not filled.
  244  000012e8          	L17_LF0:
  245  000012e8  23bdfff8	addi	r29,r29,#-8
  246  000012ec  afa30000	sw	(r29),r3
  247  000012f0  0c00018c	jal	_mbox_close
  248  000012f4  54000000	nop; not filled.
  249  000012f8  afa70000	sw	(r29),r7
  250  000012fc  0c000108	jal	_sem_signal
  251  00001300  54000000	nop; not filled.
  252  00001304  23bd0008	addi	r29,r29,#8
  253  00001308  64210001	snei	r1,r1,#1
  254  0000130c  10200050	beqz	r1,L22_LF0
  255  00001310  54000000	nop; not filled.
  256  00001314  23bdfff8	addi	r29,r29,#-8
  257  00001318  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  258  0000131c  25083078	addui	r8,r8,(LC5_LF0)&0xffff
  259  00001320  afa80000	sw	(r29),r8
  260  00001324  afa70004	sw	4(r29),r7
  261  00001328  0c000088	jal	_Printf
  262  0000132c  54000000	nop; not filled.
  263  00001330  8ca50000	lw	r5,(r5)
  264  00001334  afa50000	sw	(r29),r5
  265  00001338  0c000078	jal	_Printf
  266  0000133c  54000000	nop; not filled.
  267  00001340  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  268  00001344  250830a4	addui	r8,r8,(LC6_LF0)&0xffff
  269  00001348  afa80000	sw	(r29),r8
  270  0000134c  0c000064	jal	_Printf
  271  00001350  54000000	nop; not filled.
  272  00001354  0c000164	jal	_Exit
  273  00001358  54000000	nop; not filled.
  274  0000135c  23bd0008	addi	r29,r29,#8
  275  00001360          	L22_LF0:
  276  00001360  20010000	addi	r1,r0,#0
  277  00001364  0c000ef0	jal	_exit
  278  00001368  54000000	nop
  279  0000136c          	.endproc _main
  280                      ;;;
  281                      ;;; Stub functions for DLX traps.
  282                      ;;;
  283                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  284                      ;;;
  285                      ;;; The traps such as Open and Close
  286                      ;;; (note the capital letters) are for use by user programs.  The traps
  287                      ;;; with names such as open and close (lower case) are for use by the OS.
  288                      ;;;
  291  0000136c          	.align 2
  293                      ;;; The following are the traps to be used by user-level programs
  294                      ;;;
  296  0000136c          	.align 2
  297  0000136c          	.proc _Open
  298  0000136c          	.global _Open
  299  0000136c          	_Open:
  300                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  301                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  302                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  303  0000136c  44000213	trap	#0x213
  304  00001370  4be00000	jr	r31
  305  00001374  54000000	nop
  306  00001378          	.endproc _Open
  308  00001378          	.proc _Close
  309  00001378          	.global _Close
  310  00001378          	_Close:
  311  00001378  44000214	trap	#0x214
  312  0000137c  4be00000	jr	r31
  313  00001380  54000000	nop
  314  00001384          	.endproc _Close
  316  00001384          	.proc _Read
  317  00001384          	.global _Read
  318  00001384          	_Read:
  319  00001384  44000210	trap	#0x210
  320  00001388  4be00000	jr	r31
  321  0000138c  54000000	nop
  322  00001390          	.endproc _Read
  324  00001390          	.proc _Write
  325  00001390          	.global _Write
  326  00001390          	_Write:
  327  00001390  44000211	trap	#0x211
  328  00001394  4be00000	jr	r31
  329  00001398  54000000	nop
  330  0000139c          	.endproc _Write
  332  0000139c          	.proc _Lseek
  333  0000139c          	.global _Lseek
  334  0000139c          	_Lseek:
  335  0000139c  44000212	trap	#0x212
  336  000013a0  4be00000	jr	r31
  337  000013a4  54000000	nop
  338  000013a8          	.endproc _Lseek
  340  000013a8          	.proc _Putchar
  341  000013a8          	.global _Putchar
  342  000013a8          	_Putchar:
  343  000013a8  44000280	trap	#0x280
  344  000013ac  4be00000	jr	r31
  345  000013b0  54000000	nop
  346  000013b4          	.endproc _Putchar
  348  000013b4          	.proc _Printf
  349  000013b4          	.global _Printf
  350  000013b4          	_Printf:
  351  000013b4  44000201	trap	#0x201
  352  000013b8  4be00000	jr	r31
  353  000013bc  54000000	nop
  354  000013c0          	.endproc _Printf
  356  000013c0          	.proc _getpid
  357  000013c0          	.global _getpid
  358  000013c0          	_getpid:
  359  000013c0  44000431	trap	#0x431
  360  000013c4  4be00000	jr	r31
  361  000013c8  54000000	nop
  362  000013cc          	.endproc _getpid
  364  000013cc          	.proc _process_create
  365  000013cc          	.global _process_create
  366  000013cc          	_process_create:
  367  000013cc  44000432	trap	#0x432
  368  000013d0  4be00000	jr	r31
  369  000013d4  54000000	nop
  370  000013d8          	.endproc _process_create
  372  000013d8          	.proc _shmget
  373  000013d8          	.global _shmget
  374  000013d8          	_shmget:
  375  000013d8  44000440	trap	#0x440
  376  000013dc  4be00000	jr	r31
  377  000013e0  54000000	nop
  378  000013e4          	.endproc _shmget
  380  000013e4          	.proc _shmat
  381  000013e4          	.global _shmat
  382  000013e4          	_shmat:
  383  000013e4  44000441	trap	#0x441
  384  000013e8  4be00000	jr	r31
  385  000013ec  54000000	nop
  386  000013f0          	.endproc _shmat
  388  000013f0          	.proc _sem_create
  389  000013f0          	.global _sem_create
  390  000013f0          	_sem_create:
  391  000013f0  44000450	trap	#0x450
  392  000013f4  4be00000	jr	r31
  393  000013f8  54000000	nop
  394  000013fc          	.endproc _sem_create
  396  000013fc          	.proc _sem_wait
  397  000013fc          	.global _sem_wait
  398  000013fc          	_sem_wait:
  399  000013fc  44000451	trap	#0x451
  400  00001400  4be00000	jr	r31
  401  00001404  54000000	nop
  402  00001408          	.endproc _sem_wait
  404  00001408          	.proc _sem_signal
  405  00001408          	.global _sem_signal
  406  00001408          	_sem_signal:
  407  00001408  44000452	trap	#0x452
  408  0000140c  4be00000	jr	r31
  409  00001410  54000000	nop
  410  00001414          	.endproc _sem_signal
  412  00001414          	.proc _lock_create
  413  00001414          	.global _lock_create
  414  00001414          	_lock_create:
  415  00001414  44000453	trap	#0x453
  416  00001418  4be00000	jr	r31
  417  0000141c  54000000	nop
  418  00001420          	.endproc _lock_create
  420  00001420          	.proc _lock_acquire
  421  00001420          	.global _lock_acquire
  422  00001420          	_lock_acquire:
  423  00001420  44000454	trap	#0x454
  424  00001424  4be00000	jr	r31
  425  00001428  54000000	nop
  426  0000142c          	.endproc _lock_acquire
  428  0000142c          	.proc _lock_release
  429  0000142c          	.global _lock_release
  430  0000142c          	_lock_release:
  431  0000142c  44000455	trap	#0x455
  432  00001430  4be00000	jr	r31
  433  00001434  54000000	nop
  434  00001438          	.endproc _lock_release
  436  00001438          	.proc _cond_create
  437  00001438          	.global _cond_create
  438  00001438          	_cond_create:
  439  00001438  44000456	trap	#0x456
  440  0000143c  4be00000	jr	r31
  441  00001440  54000000	nop
  442  00001444          	.endproc _cond_create
  444  00001444          	.proc _cond_wait
  445  00001444          	.global _cond_wait
  446  00001444          	_cond_wait:
  447  00001444  44000457	trap	#0x457
  448  00001448  4be00000	jr	r31
  449  0000144c  54000000	nop
  450  00001450          	.endproc _cond_wait
  452  00001450          	.proc _cond_signal
  453  00001450          	.global _cond_signal
  454  00001450          	_cond_signal:
  455  00001450  44000458	trap	#0x458
  456  00001454  4be00000	jr	r31
  457  00001458  54000000	nop
  458  0000145c          	.endproc _cond_signal
  460  0000145c          	.proc _cond_broadcast
  461  0000145c          	.global _cond_broadcast
  462  0000145c          	_cond_broadcast:
  463  0000145c  44000459	trap	#0x459
  464  00001460  4be00000	jr	r31
  465  00001464  54000000	nop
  466  00001468          	.endproc _cond_broadcast
  468  00001468          	.proc _mbox_create
  469  00001468          	.global _mbox_create
  470  00001468          	_mbox_create:
  471  00001468  44000460	trap	#0x460
  472  0000146c  4be00000	jr	r31
  473  00001470  54000000	nop
  474  00001474          	.endproc _mbox_create
  476  00001474          	.proc _mbox_open
  477  00001474          	.global _mbox_open
  478  00001474          	_mbox_open:
  479  00001474  44000461	trap	#0x461
  480  00001478  4be00000	jr	r31
  481  0000147c  54000000	nop
  482  00001480          	.endproc _mbox_open
  484  00001480          	.proc _mbox_close
  485  00001480          	.global _mbox_close
  486  00001480          	_mbox_close:
  487  00001480  44000462	trap	#0x462
  488  00001484  4be00000	jr	r31
  489  00001488  54000000	nop
  490  0000148c          	.endproc _mbox_close
  492  0000148c          	.proc _mbox_send
  493  0000148c          	.global _mbox_send
  494  0000148c          	_mbox_send:
  495  0000148c  44000463	trap	#0x463
  496  00001490  4be00000	jr	r31
  497  00001494  54000000	nop
  498  00001498          	.endproc _mbox_send
  500  00001498          	.proc _mbox_recv
  501  00001498          	.global _mbox_recv
  502  00001498          	_mbox_recv:
  503  00001498  44000464	trap	#0x464
  504  0000149c  4be00000	jr	r31
  505  000014a0  54000000	nop
  506  000014a4          	.endproc _mbox_recv
  508  000014a4          	.proc _sleep
  509  000014a4          	.global _sleep
  510  000014a4          	_sleep:
  511  000014a4  44000465	trap	#0x465
  512  000014a8  4be00000	jr	r31
  513  000014ac  54000000	nop
  514  000014b0          	.endproc _sleep
  516  000014b0          	.proc _yield
  517  000014b0          	.global _yield
  518  000014b0          	_yield:
  519  000014b0  44000466	trap	#0x466
  520  000014b4  4be00000	jr	r31
  521  000014b8  54000000	nop
  522  000014bc          	.endproc _yield
  525  000014bc          	.proc _Exit
  526  000014bc          	.global _Exit
  527  000014bc          	_Exit:
  528  000014bc  44000500	trap	#0x500
  529  000014c0  4be00000	jr	r31
  530  000014c4  54000000	nop
  531  000014c8          	.endproc _Exit
  532                      ; Compiled by GCC
  534  000014c8          	.align 2
  535  000014c8          	.proc _isspace
  536  000014c8          	.global _isspace
  537  000014c8          	_isspace:
  538                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  539  000014c8  afbefffc	sw	-4(r29),r30; push fp
  540  000014cc  001df020	add	r30,r0,r29; fp = sp
  541  000014d0  afbffff8	sw	-8(r29),r31; push ret addr
  542  000014d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  543  000014d8  afa20000	sw	0(r29),r2
  544  000014dc  afa30004	sw	4(r29),r3
  545  000014e0  afa40008	sw	8(r29),r4
  546  000014e4  83c20003	lb	r2,3(r30)
  547  000014e8  20010000	addi	r1,r0,#0
  548  000014ec  304300ff	andi	r3,r2,#0x00ff
  549  000014f0  60640020	seqi	r4,r3,#32
  550  000014f4  1480002c	bnez	r4,L3_LF2
  551  000014f8  54000000	nop; delay slot nop
  552  000014fc  304300ff	andi	r3,r2,#0x00ff
  553  00001500  60640009	seqi	r4,r3,#9
  554  00001504  1480001c	bnez	r4,L3_LF2
  555  00001508  54000000	nop; delay slot nop
  556  0000150c  304300ff	andi	r3,r2,#0x00ff
  557  00001510  6064000a	seqi	r4,r3,#10
  558  00001514  1480000c	bnez	r4,L3_LF2
  559  00001518  54000000	nop; delay slot nop
  560  0000151c  08000008	j	L2_LF2
  561  00001520  54000000	nop; delay slot nop
  562  00001524          	L3_LF2:
  563  00001524  20010001	addi	r1,r0,#1
  564  00001528          	L2_LF2:
  565  00001528  08000004	j	L1_LF2
  566  0000152c  54000000	nop; delay slot nop
  567  00001530          	L1_LF2:
  568  00001530  8fa20000	lw	r2,0(r29)
  569  00001534  8fa30004	lw	r3,4(r29)
  570  00001538  8fa40008	lw	r4,8(r29)
  571  0000153c  8fdffff8	lw	r31,-8(r30)
  572  00001540  001ee820	add	r29,r0,r30
  573  00001544  8fdefffc	lw	r30,-4(r30)
  574  00001548  4be00000	jr	r31
  575  0000154c  54000000	nop
  576  00001550          	.endproc _isspace
  577  00001550          	.align 2
  578  00001550          	.proc _isxdigit
  579  00001550          	.global _isxdigit
  580  00001550          	_isxdigit:
  581                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  582  00001550  afbefffc	sw	-4(r29),r30; push fp
  583  00001554  001df020	add	r30,r0,r29; fp = sp
  584  00001558  afbffff8	sw	-8(r29),r31; push ret addr
  585  0000155c  2fbd0018	subui	r29,r29,#24; alloc local storage
  586  00001560  afa20000	sw	0(r29),r2
  587  00001564  afa30004	sw	4(r29),r3
  588  00001568  afa40008	sw	8(r29),r4
  589  0000156c  83c20003	lb	r2,3(r30)
  590  00001570  20010000	addi	r1,r0,#0
  591  00001574  304300ff	andi	r3,r2,#0x00ff
  592  00001578  6c64002f	sgtui	r4,r3,#47
  593  0000157c  1080001c	beqz	r4,L7_LF2
  594  00001580  54000000	nop; delay slot nop
  595  00001584  304300ff	andi	r3,r2,#0x00ff
  596  00001588  70640039	sleui	r4,r3,#57
  597  0000158c  1480005c	bnez	r4,L6_LF2
  598  00001590  54000000	nop; delay slot nop
  599  00001594  08000004	j	L7_LF2
  600  00001598  54000000	nop; delay slot nop
  601  0000159c          	L7_LF2:
  602  0000159c  304300ff	andi	r3,r2,#0x00ff
  603  000015a0  6c640060	sgtui	r4,r3,#96
  604  000015a4  1080001c	beqz	r4,L8_LF2
  605  000015a8  54000000	nop; delay slot nop
  606  000015ac  304300ff	andi	r3,r2,#0x00ff
  607  000015b0  70640066	sleui	r4,r3,#102
  608  000015b4  14800034	bnez	r4,L6_LF2
  609  000015b8  54000000	nop; delay slot nop
  610  000015bc  08000004	j	L8_LF2
  611  000015c0  54000000	nop; delay slot nop
  612  000015c4          	L8_LF2:
  613  000015c4  304300ff	andi	r3,r2,#0x00ff
  614  000015c8  6c640040	sgtui	r4,r3,#64
  615  000015cc  10800020	beqz	r4,L5_LF2
  616  000015d0  54000000	nop; delay slot nop
  617  000015d4  304300ff	andi	r3,r2,#0x00ff
  618  000015d8  70640041	sleui	r4,r3,#65
  619  000015dc  1480000c	bnez	r4,L6_LF2
  620  000015e0  54000000	nop; delay slot nop
  621  000015e4  08000008	j	L5_LF2
  622  000015e8  54000000	nop; delay slot nop
  623  000015ec          	L6_LF2:
  624  000015ec  20010001	addi	r1,r0,#1
  625  000015f0          	L5_LF2:
  626  000015f0  08000004	j	L4_LF2
  627  000015f4  54000000	nop; delay slot nop
  628  000015f8          	L4_LF2:
  629  000015f8  8fa20000	lw	r2,0(r29)
  630  000015fc  8fa30004	lw	r3,4(r29)
  631  00001600  8fa40008	lw	r4,8(r29)
  632  00001604  8fdffff8	lw	r31,-8(r30)
  633  00001608  001ee820	add	r29,r0,r30
  634  0000160c  8fdefffc	lw	r30,-4(r30)
  635  00001610  4be00000	jr	r31
  636  00001614  54000000	nop
  637  00001618          	.endproc _isxdigit
  638  00001618          	.align 2
  639  00001618          	.proc _dstrcpy
  640  00001618          	.global _dstrcpy
  641  00001618          	_dstrcpy:
  642                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  643  00001618  afbefffc	sw	-4(r29),r30; push fp
  644  0000161c  001df020	add	r30,r0,r29; fp = sp
  645  00001620  afbffff8	sw	-8(r29),r31; push ret addr
  646  00001624  2fbd0018	subui	r29,r29,#24; alloc local storage
  647  00001628  afa20000	sw	0(r29),r2
  648  0000162c  afa30004	sw	4(r29),r3
  649  00001630  8fc10000	lw	r1,(r30)
  650  00001634  afc1fff4	sw	-12(r30),r1
  651  00001638          	L10_LF2:
  652  00001638  8fc10000	lw	r1,(r30)
  653  0000163c  20220001	addi	r2,r1,#1
  654  00001640  afc20000	sw	(r30),r2
  655  00001644  8fc20004	lw	r2,4(r30)
  656  00001648  20430001	addi	r3,r2,#1
  657  0000164c  afc30004	sw	4(r30),r3
  658  00001650  80420000	lb	r2,(r2)
  659  00001654  a0220000	sb	(r1),r2
  660  00001658  a3c2fff3	sb	-13(r30),r2
  661  0000165c          	L12_LF2:
  662  0000165c  93c1fff3	lbu	r1,-13(r30)
  663  00001660  64220000	snei	r2,r1,#0
  664  00001664  1440000c	bnez	r2,L13_LF2
  665  00001668  54000000	nop; delay slot nop
  666  0000166c  0800000c	j	L11_LF2
  667  00001670  54000000	nop; delay slot nop
  668  00001674          	L13_LF2:
  669  00001674  0bffffc0	j	L10_LF2
  670  00001678  54000000	nop; delay slot nop
  671  0000167c          	L11_LF2:
  672  0000167c  8fc1fff4	lw	r1,-12(r30)
  673  00001680  08000004	j	L9_LF2
  674  00001684  54000000	nop; delay slot nop
  675  00001688          	L9_LF2:
  676  00001688  8fa20000	lw	r2,0(r29)
  677  0000168c  8fa30004	lw	r3,4(r29)
  678  00001690  8fdffff8	lw	r31,-8(r30)
  679  00001694  001ee820	add	r29,r0,r30
  680  00001698  8fdefffc	lw	r30,-4(r30)
  681  0000169c  4be00000	jr	r31
  682  000016a0  54000000	nop
  683  000016a4          	.endproc _dstrcpy
  684  000016a4          	.align 2
  685  000016a4          	.proc _dstrncpy
  686  000016a4          	.global _dstrncpy
  687  000016a4          	_dstrncpy:
  688                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  689  000016a4  afbefffc	sw	-4(r29),r30; push fp
  690  000016a8  001df020	add	r30,r0,r29; fp = sp
  691  000016ac  afbffff8	sw	-8(r29),r31; push ret addr
  692  000016b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  693  000016b4  afa20000	sw	0(r29),r2
  694  000016b8  afa30004	sw	4(r29),r3
  695  000016bc  8fc10000	lw	r1,(r30)
  696  000016c0  afc1fff4	sw	-12(r30),r1
  697  000016c4          	L15_LF2:
  698  000016c4  8fc10008	lw	r1,8(r30)
  699  000016c8  2022ffff	addi	r2,r1,#-1
  700  000016cc  afc20008	sw	8(r30),r2
  701  000016d0  70210000	slei	r1,r1,#0
  702  000016d4  1020000c	beqz	r1,L18_LF2
  703  000016d8  54000000	nop; delay slot nop
  704  000016dc  08000048	j	L16_LF2
  705  000016e0  54000000	nop; delay slot nop
  706  000016e4          	L18_LF2:
  707  000016e4  8fc10000	lw	r1,(r30)
  708  000016e8  20220001	addi	r2,r1,#1
  709  000016ec  afc20000	sw	(r30),r2
  710  000016f0  8fc20004	lw	r2,4(r30)
  711  000016f4  20430001	addi	r3,r2,#1
  712  000016f8  afc30004	sw	4(r30),r3
  713  000016fc  80420000	lb	r2,(r2)
  714  00001700  a0220000	sb	(r1),r2
  715  00001704  a3c2fff3	sb	-13(r30),r2
  716  00001708          	L17_LF2:
  717  00001708  93c1fff3	lbu	r1,-13(r30)
  718  0000170c  64220000	snei	r2,r1,#0
  719  00001710  1440000c	bnez	r2,L19_LF2
  720  00001714  54000000	nop; delay slot nop
  721  00001718  0800000c	j	L16_LF2
  722  0000171c  54000000	nop; delay slot nop
  723  00001720          	L19_LF2:
  724  00001720  0bffffa0	j	L15_LF2
  725  00001724  54000000	nop; delay slot nop
  726  00001728          	L16_LF2:
  727  00001728  8fc1fff4	lw	r1,-12(r30)
  728  0000172c  08000004	j	L14_LF2
  729  00001730  54000000	nop; delay slot nop
  730  00001734          	L14_LF2:
  731  00001734  8fa20000	lw	r2,0(r29)
  732  00001738  8fa30004	lw	r3,4(r29)
  733  0000173c  8fdffff8	lw	r31,-8(r30)
  734  00001740  001ee820	add	r29,r0,r30
  735  00001744  8fdefffc	lw	r30,-4(r30)
  736  00001748  4be00000	jr	r31
  737  0000174c  54000000	nop
  738  00001750          	.endproc _dstrncpy
  739  00001750          	.align 2
  740  00001750          	.proc _dstrcat
  741  00001750          	.global _dstrcat
  742  00001750          	_dstrcat:
  743                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  744  00001750  afbefffc	sw	-4(r29),r30; push fp
  745  00001754  001df020	add	r30,r0,r29; fp = sp
  746  00001758  afbffff8	sw	-8(r29),r31; push ret addr
  747  0000175c  2fbd0018	subui	r29,r29,#24; alloc local storage
  748  00001760  afa20000	sw	0(r29),r2
  749  00001764  8fc10000	lw	r1,(r30)
  750  00001768  afc1fff4	sw	-12(r30),r1
  751  0000176c          	L21_LF2:
  752  0000176c  8fc10000	lw	r1,(r30)
  753  00001770  90220000	lbu	r2,(r1)
  754  00001774  64410000	snei	r1,r2,#0
  755  00001778  1420000c	bnez	r1,L23_LF2
  756  0000177c  54000000	nop; delay slot nop
  757  00001780  0800001c	j	L22_LF2
  758  00001784  54000000	nop; delay slot nop
  759  00001788          	L23_LF2:
  760  00001788  8fc20000	lw	r2,(r30)
  761  0000178c  20410001	addi	r1,r2,#1
  762  00001790  00011020	add	r2,r0,r1
  763  00001794  afc20000	sw	(r30),r2
  764  00001798  0bffffd0	j	L21_LF2
  765  0000179c  54000000	nop; delay slot nop
  766  000017a0          	L22_LF2:
  767  000017a0  23bdfff8	addi	r29,r29,#-8
  768  000017a4  001d0820	add	r1,r0,r29
  769  000017a8  8fc20000	lw	r2,(r30)
  770  000017ac  ac220000	sw	(r1),r2
  771  000017b0  8fc20004	lw	r2,4(r30)
  772  000017b4  ac220004	sw	4(r1),r2
  773  000017b8  0ffffe5c	jal	_dstrcpy
  774  000017bc  54000000	nop; delay slot nop
  775  000017c0  23bd0008	addi	r29,r29,#8
  776  000017c4  8fc1fff4	lw	r1,-12(r30)
  777  000017c8  08000004	j	L20_LF2
  778  000017cc  54000000	nop; delay slot nop
  779  000017d0          	L20_LF2:
  780  000017d0  8fa20000	lw	r2,0(r29)
  781  000017d4  8fdffff8	lw	r31,-8(r30)
  782  000017d8  001ee820	add	r29,r0,r30
  783  000017dc  8fdefffc	lw	r30,-4(r30)
  784  000017e0  4be00000	jr	r31
  785  000017e4  54000000	nop
  786  000017e8          	.endproc _dstrcat
  787  000017e8          	.align 2
  788  000017e8          	.proc _dstrncmp
  789  000017e8          	.global _dstrncmp
  790  000017e8          	_dstrncmp:
  791                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  792  000017e8  afbefffc	sw	-4(r29),r30; push fp
  793  000017ec  001df020	add	r30,r0,r29; fp = sp
  794  000017f0  afbffff8	sw	-8(r29),r31; push ret addr
  795  000017f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  796  000017f8  afa20000	sw	0(r29),r2
  797  000017fc  afa30004	sw	4(r29),r3
  798  00001800  54000000	nop
  799  00001804  20010000	addi	r1,r0,#0
  800  00001808  afc1fff4	sw	-12(r30),r1
  801  0000180c          	L25_LF2:
  802  0000180c  8fc1fff4	lw	r1,-12(r30)
  803  00001810  8fc20008	lw	r2,8(r30)
  804  00001814  0022082a	slt	r1,r1,r2
  805  00001818  1420000c	bnez	r1,L28_LF2
  806  0000181c  54000000	nop; delay slot nop
  807  00001820  08000088	j	L26_LF2
  808  00001824  54000000	nop; delay slot nop
  809  00001828          	L28_LF2:
  810  00001828  8fc10004	lw	r1,4(r30)
  811  0000182c  90220000	lbu	r2,(r1)
  812  00001830  64410000	snei	r1,r2,#0
  813  00001834  14200018	bnez	r1,L29_LF2
  814  00001838  54000000	nop; delay slot nop
  815  0000183c  20010000	addi	r1,r0,#0
  816  00001840  080000d8	j	L24_LF2
  817  00001844  54000000	nop; delay slot nop
  818  00001848  08000028	j	L30_LF2
  819  0000184c  54000000	nop; delay slot nop
  820  00001850          	L29_LF2:
  821  00001850  8fc10000	lw	r1,(r30)
  822  00001854  8fc20004	lw	r2,4(r30)
  823  00001858  90210000	lbu	r1,(r1)
  824  0000185c  90420000	lbu	r2,(r2)
  825  00001860  00220829	sne	r1,r1,r2
  826  00001864  1020000c	beqz	r1,L30_LF2
  827  00001868  54000000	nop; delay slot nop
  828  0000186c  0800003c	j	L26_LF2
  829  00001870  54000000	nop; delay slot nop
  830  00001874          	L31_LF2:
  831  00001874          	L30_LF2:
  832  00001874  8fc20000	lw	r2,(r30)
  833  00001878  20410001	addi	r1,r2,#1
  834  0000187c  00011020	add	r2,r0,r1
  835  00001880  afc20000	sw	(r30),r2
  836  00001884  8fc20004	lw	r2,4(r30)
  837  00001888  20410001	addi	r1,r2,#1
  838  0000188c  00011020	add	r2,r0,r1
  839  00001890  afc20004	sw	4(r30),r2
  840  00001894          	L27_LF2:
  841  00001894  8fc2fff4	lw	r2,-12(r30)
  842  00001898  20410001	addi	r1,r2,#1
  843  0000189c  00011020	add	r2,r0,r1
  844  000018a0  afc2fff4	sw	-12(r30),r2
  845  000018a4  0bffff64	j	L25_LF2
  846  000018a8  54000000	nop; delay slot nop
  847  000018ac          	L26_LF2:
  848  000018ac  8fc1fff4	lw	r1,-12(r30)
  849  000018b0  8fc20008	lw	r2,8(r30)
  850  000018b4  00220828	seq	r1,r1,r2
  851  000018b8  10200018	beqz	r1,L32_LF2
  852  000018bc  54000000	nop; delay slot nop
  853  000018c0  20010000	addi	r1,r0,#0
  854  000018c4  08000054	j	L24_LF2
  855  000018c8  54000000	nop; delay slot nop
  856  000018cc  0800004c	j	L33_LF2
  857  000018d0  54000000	nop; delay slot nop
  858  000018d4          	L32_LF2:
  859  000018d4  8fc20000	lw	r2,(r30)
  860  000018d8  90410000	lbu	r1,(r2)
  861  000018dc  8fc20004	lw	r2,4(r30)
  862  000018e0  90430000	lbu	r3,(r2)
  863  000018e4  00230822	sub	r1,r1,r3
  864  000018e8  74220000	sgei	r2,r1,#0
  865  000018ec  10400020	beqz	r2,L34_LF2
  866  000018f0  54000000	nop; delay slot nop
  867  000018f4  8fc10000	lw	r1,(r30)
  868  000018f8  8fc20004	lw	r2,4(r30)
  869  000018fc  90210000	lbu	r1,(r1)
  870  00001900  90420000	lbu	r2,(r2)
  871  00001904  00220829	sne	r1,r1,r2
  872  00001908  08000008	j	L35_LF2
  873  0000190c  54000000	nop; delay slot nop
  874  00001910          	L34_LF2:
  875  00001910  2001ffff	addi	r1,r0,#-1
  876  00001914          	L35_LF2:
  877  00001914  08000004	j	L24_LF2
  878  00001918  54000000	nop; delay slot nop
  879  0000191c          	L33_LF2:
  880  0000191c          	L24_LF2:
  881  0000191c  8fa20000	lw	r2,0(r29)
  882  00001920  8fa30004	lw	r3,4(r29)
  883  00001924  8fdffff8	lw	r31,-8(r30)
  884  00001928  001ee820	add	r29,r0,r30
  885  0000192c  8fdefffc	lw	r30,-4(r30)
  886  00001930  4be00000	jr	r31
  887  00001934  54000000	nop
  888  00001938          	.endproc _dstrncmp
  889  00001938          	.align 2
  890  00001938          	.proc _dstrlen
  891  00001938          	.global _dstrlen
  892  00001938          	_dstrlen:
  893                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  894  00001938  afbefffc	sw	-4(r29),r30; push fp
  895  0000193c  001df020	add	r30,r0,r29; fp = sp
  896  00001940  afbffff8	sw	-8(r29),r31; push ret addr
  897  00001944  2fbd0018	subui	r29,r29,#24; alloc local storage
  898  00001948  afa20000	sw	0(r29),r2
  899  0000194c  20010000	addi	r1,r0,#0
  900  00001950  afc1fff4	sw	-12(r30),r1
  901  00001954          	L37_LF2:
  902  00001954  8fc10000	lw	r1,(r30)
  903  00001958  20220001	addi	r2,r1,#1
  904  0000195c  afc20000	sw	(r30),r2
  905  00001960  90210000	lbu	r1,(r1)
  906  00001964  64220000	snei	r2,r1,#0
  907  00001968  1440000c	bnez	r2,L39_LF2
  908  0000196c  54000000	nop; delay slot nop
  909  00001970  0800001c	j	L38_LF2
  910  00001974  54000000	nop; delay slot nop
  911  00001978          	L39_LF2:
  912  00001978  8fc2fff4	lw	r2,-12(r30)
  913  0000197c  20410001	addi	r1,r2,#1
  914  00001980  00011020	add	r2,r0,r1
  915  00001984  afc2fff4	sw	-12(r30),r2
  916  00001988  0bffffc8	j	L37_LF2
  917  0000198c  54000000	nop; delay slot nop
  918  00001990          	L38_LF2:
  919  00001990  8fc1fff4	lw	r1,-12(r30)
  920  00001994  08000004	j	L36_LF2
  921  00001998  54000000	nop; delay slot nop
  922  0000199c          	L36_LF2:
  923  0000199c  8fa20000	lw	r2,0(r29)
  924  000019a0  8fdffff8	lw	r31,-8(r30)
  925  000019a4  001ee820	add	r29,r0,r30
  926  000019a8  8fdefffc	lw	r30,-4(r30)
  927  000019ac  4be00000	jr	r31
  928  000019b0  54000000	nop
  929  000019b4          	.endproc _dstrlen
  930  000019b4          	.align 2
  931  000019b4          	.proc _dstrstr
  932  000019b4          	.global _dstrstr
  933  000019b4          	_dstrstr:
  934                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  935  000019b4  afbefffc	sw	-4(r29),r30; push fp
  936  000019b8  001df020	add	r30,r0,r29; fp = sp
  937  000019bc  afbffff8	sw	-8(r29),r31; push ret addr
  938  000019c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  939  000019c4  afa20000	sw	0(r29),r2
  940  000019c8  23bdfff8	addi	r29,r29,#-8
  941  000019cc  001d0820	add	r1,r0,r29
  942  000019d0  8fc20004	lw	r2,4(r30)
  943  000019d4  ac220000	sw	(r1),r2
  944  000019d8  0fffff5c	jal	_dstrlen
  945  000019dc  54000000	nop; delay slot nop
  946  000019e0  23bd0008	addi	r29,r29,#8
  947  000019e4  afc1fff4	sw	-12(r30),r1
  948  000019e8          	L41_LF2:
  949  000019e8  8fc10000	lw	r1,(r30)
  950  000019ec  90220000	lbu	r2,(r1)
  951  000019f0  64410000	snei	r1,r2,#0
  952  000019f4  1420000c	bnez	r1,L43_LF2
  953  000019f8  54000000	nop; delay slot nop
  954  000019fc  08000060	j	L42_LF2
  955  00001a00  54000000	nop; delay slot nop
  956  00001a04          	L43_LF2:
  957  00001a04  23bdfff0	addi	r29,r29,#-16
  958  00001a08  001d0820	add	r1,r0,r29
  959  00001a0c  8fc20000	lw	r2,(r30)
  960  00001a10  ac220000	sw	(r1),r2
  961  00001a14  8fc20004	lw	r2,4(r30)
  962  00001a18  ac220004	sw	4(r1),r2
  963  00001a1c  8fc2fff4	lw	r2,-12(r30)
  964  00001a20  ac220008	sw	8(r1),r2
  965  00001a24  0ffffdc0	jal	_dstrncmp
  966  00001a28  54000000	nop; delay slot nop
  967  00001a2c  23bd0010	addi	r29,r29,#16
  968  00001a30  64220000	snei	r2,r1,#0
  969  00001a34  14400010	bnez	r2,L44_LF2
  970  00001a38  54000000	nop; delay slot nop
  971  00001a3c  8fc10000	lw	r1,(r30)
  972  00001a40  08000028	j	L40_LF2
  973  00001a44  54000000	nop; delay slot nop
  974  00001a48          	L44_LF2:
  975  00001a48  8fc20000	lw	r2,(r30)
  976  00001a4c  20410001	addi	r1,r2,#1
  977  00001a50  00011020	add	r2,r0,r1
  978  00001a54  afc20000	sw	(r30),r2
  979  00001a58  0bffff8c	j	L41_LF2
  980  00001a5c  54000000	nop; delay slot nop
  981  00001a60          	L42_LF2:
  982  00001a60  20010000	addi	r1,r0,#0
  983  00001a64  08000004	j	L40_LF2
  984  00001a68  54000000	nop; delay slot nop
  985  00001a6c          	L40_LF2:
  986  00001a6c  8fa20000	lw	r2,0(r29)
  987  00001a70  8fdffff8	lw	r31,-8(r30)
  988  00001a74  001ee820	add	r29,r0,r30
  989  00001a78  8fdefffc	lw	r30,-4(r30)
  990  00001a7c  4be00000	jr	r31
  991  00001a80  54000000	nop
  992  00001a84          	.endproc _dstrstr
  993  00001a84          	.align 2
  994  00001a84          	.proc _dmindex
  995  00001a84          	.global _dmindex
  996  00001a84          	_dmindex:
  997                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  998  00001a84  afbefffc	sw	-4(r29),r30; push fp
  999  00001a88  001df020	add	r30,r0,r29; fp = sp
 1000  00001a8c  afbffff8	sw	-8(r29),r31; push ret addr
 1001  00001a90  2fbd0018	subui	r29,r29,#24; alloc local storage
 1002  00001a94  afa20000	sw	0(r29),r2
 1003  00001a98  54000000	nop
 1004  00001a9c          	L46_LF2:
 1005  00001a9c  8fc10000	lw	r1,(r30)
 1006  00001aa0  90220000	lbu	r2,(r1)
 1007  00001aa4  64410000	snei	r1,r2,#0
 1008  00001aa8  1420000c	bnez	r1,L48_LF2
 1009  00001aac  54000000	nop; delay slot nop
 1010  00001ab0  08000070	j	L47_LF2
 1011  00001ab4  54000000	nop; delay slot nop
 1012  00001ab8          	L48_LF2:
 1013  00001ab8  8fc10004	lw	r1,4(r30)
 1014  00001abc  afc1fff4	sw	-12(r30),r1
 1015  00001ac0          	L49_LF2:
 1016  00001ac0  8fc1fff4	lw	r1,-12(r30)
 1017  00001ac4  90220000	lbu	r2,(r1)
 1018  00001ac8  64410000	snei	r1,r2,#0
 1019  00001acc  1420000c	bnez	r1,L52_LF2
 1020  00001ad0  54000000	nop; delay slot nop
 1021  00001ad4  08000044	j	L50_LF2
 1022  00001ad8  54000000	nop; delay slot nop
 1023  00001adc          	L52_LF2:
 1024  00001adc  8fc10000	lw	r1,(r30)
 1025  00001ae0  8fc2fff4	lw	r2,-12(r30)
 1026  00001ae4  90210000	lbu	r1,(r1)
 1027  00001ae8  90420000	lbu	r2,(r2)
 1028  00001aec  00220828	seq	r1,r1,r2
 1029  00001af0  10200010	beqz	r1,L51_LF2
 1030  00001af4  54000000	nop; delay slot nop
 1031  00001af8  8fc10000	lw	r1,(r30)
 1032  00001afc  08000030	j	L45_LF2
 1033  00001b00  54000000	nop; delay slot nop
 1034  00001b04          	L53_LF2:
 1035  00001b04          	L51_LF2:
 1036  00001b04  8fc2fff4	lw	r2,-12(r30)
 1037  00001b08  20410001	addi	r1,r2,#1
 1038  00001b0c  00011020	add	r2,r0,r1
 1039  00001b10  afc2fff4	sw	-12(r30),r2
 1040  00001b14  0bffffa8	j	L49_LF2
 1041  00001b18  54000000	nop; delay slot nop
 1042  00001b1c          	L50_LF2:
 1043  00001b1c  0bffff7c	j	L46_LF2
 1044  00001b20  54000000	nop; delay slot nop
 1045  00001b24          	L47_LF2:
 1046  00001b24  20010000	addi	r1,r0,#0
 1047  00001b28  08000004	j	L45_LF2
 1048  00001b2c  54000000	nop; delay slot nop
 1049  00001b30          	L45_LF2:
 1050  00001b30  8fa20000	lw	r2,0(r29)
 1051  00001b34  8fdffff8	lw	r31,-8(r30)
 1052  00001b38  001ee820	add	r29,r0,r30
 1053  00001b3c  8fdefffc	lw	r30,-4(r30)
 1054  00001b40  4be00000	jr	r31
 1055  00001b44  54000000	nop
 1056  00001b48          	.endproc _dmindex
 1057  00001b48          	.align 2
 1058  00001b48          	.proc _dindex
 1059  00001b48          	.global _dindex
 1060  00001b48          	_dindex:
 1061                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1062  00001b48  afbefffc	sw	-4(r29),r30; push fp
 1063  00001b4c  001df020	add	r30,r0,r29; fp = sp
 1064  00001b50  afbffff8	sw	-8(r29),r31; push ret addr
 1065  00001b54  2fbd0010	subui	r29,r29,#16; alloc local storage
 1066  00001b58  afa20000	sw	0(r29),r2
 1067  00001b5c  54000000	nop
 1068  00001b60          	L55_LF2:
 1069  00001b60  8fc10000	lw	r1,(r30)
 1070  00001b64  90220000	lbu	r2,(r1)
 1071  00001b68  64410000	snei	r1,r2,#0
 1072  00001b6c  1420000c	bnez	r1,L57_LF2
 1073  00001b70  54000000	nop; delay slot nop
 1074  00001b74  08000040	j	L56_LF2
 1075  00001b78  54000000	nop; delay slot nop
 1076  00001b7c          	L57_LF2:
 1077  00001b7c  8fc10000	lw	r1,(r30)
 1078  00001b80  90220000	lbu	r2,(r1)
 1079  00001b84  8fc10004	lw	r1,4(r30)
 1080  00001b88  00411028	seq	r2,r2,r1
 1081  00001b8c  10400010	beqz	r2,L58_LF2
 1082  00001b90  54000000	nop; delay slot nop
 1083  00001b94  8fc10000	lw	r1,(r30)
 1084  00001b98  08000028	j	L54_LF2
 1085  00001b9c  54000000	nop; delay slot nop
 1086  00001ba0          	L58_LF2:
 1087  00001ba0  8fc20000	lw	r2,(r30)
 1088  00001ba4  20410001	addi	r1,r2,#1
 1089  00001ba8  00011020	add	r2,r0,r1
 1090  00001bac  afc20000	sw	(r30),r2
 1091  00001bb0  0bffffac	j	L55_LF2
 1092  00001bb4  54000000	nop; delay slot nop
 1093  00001bb8          	L56_LF2:
 1094  00001bb8  20010000	addi	r1,r0,#0
 1095  00001bbc  08000004	j	L54_LF2
 1096  00001bc0  54000000	nop; delay slot nop
 1097  00001bc4          	L54_LF2:
 1098  00001bc4  8fa20000	lw	r2,0(r29)
 1099  00001bc8  8fdffff8	lw	r31,-8(r30)
 1100  00001bcc  001ee820	add	r29,r0,r30
 1101  00001bd0  8fdefffc	lw	r30,-4(r30)
 1102  00001bd4  4be00000	jr	r31
 1103  00001bd8  54000000	nop
 1104  00001bdc          	.endproc _dindex
 1105  00001bdc          	.align 2
 1106  00001bdc          	.proc _ditoa
 1107  00001bdc          	.global _ditoa
 1108  00001bdc          	_ditoa:
 1109                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1110  00001bdc  afbefffc	sw	-4(r29),r30; push fp
 1111  00001be0  001df020	add	r30,r0,r29; fp = sp
 1112  00001be4  afbffff8	sw	-8(r29),r31; push ret addr
 1113  00001be8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1114  00001bec  afa20000	sw	0(r29),r2
 1115  00001bf0  afa30004	sw	4(r29),r3
 1116  00001bf4  8fc10000	lw	r1,(r30)
 1117  00001bf8  68220000	slti	r2,r1,#0
 1118  00001bfc  1040002c	beqz	r2,L60_LF2
 1119  00001c00  54000000	nop; delay slot nop
 1120  00001c04  8fc10004	lw	r1,4(r30)
 1121  00001c08  20220001	addi	r2,r1,#1
 1122  00001c0c  afc20004	sw	4(r30),r2
 1123  00001c10  2002002d	addi	r2,r0,(#0x2d)&0xff
 1124  00001c14  a0220000	sb	(r1),r2
 1125  00001c18  8fc10000	lw	r1,(r30)
 1126  00001c1c  00011022	sub	r2,r0,r1
 1127  00001c20  afc20000	sw	(r30),r2
 1128  00001c24  08000118	j	L61_LF2
 1129  00001c28  54000000	nop; delay slot nop
 1130  00001c2c          	L60_LF2:
 1131  00001c2c  8fc10000	lw	r1,(r30)
 1132  00001c30  64220000	snei	r2,r1,#0
 1133  00001c34  14400020	bnez	r2,L62_LF2
 1134  00001c38  54000000	nop; delay slot nop
 1135  00001c3c  8fc10004	lw	r1,4(r30)
 1136  00001c40  20220001	addi	r2,r1,#1
 1137  00001c44  afc20004	sw	4(r30),r2
 1138  00001c48  20020030	addi	r2,r0,(#0x30)&0xff
 1139  00001c4c  a0220000	sb	(r1),r2
 1140  00001c50  080000ec	j	L61_LF2
 1141  00001c54  54000000	nop; delay slot nop
 1142  00001c58          	L62_LF2:
 1143  00001c58  20010001	addi	r1,r0,#1
 1144  00001c5c  afc1fff4	sw	-12(r30),r1
 1145  00001c60          	L64_LF2:
 1146  00001c60  8fc1fff4	lw	r1,-12(r30)
 1147  00001c64  8fc20000	lw	r2,(r30)
 1148  00001c68  0022082c	sle	r1,r1,r2
 1149  00001c6c  1420000c	bnez	r1,L66_LF2
 1150  00001c70  54000000	nop; delay slot nop
 1151  00001c74  08000024	j	L65_LF2
 1152  00001c78  54000000	nop; delay slot nop
 1153  00001c7c          	L67_LF2:
 1154  00001c7c          	L66_LF2:
 1155  00001c7c  8fc1fff4	lw	r1,-12(r30)
 1156  00001c80  00011820	add	r3,r0,r1
 1157  00001c84  50620002	slli	r2,r3,#0x2
 1158  00001c88  00411020	add	r2,r2,r1
 1159  00001c8c  50410001	slli	r1,r2,#0x1
 1160  00001c90  afc1fff4	sw	-12(r30),r1
 1161  00001c94  0bffffc8	j	L64_LF2
 1162  00001c98  54000000	nop; delay slot nop
 1163  00001c9c          	L65_LF2:
 1164  00001c9c  54000000	nop
 1165  00001ca0          	L68_LF2:
 1166  00001ca0  8fc1fff4	lw	r1,-12(r30)
 1167  00001ca4  2002000a	addi	r2,r0,#10
 1168  00001ca8  00200035	movi2fp	f0,r1
 1169  00001cac  00400835	movi2fp	f1,r2
 1170  00001cb0  0401000f	div	f0,f0,f1
 1171  00001cb4  00000834	movfp2i	r1,f0
 1172  00001cb8  afc1fff4	sw	-12(r30),r1
 1173  00001cbc  8fc10004	lw	r1,4(r30)
 1174  00001cc0  20220001	addi	r2,r1,#1
 1175  00001cc4  afc20004	sw	4(r30),r2
 1176  00001cc8  8fc20000	lw	r2,(r30)
 1177  00001ccc  8fc3fff4	lw	r3,-12(r30)
 1178  00001cd0  00400035	movi2fp	f0,r2
 1179  00001cd4  00600835	movi2fp	f1,r3
 1180  00001cd8  0401000f	div	f0,f0,f1
 1181  00001cdc  00001034	movfp2i	r2,f0
 1182  00001ce0  00021820	add	r3,r0,r2
 1183  00001ce4  20620030	addi	r2,r3,#48
 1184  00001ce8  a0220000	sb	(r1),r2
 1185  00001cec  8fc10000	lw	r1,(r30)
 1186  00001cf0  8fc3fff4	lw	r3,-12(r30)
 1187  00001cf4  00200035	movi2fp	f0,r1
 1188  00001cf8  00600835	movi2fp	f1,r3
 1189  00001cfc  0401000f	div	f0,f0,f1
 1190  00001d00  00001034	movfp2i	r2,f0
 1191  00001d04  8fc3fff4	lw	r3,-12(r30)
 1192  00001d08  00400035	movi2fp	f0,r2
 1193  00001d0c  00600835	movi2fp	f1,r3
 1194  00001d10  0401000e	mult	f0,f0,f1
 1195  00001d14  00001034	movfp2i	r2,f0
 1196  00001d18  00220822	sub	r1,r1,r2
 1197  00001d1c  afc10000	sw	(r30),r1
 1198  00001d20          	L70_LF2:
 1199  00001d20  8fc1fff4	lw	r1,-12(r30)
 1200  00001d24  6c220001	sgti	r2,r1,#1
 1201  00001d28  1440000c	bnez	r2,L71_LF2
 1202  00001d2c  54000000	nop; delay slot nop
 1203  00001d30  0800000c	j	L61_LF2
 1204  00001d34  54000000	nop; delay slot nop
 1205  00001d38          	L71_LF2:
 1206  00001d38  0bffff64	j	L68_LF2
 1207  00001d3c  54000000	nop; delay slot nop
 1208  00001d40          	L69_LF2:
 1209  00001d40          	L63_LF2:
 1210  00001d40          	L61_LF2:
 1211  00001d40  8fc10004	lw	r1,4(r30)
 1212  00001d44  20020000	addi	r2,r0,(#0x0)&0xff
 1213  00001d48  a0220000	sb	(r1),r2
 1214  00001d4c          	L59_LF2:
 1215  00001d4c  8fa20000	lw	r2,0(r29)
 1216  00001d50  8fa30004	lw	r3,4(r29)
 1217  00001d54  8fdffff8	lw	r31,-8(r30)
 1218  00001d58  001ee820	add	r29,r0,r30
 1219  00001d5c  8fdefffc	lw	r30,-4(r30)
 1220  00001d60  4be00000	jr	r31
 1221  00001d64  54000000	nop
 1222  00001d68          	.endproc _ditoa
 1223  00001d68          	.align 2
 1224  00001d68          	.proc _dstrtol
 1225  00001d68          	.global _dstrtol
 1226  00001d68          	_dstrtol:
 1227                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1228  00001d68  afbefffc	sw	-4(r29),r30; push fp
 1229  00001d6c  001df020	add	r30,r0,r29; fp = sp
 1230  00001d70  afbffff8	sw	-8(r29),r31; push ret addr
 1231  00001d74  2fbd0020	subui	r29,r29,#32; alloc local storage
 1232  00001d78  afa20000	sw	0(r29),r2
 1233  00001d7c  20010000	addi	r1,r0,#0
 1234  00001d80  afc1fff4	sw	-12(r30),r1
 1235  00001d84          	L73_LF2:
 1236  00001d84  8fc10000	lw	r1,(r30)
 1237  00001d88  90220000	lbu	r2,(r1)
 1238  00001d8c  60410020	seqi	r1,r2,#32
 1239  00001d90  14200034	bnez	r1,L75_LF2
 1240  00001d94  54000000	nop; delay slot nop
 1241  00001d98  8fc10000	lw	r1,(r30)
 1242  00001d9c  90220000	lbu	r2,(r1)
 1243  00001da0  60410009	seqi	r1,r2,#9
 1244  00001da4  14200020	bnez	r1,L75_LF2
 1245  00001da8  54000000	nop; delay slot nop
 1246  00001dac  8fc10000	lw	r1,(r30)
 1247  00001db0  90220000	lbu	r2,(r1)
 1248  00001db4  6041000a	seqi	r1,r2,#10
 1249  00001db8  1420000c	bnez	r1,L75_LF2
 1250  00001dbc  54000000	nop; delay slot nop
 1251  00001dc0  0800001c	j	L74_LF2
 1252  00001dc4  54000000	nop; delay slot nop
 1253  00001dc8          	L75_LF2:
 1254  00001dc8  8fc20000	lw	r2,(r30)
 1255  00001dcc  20410001	addi	r1,r2,#1
 1256  00001dd0  00011020	add	r2,r0,r1
 1257  00001dd4  afc20000	sw	(r30),r2
 1258  00001dd8  0bffffa8	j	L73_LF2
 1259  00001ddc  54000000	nop; delay slot nop
 1260  00001de0          	L74_LF2:
 1261  00001de0  8fc10004	lw	r1,4(r30)
 1262  00001de4  64220000	snei	r2,r1,#0
 1263  00001de8  10400010	beqz	r2,L76_LF2
 1264  00001dec  54000000	nop; delay slot nop
 1265  00001df0  8fc10004	lw	r1,4(r30)
 1266  00001df4  8fc20000	lw	r2,(r30)
 1267  00001df8  ac220000	sw	(r1),r2
 1268  00001dfc          	L76_LF2:
 1269  00001dfc  8fc10000	lw	r1,(r30)
 1270  00001e00  90220000	lbu	r2,(r1)
 1271  00001e04  64410000	snei	r1,r2,#0
 1272  00001e08  14200010	bnez	r1,L77_LF2
 1273  00001e0c  54000000	nop; delay slot nop
 1274  00001e10  8fc1fff4	lw	r1,-12(r30)
 1275  00001e14  08000294	j	L72_LF2
 1276  00001e18  54000000	nop; delay slot nop
 1277  00001e1c          	L77_LF2:
 1278  00001e1c  8fc10000	lw	r1,(r30)
 1279  00001e20  90220000	lbu	r2,(r1)
 1280  00001e24  6041002d	seqi	r1,r2,#45
 1281  00001e28  10200024	beqz	r1,L78_LF2
 1282  00001e2c  54000000	nop; delay slot nop
 1283  00001e30  2001ffff	addi	r1,r0,#-1
 1284  00001e34  afc1ffec	sw	-20(r30),r1
 1285  00001e38  8fc20000	lw	r2,(r30)
 1286  00001e3c  20410001	addi	r1,r2,#1
 1287  00001e40  00011020	add	r2,r0,r1
 1288  00001e44  afc20000	sw	(r30),r2
 1289  00001e48  0800000c	j	L79_LF2
 1290  00001e4c  54000000	nop; delay slot nop
 1291  00001e50          	L78_LF2:
 1292  00001e50  20010001	addi	r1,r0,#1
 1293  00001e54  afc1ffec	sw	-20(r30),r1
 1294  00001e58          	L79_LF2:
 1295  00001e58  8fc10008	lw	r1,8(r30)
 1296  00001e5c  64220000	snei	r2,r1,#0
 1297  00001e60  14400090	bnez	r2,L80_LF2
 1298  00001e64  54000000	nop; delay slot nop
 1299  00001e68  8fc10000	lw	r1,(r30)
 1300  00001e6c  90220000	lbu	r2,(r1)
 1301  00001e70  60410030	seqi	r1,r2,#48
 1302  00001e74  10200074	beqz	r1,L81_LF2
 1303  00001e78  54000000	nop; delay slot nop
 1304  00001e7c  8fc20000	lw	r2,(r30)
 1305  00001e80  20410001	addi	r1,r2,#1
 1306  00001e84  00011020	add	r2,r0,r1
 1307  00001e88  afc20000	sw	(r30),r2
 1308  00001e8c  8fc10000	lw	r1,(r30)
 1309  00001e90  90220000	lbu	r2,(r1)
 1310  00001e94  60410078	seqi	r1,r2,#120
 1311  00001e98  14200020	bnez	r1,L83_LF2
 1312  00001e9c  54000000	nop; delay slot nop
 1313  00001ea0  8fc10000	lw	r1,(r30)
 1314  00001ea4  90220000	lbu	r2,(r1)
 1315  00001ea8  60410058	seqi	r1,r2,#88
 1316  00001eac  1420000c	bnez	r1,L83_LF2
 1317  00001eb0  54000000	nop; delay slot nop
 1318  00001eb4  08000024	j	L82_LF2
 1319  00001eb8  54000000	nop; delay slot nop
 1320  00001ebc          	L83_LF2:
 1321  00001ebc  20010010	addi	r1,r0,#16
 1322  00001ec0  afc10008	sw	8(r30),r1
 1323  00001ec4  8fc20000	lw	r2,(r30)
 1324  00001ec8  20410001	addi	r1,r2,#1
 1325  00001ecc  00011020	add	r2,r0,r1
 1326  00001ed0  afc20000	sw	(r30),r2
 1327  00001ed4  0800000c	j	L84_LF2
 1328  00001ed8  54000000	nop; delay slot nop
 1329  00001edc          	L82_LF2:
 1330  00001edc  20010008	addi	r1,r0,#8
 1331  00001ee0  afc10008	sw	8(r30),r1
 1332  00001ee4          	L84_LF2:
 1333  00001ee4  0800000c	j	L80_LF2
 1334  00001ee8  54000000	nop; delay slot nop
 1335  00001eec          	L81_LF2:
 1336  00001eec  2001000a	addi	r1,r0,#10
 1337  00001ef0  afc10008	sw	8(r30),r1
 1338  00001ef4          	L85_LF2:
 1339  00001ef4          	L80_LF2:
 1340  00001ef4  8fc10008	lw	r1,8(r30)
 1341  00001ef8  70220000	slei	r2,r1,#0
 1342  00001efc  1440001c	bnez	r2,L87_LF2
 1343  00001f00  54000000	nop; delay slot nop
 1344  00001f04  8fc10008	lw	r1,8(r30)
 1345  00001f08  6c220010	sgti	r2,r1,#16
 1346  00001f0c  1440000c	bnez	r2,L87_LF2
 1347  00001f10  54000000	nop; delay slot nop
 1348  00001f14  08000010	j	L86_LF2
 1349  00001f18  54000000	nop; delay slot nop
 1350  00001f1c          	L87_LF2:
 1351  00001f1c  8fc1fff4	lw	r1,-12(r30)
 1352  00001f20  08000188	j	L72_LF2
 1353  00001f24  54000000	nop; delay slot nop
 1354  00001f28          	L86_LF2:
 1355  00001f28  54000000	nop
 1356  00001f2c          	L88_LF2:
 1357  00001f2c  8fc10000	lw	r1,(r30)
 1358  00001f30  90220000	lbu	r2,(r1)
 1359  00001f34  6c41002f	sgtui	r1,r2,#47
 1360  00001f38  10200030	beqz	r1,L91_LF2
 1361  00001f3c  54000000	nop; delay slot nop
 1362  00001f40  8fc10000	lw	r1,(r30)
 1363  00001f44  90220000	lbu	r2,(r1)
 1364  00001f48  70410039	sleui	r1,r2,#57
 1365  00001f4c  1020001c	beqz	r1,L91_LF2
 1366  00001f50  54000000	nop; delay slot nop
 1367  00001f54  8fc10000	lw	r1,(r30)
 1368  00001f58  90220000	lbu	r2,(r1)
 1369  00001f5c  2041ffd0	addi	r1,r2,#-48
 1370  00001f60  afc1fff0	sw	-16(r30),r1
 1371  00001f64  0800008c	j	L92_LF2
 1372  00001f68  54000000	nop; delay slot nop
 1373  00001f6c          	L91_LF2:
 1374  00001f6c  8fc10000	lw	r1,(r30)
 1375  00001f70  90220000	lbu	r2,(r1)
 1376  00001f74  6c410060	sgtui	r1,r2,#96
 1377  00001f78  10200030	beqz	r1,L93_LF2
 1378  00001f7c  54000000	nop; delay slot nop
 1379  00001f80  8fc10000	lw	r1,(r30)
 1380  00001f84  90220000	lbu	r2,(r1)
 1381  00001f88  7041007a	sleui	r1,r2,#122
 1382  00001f8c  1020001c	beqz	r1,L93_LF2
 1383  00001f90  54000000	nop; delay slot nop
 1384  00001f94  8fc10000	lw	r1,(r30)
 1385  00001f98  90220000	lbu	r2,(r1)
 1386  00001f9c  2041ffa9	addi	r1,r2,#-87
 1387  00001fa0  afc1fff0	sw	-16(r30),r1
 1388  00001fa4  0800004c	j	L92_LF2
 1389  00001fa8  54000000	nop; delay slot nop
 1390  00001fac          	L93_LF2:
 1391  00001fac  8fc10000	lw	r1,(r30)
 1392  00001fb0  90220000	lbu	r2,(r1)
 1393  00001fb4  6c410040	sgtui	r1,r2,#64
 1394  00001fb8  10200030	beqz	r1,L95_LF2
 1395  00001fbc  54000000	nop; delay slot nop
 1396  00001fc0  8fc10000	lw	r1,(r30)
 1397  00001fc4  90220000	lbu	r2,(r1)
 1398  00001fc8  7041005a	sleui	r1,r2,#90
 1399  00001fcc  1020001c	beqz	r1,L95_LF2
 1400  00001fd0  54000000	nop; delay slot nop
 1401  00001fd4  8fc10000	lw	r1,(r30)
 1402  00001fd8  90220000	lbu	r2,(r1)
 1403  00001fdc  2041ffc9	addi	r1,r2,#-55
 1404  00001fe0  afc1fff0	sw	-16(r30),r1
 1405  00001fe4  0800000c	j	L92_LF2
 1406  00001fe8  54000000	nop; delay slot nop
 1407  00001fec          	L95_LF2:
 1408  00001fec  200103e8	addi	r1,r0,#1000
 1409  00001ff0  afc1fff0	sw	-16(r30),r1
 1410  00001ff4          	L96_LF2:
 1411  00001ff4          	L94_LF2:
 1412  00001ff4          	L92_LF2:
 1413  00001ff4  8fc1fff0	lw	r1,-16(r30)
 1414  00001ff8  8fc20008	lw	r2,8(r30)
 1415  00001ffc  0022082a	slt	r1,r1,r2
 1416  00002000  10200040	beqz	r1,L90_LF2
 1417  00002004  54000000	nop; delay slot nop
 1418  00002008  8fc1fff4	lw	r1,-12(r30)
 1419  0000200c  8fc20008	lw	r2,8(r30)
 1420  00002010  00200035	movi2fp	f0,r1
 1421  00002014  00400835	movi2fp	f1,r2
 1422  00002018  0401000e	mult	f0,f0,f1
 1423  0000201c  00000834	movfp2i	r1,f0
 1424  00002020  afc1fff4	sw	-12(r30),r1
 1425  00002024  8fc1fff4	lw	r1,-12(r30)
 1426  00002028  8fc2fff0	lw	r2,-16(r30)
 1427  0000202c  00220820	add	r1,r1,r2
 1428  00002030  afc1fff4	sw	-12(r30),r1
 1429  00002034  8fc20000	lw	r2,(r30)
 1430  00002038  20410001	addi	r1,r2,#1
 1431  0000203c  00011020	add	r2,r0,r1
 1432  00002040  afc20000	sw	(r30),r2
 1433  00002044          	L97_LF2:
 1434  00002044          	L90_LF2:
 1435  00002044  8fc1fff0	lw	r1,-16(r30)
 1436  00002048  8fc20008	lw	r2,8(r30)
 1437  0000204c  0022082a	slt	r1,r1,r2
 1438  00002050  1420000c	bnez	r1,L98_LF2
 1439  00002054  54000000	nop; delay slot nop
 1440  00002058  0800000c	j	L89_LF2
 1441  0000205c  54000000	nop; delay slot nop
 1442  00002060          	L98_LF2:
 1443  00002060  0bfffec8	j	L88_LF2
 1444  00002064  54000000	nop; delay slot nop
 1445  00002068          	L89_LF2:
 1446  00002068  8fc10004	lw	r1,4(r30)
 1447  0000206c  64220000	snei	r2,r1,#0
 1448  00002070  10400010	beqz	r2,L99_LF2
 1449  00002074  54000000	nop; delay slot nop
 1450  00002078  8fc10004	lw	r1,4(r30)
 1451  0000207c  8fc20000	lw	r2,(r30)
 1452  00002080  ac220000	sw	(r1),r2
 1453  00002084          	L99_LF2:
 1454  00002084  8fc1fff4	lw	r1,-12(r30)
 1455  00002088  8fc2ffec	lw	r2,-20(r30)
 1456  0000208c  00200035	movi2fp	f0,r1
 1457  00002090  00400835	movi2fp	f1,r2
 1458  00002094  0401000e	mult	f0,f0,f1
 1459  00002098  00000834	movfp2i	r1,f0
 1460  0000209c  afc1fff4	sw	-12(r30),r1
 1461  000020a0  8fc1fff4	lw	r1,-12(r30)
 1462  000020a4  08000004	j	L72_LF2
 1463  000020a8  54000000	nop; delay slot nop
 1464  000020ac          	L72_LF2:
 1465  000020ac  8fa20000	lw	r2,0(r29)
 1466  000020b0  8fdffff8	lw	r31,-8(r30)
 1467  000020b4  001ee820	add	r29,r0,r30
 1468  000020b8  8fdefffc	lw	r30,-4(r30)
 1469  000020bc  4be00000	jr	r31
 1470  000020c0  54000000	nop
 1471  000020c4          	.endproc _dstrtol
 1472  000020c4          	.align 2
 1473  000020c4          	.proc _bcopy
 1474  000020c4          	.global _bcopy
 1475  000020c4          	_bcopy:
 1476                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1477  000020c4  afbefffc	sw	-4(r29),r30; push fp
 1478  000020c8  001df020	add	r30,r0,r29; fp = sp
 1479  000020cc  afbffff8	sw	-8(r29),r31; push ret addr
 1480  000020d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1481  000020d4  afa20000	sw	0(r29),r2
 1482  000020d8  afa30004	sw	4(r29),r3
 1483  000020dc  54000000	nop
 1484  000020e0          	L101_LF2:
 1485  000020e0  8fc10008	lw	r1,8(r30)
 1486  000020e4  2022ffff	addi	r2,r1,#-1
 1487  000020e8  afc20008	sw	8(r30),r2
 1488  000020ec  6c210000	sgti	r1,r1,#0
 1489  000020f0  1420000c	bnez	r1,L103_LF2
 1490  000020f4  54000000	nop; delay slot nop
 1491  000020f8  0800002c	j	L102_LF2
 1492  000020fc  54000000	nop; delay slot nop
 1493  00002100          	L103_LF2:
 1494  00002100  8fc10004	lw	r1,4(r30)
 1495  00002104  20220001	addi	r2,r1,#1
 1496  00002108  afc20004	sw	4(r30),r2
 1497  0000210c  8fc20000	lw	r2,(r30)
 1498  00002110  20430001	addi	r3,r2,#1
 1499  00002114  afc30000	sw	(r30),r3
 1500  00002118  80420000	lb	r2,(r2)
 1501  0000211c  a0220000	sb	(r1),r2
 1502  00002120  0bffffbc	j	L101_LF2
 1503  00002124  54000000	nop; delay slot nop
 1504  00002128          	L102_LF2:
 1505  00002128          	L100_LF2:
 1506  00002128  8fa20000	lw	r2,0(r29)
 1507  0000212c  8fa30004	lw	r3,4(r29)
 1508  00002130  8fdffff8	lw	r31,-8(r30)
 1509  00002134  001ee820	add	r29,r0,r30
 1510  00002138  8fdefffc	lw	r30,-4(r30)
 1511  0000213c  4be00000	jr	r31
 1512  00002140  54000000	nop
 1513  00002144          	.endproc _bcopy
 1514  00002144          	.align 2
 1515  00002144          	.proc _bzero
 1516  00002144          	.global _bzero
 1517  00002144          	_bzero:
 1518                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1519  00002144  afbefffc	sw	-4(r29),r30; push fp
 1520  00002148  001df020	add	r30,r0,r29; fp = sp
 1521  0000214c  afbffff8	sw	-8(r29),r31; push ret addr
 1522  00002150  2fbd0010	subui	r29,r29,#16; alloc local storage
 1523  00002154  afa20000	sw	0(r29),r2
 1524  00002158  54000000	nop
 1525  0000215c          	L105_LF2:
 1526  0000215c  8fc10004	lw	r1,4(r30)
 1527  00002160  2022ffff	addi	r2,r1,#-1
 1528  00002164  afc20004	sw	4(r30),r2
 1529  00002168  6c210000	sgti	r1,r1,#0
 1530  0000216c  1420000c	bnez	r1,L107_LF2
 1531  00002170  54000000	nop; delay slot nop
 1532  00002174  08000020	j	L106_LF2
 1533  00002178  54000000	nop; delay slot nop
 1534  0000217c          	L107_LF2:
 1535  0000217c  8fc10000	lw	r1,(r30)
 1536  00002180  20220001	addi	r2,r1,#1
 1537  00002184  afc20000	sw	(r30),r2
 1538  00002188  20020000	addi	r2,r0,(#0x0)&0xff
 1539  0000218c  a0220000	sb	(r1),r2
 1540  00002190  0bffffc8	j	L105_LF2
 1541  00002194  54000000	nop; delay slot nop
 1542  00002198          	L106_LF2:
 1543  00002198          	L104_LF2:
 1544  00002198  8fa20000	lw	r2,0(r29)
 1545  0000219c  8fdffff8	lw	r31,-8(r30)
 1546  000021a0  001ee820	add	r29,r0,r30
 1547  000021a4  8fdefffc	lw	r30,-4(r30)
 1548  000021a8  4be00000	jr	r31
 1549  000021ac  54000000	nop
 1550  000021b0          	.endproc _bzero
 1551  000021b0          	.align 2
 1552  000021b0          	.proc _min
 1553  000021b0          	.global _min
 1554  000021b0          	_min:
 1555                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1556  000021b0  afbefffc	sw	-4(r29),r30; push fp
 1557  000021b4  001df020	add	r30,r0,r29; fp = sp
 1558  000021b8  afbffff8	sw	-8(r29),r31; push ret addr
 1559  000021bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1560  000021c0  afa20000	sw	0(r29),r2
 1561  000021c4  afa30004	sw	4(r29),r3
 1562  000021c8  8fc10000	lw	r1,(r30)
 1563  000021cc  8fc20004	lw	r2,4(r30)
 1564  000021d0  0022182c	sle	r3,r1,r2
 1565  000021d4  14600008	bnez	r3,L109_LF2
 1566  000021d8  54000000	nop; delay slot nop
 1567  000021dc  8fc10004	lw	r1,4(r30)
 1568  000021e0          	L109_LF2:
 1569  000021e0  08000004	j	L108_LF2
 1570  000021e4  54000000	nop; delay slot nop
 1571  000021e8          	L108_LF2:
 1572  000021e8  8fa20000	lw	r2,0(r29)
 1573  000021ec  8fa30004	lw	r3,4(r29)
 1574  000021f0  8fdffff8	lw	r31,-8(r30)
 1575  000021f4  001ee820	add	r29,r0,r30
 1576  000021f8  8fdefffc	lw	r30,-4(r30)
 1577  000021fc  4be00000	jr	r31
 1578  00002200  54000000	nop
 1579  00002204          	.endproc _min
 1580  00002204          	.align 2
 1581  00002204          	.proc _max
 1582  00002204          	.global _max
 1583  00002204          	_max:
 1584                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1585  00002204  afbefffc	sw	-4(r29),r30; push fp
 1586  00002208  001df020	add	r30,r0,r29; fp = sp
 1587  0000220c  afbffff8	sw	-8(r29),r31; push ret addr
 1588  00002210  2fbd0010	subui	r29,r29,#16; alloc local storage
 1589  00002214  afa20000	sw	0(r29),r2
 1590  00002218  afa30004	sw	4(r29),r3
 1591  0000221c  8fc10000	lw	r1,(r30)
 1592  00002220  8fc20004	lw	r2,4(r30)
 1593  00002224  0022182d	sge	r3,r1,r2
 1594  00002228  14600008	bnez	r3,L111_LF2
 1595  0000222c  54000000	nop; delay slot nop
 1596  00002230  8fc10004	lw	r1,4(r30)
 1597  00002234          	L111_LF2:
 1598  00002234  08000004	j	L110_LF2
 1599  00002238  54000000	nop; delay slot nop
 1600  0000223c          	L110_LF2:
 1601  0000223c  8fa20000	lw	r2,0(r29)
 1602  00002240  8fa30004	lw	r3,4(r29)
 1603  00002244  8fdffff8	lw	r31,-8(r30)
 1604  00002248  001ee820	add	r29,r0,r30
 1605  0000224c  8fdefffc	lw	r30,-4(r30)
 1606  00002250  4be00000	jr	r31
 1607  00002254  54000000	nop
 1608  00002258          	.endproc _max
 1609                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1610                      ;;;
 1611                      ;;; Most of the traps are called in files from libtraps.
 1614  00002258          	.align 2
 1615  00002258          	.proc _exit
 1616  00002258          	.global _exit
 1617  00002258          	_exit:
 1618  00002258  44000300	trap	#0x300
 1619  0000225c  4be00000	jr	r31
 1620  00002260  54000000	nop
 1621  00002264          	.endproc _exit
 1623                      ; for the benefit of gcc.
 1624  00002264          	.proc ___main
 1625  00002264          	.global ___main
 1626  00002264          	___main:
 1627  00002264  4be00000	jr	r31
 1628  00002268  54000000	nop
 1629  0000226c          	.endproc ___main
 1630  0000226c          	.text
 1631  0000226c          	.global _etext
 1632  0000226c          	_etext:
 1633  0000226c          	.align 3
 1634  00002270          	.data
 1635  000030b2          	.global _edata
 1636  000030b2          	_edata:
