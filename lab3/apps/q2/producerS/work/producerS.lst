 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 210
    4                      ; Text size: 4816
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  496e636f	.ascii "Incorrect args (%d) for: \000"
   82  00003004  72726563	
   82  00003008  74206172	
   82  0000300c  67732028	
   82  00003010  25642920	
   82  00003014  666f723a	
   82  00003018  2000    	
   83  0000301a          	.align 2
   84  0000301c          	LC1_LF0:
   85  0000301c  0a00    	.ascii "\n\000"
   86  0000301e          	.align 2
   87  00003020          	LC2_LF0:
   88  00003020  41726775	.ascii "Arguments included:\n\000"
   88  00003024  6d656e74	
   88  00003028  7320696e	
   88  0000302c  636c7564	
   88  00003030  65643a0a	
   88  00003034  00      	
   89  00003035          	.align 2
   90  00003038          	LC3_LF0:
   91  00003038  25642920	.ascii "%d) %s\n\000"
   91  0000303c  25730a00	
   92  00003040          	.align 2
   93  00003040          	LC4_LF0:
   94  00003040  42616420	.ascii "Bad mbox_open in \000"
   94  00003044  6d626f78	
   94  00003048  5f6f7065	
   94  0000304c  6e20696e	
   94  00003050  2000    	
   95  00003052          	.align 2
   96  00003054          	LC5_LF0:
   97  00003054  42616420	.ascii "Bad mbox_send in \000"
   97  00003058  6d626f78	
   97  0000305c  5f73656e	
   97  00003060  6420696e	
   97  00003064  2000    	
   98  00003066          	.align 2
   99  00003068          	LC6_LF0:
  100  00003068  53322069	.ascii "S2 injected into Radeon atmosphere, PID: %d \n\000"
  100  0000306c  6e6a6563	
  100  00003070  74656420	
  100  00003074  696e746f	
  100  00003078  20526164	
  100  0000307c  656f6e20	
  100  00003080  61746d6f	
  100  00003084  73706865	
  100  00003088  72652c20	
  100  0000308c  5049443a	
  100  00003090  20256420	
  100  00003094  0a00    	
  101  00003096          	.align 2
  102  00003098          	LC7_LF0:
  103  00003098  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
  103  0000309c  73656d61	
  103  000030a0  70686f72	
  103  000030a4  65207365	
  103  000030a8  6d5f7072	
  103  000030ac  6f63735f	
  103  000030b0  636f6d70	
  103  000030b4  6c657465	
  103  000030b8  64202825	
  103  000030bc  64292069	
  103  000030c0  6e2000  	
  104  000030c3          	.align 2
  105  000030c4          	LC8_LF0:
  106  000030c4  2c206578	.ascii ", exiting...\n\000"
  106  000030c8  6974696e	
  106  000030cc  672e2e2e	
  106  000030d0  0a00    	
  107  000030d2          	.text
  108  000010d4          	.align 2
  109  000010d4          	.proc _main
  110  000010d4          	.global _main
  111  000010d4          	_main:
  112                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  113  000010d4  afbefffc	sw	-4(r29),r30; push fp
  114  000010d8  001df020	add	r30,r0,r29; fp = sp
  115  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  116  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  117  000010e4  8fc40000	lw	r4,(r30)
  118  000010e8  8fc50004	lw	r5,4(r30)
  119  000010ec  0c0011d8	jal	___main
  120  000010f0  54000000	nop; not filled.
  121  000010f4  64810004	snei	r1,r4,#4
  122  000010f8  102000b4	beqz	r1,L14_LF0
  123  000010fc  54000000	nop; not filled.
  124  00001100  23bdfff8	addi	r29,r29,#-8
  125  00001104  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  126  00001108  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  127  0000110c  afa80000	sw	(r29),r8
  128  00001110  afa40004	sw	4(r29),r4
  129  00001114  0c000300	jal	_Printf
  130  00001118  54000000	nop; not filled.
  131  0000111c  8ca80000	lw	r8,(r5)
  132  00001120  afa80000	sw	(r29),r8
  133  00001124  0c0002f0	jal	_Printf
  134  00001128  54000000	nop; not filled.
  135  0000112c  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  136  00001130  2508301c	addui	r8,r8,(LC1_LF0)&0xffff
  137  00001134  afa80000	sw	(r29),r8
  138  00001138  0c0002dc	jal	_Printf
  139  0000113c  54000000	nop; not filled.
  140  00001140  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  141  00001144  25083020	addui	r8,r8,(LC2_LF0)&0xffff
  142  00001148  afa80000	sw	(r29),r8
  143  0000114c  0c0002c8	jal	_Printf
  144  00001150  54000000	nop; not filled.
  145  00001154  20020000	addi	r2,r0,#0
  146  00001158  23bd0008	addi	r29,r29,#8
  147  0000115c  0044082a	slt	r1,r2,r4
  148  00001160  10200044	beqz	r1,L16_LF0
  149  00001164  54000000	nop; not filled.
  150  00001168  00051820	add	r3,r0,r5
  151  0000116c          	L18_LF0:
  152  0000116c  23bdfff0	addi	r29,r29,#-16
  153  00001170  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  154  00001174  25083038	addui	r8,r8,(LC3_LF0)&0xffff
  155  00001178  afa80000	sw	(r29),r8
  156  0000117c  afa20004	sw	4(r29),r2
  157  00001180  8c680000	lw	r8,(r3)
  158  00001184  afa80008	sw	8(r29),r8
  159  00001188  0c00028c	jal	_Printf
  160  0000118c  54000000	nop; not filled.
  161  00001190  23bd0010	addi	r29,r29,#16
  162  00001194  20630004	addi	r3,r3,#4
  163  00001198  20420001	addi	r2,r2,#1
  164  0000119c  0044082a	slt	r1,r2,r4
  165  000011a0  1420ffc8	bnez	r1,L18_LF0
  166  000011a4  54000000	nop; not filled.
  167  000011a8          	L16_LF0:
  168  000011a8  0c000374	jal	_Exit
  169  000011ac  54000000	nop; not filled.
  170  000011b0          	L14_LF0:
  171  000011b0  23bdfff0	addi	r29,r29,#-16
  172  000011b4  8ca80004	lw	r8,4(r5)
  173  000011b8  afa80000	sw	(r29),r8
  174  000011bc  20080000	addi	r8,r0,#0
  175  000011c0  afa80004	sw	4(r29),r8
  176  000011c4  2008000a	addi	r8,r0,#10
  177  000011c8  afa80008	sw	8(r29),r8
  178  000011cc  0c000bfc	jal	_dstrtol
  179  000011d0  54000000	nop; not filled.
  180  000011d4  00013820	add	r7,r0,r1
  181  000011d8  8ca80008	lw	r8,8(r5)
  182  000011dc  afa80000	sw	(r29),r8
  183  000011e0  20080000	addi	r8,r0,#0
  184  000011e4  afa80004	sw	4(r29),r8
  185  000011e8  2008000a	addi	r8,r0,#10
  186  000011ec  afa80008	sw	8(r29),r8
  187  000011f0  0c000bd8	jal	_dstrtol
  188  000011f4  54000000	nop; not filled.
  189  000011f8  00012020	add	r4,r0,r1
  190  000011fc  8ca8000c	lw	r8,12(r5)
  191  00001200  afa80000	sw	(r29),r8
  192  00001204  20080000	addi	r8,r0,#0
  193  00001208  afa80004	sw	4(r29),r8
  194  0000120c  2008000a	addi	r8,r0,#10
  195  00001210  afa80008	sw	8(r29),r8
  196  00001214  0c000bb4	jal	_dstrtol
  197  00001218  54000000	nop; not filled.
  198  0000121c  00011820	add	r3,r0,r1
  199  00001220  afa30000	sw	(r29),r3
  200  00001224  0c0002b0	jal	_mbox_open
  201  00001228  54000000	nop; not filled.
  202  0000122c  23bd0010	addi	r29,r29,#16
  203  00001230  6021ffff	seqi	r1,r1,#-1
  204  00001234  1020004c	beqz	r1,L20_LF0
  205  00001238  54000000	nop; not filled.
  206  0000123c  23bdfff8	addi	r29,r29,#-8
  207  00001240  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  208  00001244  25083040	addui	r8,r8,(LC4_LF0)&0xffff
  209  00001248  afa80000	sw	(r29),r8
  210  0000124c  0c0001c8	jal	_Printf
  211  00001250  54000000	nop; not filled.
  212  00001254  8ca80000	lw	r8,(r5)
  213  00001258  afa80000	sw	(r29),r8
  214  0000125c  0c0001b8	jal	_Printf
  215  00001260  54000000	nop; not filled.
  216  00001264  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  217  00001268  2508301c	addui	r8,r8,(LC1_LF0)&0xffff
  218  0000126c  afa80000	sw	(r29),r8
  219  00001270  0c0001a4	jal	_Printf
  220  00001274  54000000	nop; not filled.
  221  00001278  0c0002a4	jal	_Exit
  222  0000127c  54000000	nop; not filled.
  223  00001280  23bd0008	addi	r29,r29,#8
  224  00001284          	L20_LF0:
  225  00001284  20080001	addi	r8,r0,#1
  226  00001288  afc8fff4	sw	-12(r30),r8
  227  0000128c  20020000	addi	r2,r0,#0
  228  00001290  0044082a	slt	r1,r2,r4
  229  00001294  102000b4	beqz	r1,L22_LF0
  230  00001298  54000000	nop; not filled.
  231  0000129c  23c6fff4	addi	r6,r30,#-12
  232  000012a0          	L24_LF0:
  233  000012a0  23bdfff0	addi	r29,r29,#-16
  234  000012a4  afa30000	sw	(r29),r3
  235  000012a8  20080004	addi	r8,r0,#4
  236  000012ac  afa80004	sw	4(r29),r8
  237  000012b0  afa60008	sw	8(r29),r6
  238  000012b4  0c000238	jal	_mbox_send
  239  000012b8  54000000	nop; not filled.
  240  000012bc  23bd0010	addi	r29,r29,#16
  241  000012c0  6021ffff	seqi	r1,r1,#-1
  242  000012c4  1020004c	beqz	r1,L25_LF0
  243  000012c8  54000000	nop; not filled.
  244  000012cc  23bdfff8	addi	r29,r29,#-8
  245  000012d0  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  246  000012d4  25083054	addui	r8,r8,(LC5_LF0)&0xffff
  247  000012d8  afa80000	sw	(r29),r8
  248  000012dc  0c000138	jal	_Printf
  249  000012e0  54000000	nop; not filled.
  250  000012e4  8ca80000	lw	r8,(r5)
  251  000012e8  afa80000	sw	(r29),r8
  252  000012ec  0c000128	jal	_Printf
  253  000012f0  54000000	nop; not filled.
  254  000012f4  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  255  000012f8  2508301c	addui	r8,r8,(LC1_LF0)&0xffff
  256  000012fc  afa80000	sw	(r29),r8
  257  00001300  0c000114	jal	_Printf
  258  00001304  54000000	nop; not filled.
  259  00001308  0c000214	jal	_Exit
  260  0000130c  54000000	nop; not filled.
  261  00001310  23bd0008	addi	r29,r29,#8
  262  00001314          	L25_LF0:
  263  00001314  0c00010c	jal	_getpid
  264  00001318  54000000	nop; not filled.
  265  0000131c  23bdfff8	addi	r29,r29,#-8
  266  00001320  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  267  00001324  25083068	addui	r8,r8,(LC6_LF0)&0xffff
  268  00001328  afa80000	sw	(r29),r8
  269  0000132c  afa10004	sw	4(r29),r1
  270  00001330  0c0000e4	jal	_Printf
  271  00001334  54000000	nop; not filled.
  272  00001338  23bd0008	addi	r29,r29,#8
  273  0000133c  20420001	addi	r2,r2,#1
  274  00001340  0044082a	slt	r1,r2,r4
  275  00001344  1420ff58	bnez	r1,L24_LF0
  276  00001348  54000000	nop; not filled.
  277  0000134c          	L22_LF0:
  278  0000134c  23bdfff8	addi	r29,r29,#-8
  279  00001350  afa30000	sw	(r29),r3
  280  00001354  0c00018c	jal	_mbox_close
  281  00001358  54000000	nop; not filled.
  282  0000135c  afa70000	sw	(r29),r7
  283  00001360  0c000108	jal	_sem_signal
  284  00001364  54000000	nop; not filled.
  285  00001368  23bd0008	addi	r29,r29,#8
  286  0000136c  64210001	snei	r1,r1,#1
  287  00001370  10200050	beqz	r1,L27_LF0
  288  00001374  54000000	nop; not filled.
  289  00001378  23bdfff8	addi	r29,r29,#-8
  290  0000137c  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  291  00001380  25083098	addui	r8,r8,(LC7_LF0)&0xffff
  292  00001384  afa80000	sw	(r29),r8
  293  00001388  afa70004	sw	4(r29),r7
  294  0000138c  0c000088	jal	_Printf
  295  00001390  54000000	nop; not filled.
  296  00001394  8ca50000	lw	r5,(r5)
  297  00001398  afa50000	sw	(r29),r5
  298  0000139c  0c000078	jal	_Printf
  299  000013a0  54000000	nop; not filled.
  300  000013a4  3c080000	lhi	r8,((LC8_LF0)>>16)&0xffff
  301  000013a8  250830c4	addui	r8,r8,(LC8_LF0)&0xffff
  302  000013ac  afa80000	sw	(r29),r8
  303  000013b0  0c000064	jal	_Printf
  304  000013b4  54000000	nop; not filled.
  305  000013b8  0c000164	jal	_Exit
  306  000013bc  54000000	nop; not filled.
  307  000013c0  23bd0008	addi	r29,r29,#8
  308  000013c4          	L27_LF0:
  309  000013c4  20010000	addi	r1,r0,#0
  310  000013c8  0c000ef0	jal	_exit
  311  000013cc  54000000	nop
  312  000013d0          	.endproc _main
  313                      ;;;
  314                      ;;; Stub functions for DLX traps.
  315                      ;;;
  316                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  317                      ;;;
  318                      ;;; The traps such as Open and Close
  319                      ;;; (note the capital letters) are for use by user programs.  The traps
  320                      ;;; with names such as open and close (lower case) are for use by the OS.
  321                      ;;;
  324  000013d0          	.align 2
  326                      ;;; The following are the traps to be used by user-level programs
  327                      ;;;
  329  000013d0          	.align 2
  330  000013d0          	.proc _Open
  331  000013d0          	.global _Open
  332  000013d0          	_Open:
  333                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  334                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  335                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  336  000013d0  44000213	trap	#0x213
  337  000013d4  4be00000	jr	r31
  338  000013d8  54000000	nop
  339  000013dc          	.endproc _Open
  341  000013dc          	.proc _Close
  342  000013dc          	.global _Close
  343  000013dc          	_Close:
  344  000013dc  44000214	trap	#0x214
  345  000013e0  4be00000	jr	r31
  346  000013e4  54000000	nop
  347  000013e8          	.endproc _Close
  349  000013e8          	.proc _Read
  350  000013e8          	.global _Read
  351  000013e8          	_Read:
  352  000013e8  44000210	trap	#0x210
  353  000013ec  4be00000	jr	r31
  354  000013f0  54000000	nop
  355  000013f4          	.endproc _Read
  357  000013f4          	.proc _Write
  358  000013f4          	.global _Write
  359  000013f4          	_Write:
  360  000013f4  44000211	trap	#0x211
  361  000013f8  4be00000	jr	r31
  362  000013fc  54000000	nop
  363  00001400          	.endproc _Write
  365  00001400          	.proc _Lseek
  366  00001400          	.global _Lseek
  367  00001400          	_Lseek:
  368  00001400  44000212	trap	#0x212
  369  00001404  4be00000	jr	r31
  370  00001408  54000000	nop
  371  0000140c          	.endproc _Lseek
  373  0000140c          	.proc _Putchar
  374  0000140c          	.global _Putchar
  375  0000140c          	_Putchar:
  376  0000140c  44000280	trap	#0x280
  377  00001410  4be00000	jr	r31
  378  00001414  54000000	nop
  379  00001418          	.endproc _Putchar
  381  00001418          	.proc _Printf
  382  00001418          	.global _Printf
  383  00001418          	_Printf:
  384  00001418  44000201	trap	#0x201
  385  0000141c  4be00000	jr	r31
  386  00001420  54000000	nop
  387  00001424          	.endproc _Printf
  389  00001424          	.proc _getpid
  390  00001424          	.global _getpid
  391  00001424          	_getpid:
  392  00001424  44000431	trap	#0x431
  393  00001428  4be00000	jr	r31
  394  0000142c  54000000	nop
  395  00001430          	.endproc _getpid
  397  00001430          	.proc _process_create
  398  00001430          	.global _process_create
  399  00001430          	_process_create:
  400  00001430  44000432	trap	#0x432
  401  00001434  4be00000	jr	r31
  402  00001438  54000000	nop
  403  0000143c          	.endproc _process_create
  405  0000143c          	.proc _shmget
  406  0000143c          	.global _shmget
  407  0000143c          	_shmget:
  408  0000143c  44000440	trap	#0x440
  409  00001440  4be00000	jr	r31
  410  00001444  54000000	nop
  411  00001448          	.endproc _shmget
  413  00001448          	.proc _shmat
  414  00001448          	.global _shmat
  415  00001448          	_shmat:
  416  00001448  44000441	trap	#0x441
  417  0000144c  4be00000	jr	r31
  418  00001450  54000000	nop
  419  00001454          	.endproc _shmat
  421  00001454          	.proc _sem_create
  422  00001454          	.global _sem_create
  423  00001454          	_sem_create:
  424  00001454  44000450	trap	#0x450
  425  00001458  4be00000	jr	r31
  426  0000145c  54000000	nop
  427  00001460          	.endproc _sem_create
  429  00001460          	.proc _sem_wait
  430  00001460          	.global _sem_wait
  431  00001460          	_sem_wait:
  432  00001460  44000451	trap	#0x451
  433  00001464  4be00000	jr	r31
  434  00001468  54000000	nop
  435  0000146c          	.endproc _sem_wait
  437  0000146c          	.proc _sem_signal
  438  0000146c          	.global _sem_signal
  439  0000146c          	_sem_signal:
  440  0000146c  44000452	trap	#0x452
  441  00001470  4be00000	jr	r31
  442  00001474  54000000	nop
  443  00001478          	.endproc _sem_signal
  445  00001478          	.proc _lock_create
  446  00001478          	.global _lock_create
  447  00001478          	_lock_create:
  448  00001478  44000453	trap	#0x453
  449  0000147c  4be00000	jr	r31
  450  00001480  54000000	nop
  451  00001484          	.endproc _lock_create
  453  00001484          	.proc _lock_acquire
  454  00001484          	.global _lock_acquire
  455  00001484          	_lock_acquire:
  456  00001484  44000454	trap	#0x454
  457  00001488  4be00000	jr	r31
  458  0000148c  54000000	nop
  459  00001490          	.endproc _lock_acquire
  461  00001490          	.proc _lock_release
  462  00001490          	.global _lock_release
  463  00001490          	_lock_release:
  464  00001490  44000455	trap	#0x455
  465  00001494  4be00000	jr	r31
  466  00001498  54000000	nop
  467  0000149c          	.endproc _lock_release
  469  0000149c          	.proc _cond_create
  470  0000149c          	.global _cond_create
  471  0000149c          	_cond_create:
  472  0000149c  44000456	trap	#0x456
  473  000014a0  4be00000	jr	r31
  474  000014a4  54000000	nop
  475  000014a8          	.endproc _cond_create
  477  000014a8          	.proc _cond_wait
  478  000014a8          	.global _cond_wait
  479  000014a8          	_cond_wait:
  480  000014a8  44000457	trap	#0x457
  481  000014ac  4be00000	jr	r31
  482  000014b0  54000000	nop
  483  000014b4          	.endproc _cond_wait
  485  000014b4          	.proc _cond_signal
  486  000014b4          	.global _cond_signal
  487  000014b4          	_cond_signal:
  488  000014b4  44000458	trap	#0x458
  489  000014b8  4be00000	jr	r31
  490  000014bc  54000000	nop
  491  000014c0          	.endproc _cond_signal
  493  000014c0          	.proc _cond_broadcast
  494  000014c0          	.global _cond_broadcast
  495  000014c0          	_cond_broadcast:
  496  000014c0  44000459	trap	#0x459
  497  000014c4  4be00000	jr	r31
  498  000014c8  54000000	nop
  499  000014cc          	.endproc _cond_broadcast
  501  000014cc          	.proc _mbox_create
  502  000014cc          	.global _mbox_create
  503  000014cc          	_mbox_create:
  504  000014cc  44000460	trap	#0x460
  505  000014d0  4be00000	jr	r31
  506  000014d4  54000000	nop
  507  000014d8          	.endproc _mbox_create
  509  000014d8          	.proc _mbox_open
  510  000014d8          	.global _mbox_open
  511  000014d8          	_mbox_open:
  512  000014d8  44000461	trap	#0x461
  513  000014dc  4be00000	jr	r31
  514  000014e0  54000000	nop
  515  000014e4          	.endproc _mbox_open
  517  000014e4          	.proc _mbox_close
  518  000014e4          	.global _mbox_close
  519  000014e4          	_mbox_close:
  520  000014e4  44000462	trap	#0x462
  521  000014e8  4be00000	jr	r31
  522  000014ec  54000000	nop
  523  000014f0          	.endproc _mbox_close
  525  000014f0          	.proc _mbox_send
  526  000014f0          	.global _mbox_send
  527  000014f0          	_mbox_send:
  528  000014f0  44000463	trap	#0x463
  529  000014f4  4be00000	jr	r31
  530  000014f8  54000000	nop
  531  000014fc          	.endproc _mbox_send
  533  000014fc          	.proc _mbox_recv
  534  000014fc          	.global _mbox_recv
  535  000014fc          	_mbox_recv:
  536  000014fc  44000464	trap	#0x464
  537  00001500  4be00000	jr	r31
  538  00001504  54000000	nop
  539  00001508          	.endproc _mbox_recv
  541  00001508          	.proc _sleep
  542  00001508          	.global _sleep
  543  00001508          	_sleep:
  544  00001508  44000465	trap	#0x465
  545  0000150c  4be00000	jr	r31
  546  00001510  54000000	nop
  547  00001514          	.endproc _sleep
  549  00001514          	.proc _yield
  550  00001514          	.global _yield
  551  00001514          	_yield:
  552  00001514  44000466	trap	#0x466
  553  00001518  4be00000	jr	r31
  554  0000151c  54000000	nop
  555  00001520          	.endproc _yield
  558  00001520          	.proc _Exit
  559  00001520          	.global _Exit
  560  00001520          	_Exit:
  561  00001520  44000500	trap	#0x500
  562  00001524  4be00000	jr	r31
  563  00001528  54000000	nop
  564  0000152c          	.endproc _Exit
  565                      ; Compiled by GCC
  567  0000152c          	.align 2
  568  0000152c          	.proc _isspace
  569  0000152c          	.global _isspace
  570  0000152c          	_isspace:
  571                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  572  0000152c  afbefffc	sw	-4(r29),r30; push fp
  573  00001530  001df020	add	r30,r0,r29; fp = sp
  574  00001534  afbffff8	sw	-8(r29),r31; push ret addr
  575  00001538  2fbd0018	subui	r29,r29,#24; alloc local storage
  576  0000153c  afa20000	sw	0(r29),r2
  577  00001540  afa30004	sw	4(r29),r3
  578  00001544  afa40008	sw	8(r29),r4
  579  00001548  83c20003	lb	r2,3(r30)
  580  0000154c  20010000	addi	r1,r0,#0
  581  00001550  304300ff	andi	r3,r2,#0x00ff
  582  00001554  60640020	seqi	r4,r3,#32
  583  00001558  1480002c	bnez	r4,L3_LF2
  584  0000155c  54000000	nop; delay slot nop
  585  00001560  304300ff	andi	r3,r2,#0x00ff
  586  00001564  60640009	seqi	r4,r3,#9
  587  00001568  1480001c	bnez	r4,L3_LF2
  588  0000156c  54000000	nop; delay slot nop
  589  00001570  304300ff	andi	r3,r2,#0x00ff
  590  00001574  6064000a	seqi	r4,r3,#10
  591  00001578  1480000c	bnez	r4,L3_LF2
  592  0000157c  54000000	nop; delay slot nop
  593  00001580  08000008	j	L2_LF2
  594  00001584  54000000	nop; delay slot nop
  595  00001588          	L3_LF2:
  596  00001588  20010001	addi	r1,r0,#1
  597  0000158c          	L2_LF2:
  598  0000158c  08000004	j	L1_LF2
  599  00001590  54000000	nop; delay slot nop
  600  00001594          	L1_LF2:
  601  00001594  8fa20000	lw	r2,0(r29)
  602  00001598  8fa30004	lw	r3,4(r29)
  603  0000159c  8fa40008	lw	r4,8(r29)
  604  000015a0  8fdffff8	lw	r31,-8(r30)
  605  000015a4  001ee820	add	r29,r0,r30
  606  000015a8  8fdefffc	lw	r30,-4(r30)
  607  000015ac  4be00000	jr	r31
  608  000015b0  54000000	nop
  609  000015b4          	.endproc _isspace
  610  000015b4          	.align 2
  611  000015b4          	.proc _isxdigit
  612  000015b4          	.global _isxdigit
  613  000015b4          	_isxdigit:
  614                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  615  000015b4  afbefffc	sw	-4(r29),r30; push fp
  616  000015b8  001df020	add	r30,r0,r29; fp = sp
  617  000015bc  afbffff8	sw	-8(r29),r31; push ret addr
  618  000015c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  619  000015c4  afa20000	sw	0(r29),r2
  620  000015c8  afa30004	sw	4(r29),r3
  621  000015cc  afa40008	sw	8(r29),r4
  622  000015d0  83c20003	lb	r2,3(r30)
  623  000015d4  20010000	addi	r1,r0,#0
  624  000015d8  304300ff	andi	r3,r2,#0x00ff
  625  000015dc  6c64002f	sgtui	r4,r3,#47
  626  000015e0  1080001c	beqz	r4,L7_LF2
  627  000015e4  54000000	nop; delay slot nop
  628  000015e8  304300ff	andi	r3,r2,#0x00ff
  629  000015ec  70640039	sleui	r4,r3,#57
  630  000015f0  1480005c	bnez	r4,L6_LF2
  631  000015f4  54000000	nop; delay slot nop
  632  000015f8  08000004	j	L7_LF2
  633  000015fc  54000000	nop; delay slot nop
  634  00001600          	L7_LF2:
  635  00001600  304300ff	andi	r3,r2,#0x00ff
  636  00001604  6c640060	sgtui	r4,r3,#96
  637  00001608  1080001c	beqz	r4,L8_LF2
  638  0000160c  54000000	nop; delay slot nop
  639  00001610  304300ff	andi	r3,r2,#0x00ff
  640  00001614  70640066	sleui	r4,r3,#102
  641  00001618  14800034	bnez	r4,L6_LF2
  642  0000161c  54000000	nop; delay slot nop
  643  00001620  08000004	j	L8_LF2
  644  00001624  54000000	nop; delay slot nop
  645  00001628          	L8_LF2:
  646  00001628  304300ff	andi	r3,r2,#0x00ff
  647  0000162c  6c640040	sgtui	r4,r3,#64
  648  00001630  10800020	beqz	r4,L5_LF2
  649  00001634  54000000	nop; delay slot nop
  650  00001638  304300ff	andi	r3,r2,#0x00ff
  651  0000163c  70640041	sleui	r4,r3,#65
  652  00001640  1480000c	bnez	r4,L6_LF2
  653  00001644  54000000	nop; delay slot nop
  654  00001648  08000008	j	L5_LF2
  655  0000164c  54000000	nop; delay slot nop
  656  00001650          	L6_LF2:
  657  00001650  20010001	addi	r1,r0,#1
  658  00001654          	L5_LF2:
  659  00001654  08000004	j	L4_LF2
  660  00001658  54000000	nop; delay slot nop
  661  0000165c          	L4_LF2:
  662  0000165c  8fa20000	lw	r2,0(r29)
  663  00001660  8fa30004	lw	r3,4(r29)
  664  00001664  8fa40008	lw	r4,8(r29)
  665  00001668  8fdffff8	lw	r31,-8(r30)
  666  0000166c  001ee820	add	r29,r0,r30
  667  00001670  8fdefffc	lw	r30,-4(r30)
  668  00001674  4be00000	jr	r31
  669  00001678  54000000	nop
  670  0000167c          	.endproc _isxdigit
  671  0000167c          	.align 2
  672  0000167c          	.proc _dstrcpy
  673  0000167c          	.global _dstrcpy
  674  0000167c          	_dstrcpy:
  675                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  676  0000167c  afbefffc	sw	-4(r29),r30; push fp
  677  00001680  001df020	add	r30,r0,r29; fp = sp
  678  00001684  afbffff8	sw	-8(r29),r31; push ret addr
  679  00001688  2fbd0018	subui	r29,r29,#24; alloc local storage
  680  0000168c  afa20000	sw	0(r29),r2
  681  00001690  afa30004	sw	4(r29),r3
  682  00001694  8fc10000	lw	r1,(r30)
  683  00001698  afc1fff4	sw	-12(r30),r1
  684  0000169c          	L10_LF2:
  685  0000169c  8fc10000	lw	r1,(r30)
  686  000016a0  20220001	addi	r2,r1,#1
  687  000016a4  afc20000	sw	(r30),r2
  688  000016a8  8fc20004	lw	r2,4(r30)
  689  000016ac  20430001	addi	r3,r2,#1
  690  000016b0  afc30004	sw	4(r30),r3
  691  000016b4  80420000	lb	r2,(r2)
  692  000016b8  a0220000	sb	(r1),r2
  693  000016bc  a3c2fff3	sb	-13(r30),r2
  694  000016c0          	L12_LF2:
  695  000016c0  93c1fff3	lbu	r1,-13(r30)
  696  000016c4  64220000	snei	r2,r1,#0
  697  000016c8  1440000c	bnez	r2,L13_LF2
  698  000016cc  54000000	nop; delay slot nop
  699  000016d0  0800000c	j	L11_LF2
  700  000016d4  54000000	nop; delay slot nop
  701  000016d8          	L13_LF2:
  702  000016d8  0bffffc0	j	L10_LF2
  703  000016dc  54000000	nop; delay slot nop
  704  000016e0          	L11_LF2:
  705  000016e0  8fc1fff4	lw	r1,-12(r30)
  706  000016e4  08000004	j	L9_LF2
  707  000016e8  54000000	nop; delay slot nop
  708  000016ec          	L9_LF2:
  709  000016ec  8fa20000	lw	r2,0(r29)
  710  000016f0  8fa30004	lw	r3,4(r29)
  711  000016f4  8fdffff8	lw	r31,-8(r30)
  712  000016f8  001ee820	add	r29,r0,r30
  713  000016fc  8fdefffc	lw	r30,-4(r30)
  714  00001700  4be00000	jr	r31
  715  00001704  54000000	nop
  716  00001708          	.endproc _dstrcpy
  717  00001708          	.align 2
  718  00001708          	.proc _dstrncpy
  719  00001708          	.global _dstrncpy
  720  00001708          	_dstrncpy:
  721                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  722  00001708  afbefffc	sw	-4(r29),r30; push fp
  723  0000170c  001df020	add	r30,r0,r29; fp = sp
  724  00001710  afbffff8	sw	-8(r29),r31; push ret addr
  725  00001714  2fbd0018	subui	r29,r29,#24; alloc local storage
  726  00001718  afa20000	sw	0(r29),r2
  727  0000171c  afa30004	sw	4(r29),r3
  728  00001720  8fc10000	lw	r1,(r30)
  729  00001724  afc1fff4	sw	-12(r30),r1
  730  00001728          	L15_LF2:
  731  00001728  8fc10008	lw	r1,8(r30)
  732  0000172c  2022ffff	addi	r2,r1,#-1
  733  00001730  afc20008	sw	8(r30),r2
  734  00001734  70210000	slei	r1,r1,#0
  735  00001738  1020000c	beqz	r1,L18_LF2
  736  0000173c  54000000	nop; delay slot nop
  737  00001740  08000048	j	L16_LF2
  738  00001744  54000000	nop; delay slot nop
  739  00001748          	L18_LF2:
  740  00001748  8fc10000	lw	r1,(r30)
  741  0000174c  20220001	addi	r2,r1,#1
  742  00001750  afc20000	sw	(r30),r2
  743  00001754  8fc20004	lw	r2,4(r30)
  744  00001758  20430001	addi	r3,r2,#1
  745  0000175c  afc30004	sw	4(r30),r3
  746  00001760  80420000	lb	r2,(r2)
  747  00001764  a0220000	sb	(r1),r2
  748  00001768  a3c2fff3	sb	-13(r30),r2
  749  0000176c          	L17_LF2:
  750  0000176c  93c1fff3	lbu	r1,-13(r30)
  751  00001770  64220000	snei	r2,r1,#0
  752  00001774  1440000c	bnez	r2,L19_LF2
  753  00001778  54000000	nop; delay slot nop
  754  0000177c  0800000c	j	L16_LF2
  755  00001780  54000000	nop; delay slot nop
  756  00001784          	L19_LF2:
  757  00001784  0bffffa0	j	L15_LF2
  758  00001788  54000000	nop; delay slot nop
  759  0000178c          	L16_LF2:
  760  0000178c  8fc1fff4	lw	r1,-12(r30)
  761  00001790  08000004	j	L14_LF2
  762  00001794  54000000	nop; delay slot nop
  763  00001798          	L14_LF2:
  764  00001798  8fa20000	lw	r2,0(r29)
  765  0000179c  8fa30004	lw	r3,4(r29)
  766  000017a0  8fdffff8	lw	r31,-8(r30)
  767  000017a4  001ee820	add	r29,r0,r30
  768  000017a8  8fdefffc	lw	r30,-4(r30)
  769  000017ac  4be00000	jr	r31
  770  000017b0  54000000	nop
  771  000017b4          	.endproc _dstrncpy
  772  000017b4          	.align 2
  773  000017b4          	.proc _dstrcat
  774  000017b4          	.global _dstrcat
  775  000017b4          	_dstrcat:
  776                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  777  000017b4  afbefffc	sw	-4(r29),r30; push fp
  778  000017b8  001df020	add	r30,r0,r29; fp = sp
  779  000017bc  afbffff8	sw	-8(r29),r31; push ret addr
  780  000017c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  781  000017c4  afa20000	sw	0(r29),r2
  782  000017c8  8fc10000	lw	r1,(r30)
  783  000017cc  afc1fff4	sw	-12(r30),r1
  784  000017d0          	L21_LF2:
  785  000017d0  8fc10000	lw	r1,(r30)
  786  000017d4  90220000	lbu	r2,(r1)
  787  000017d8  64410000	snei	r1,r2,#0
  788  000017dc  1420000c	bnez	r1,L23_LF2
  789  000017e0  54000000	nop; delay slot nop
  790  000017e4  0800001c	j	L22_LF2
  791  000017e8  54000000	nop; delay slot nop
  792  000017ec          	L23_LF2:
  793  000017ec  8fc20000	lw	r2,(r30)
  794  000017f0  20410001	addi	r1,r2,#1
  795  000017f4  00011020	add	r2,r0,r1
  796  000017f8  afc20000	sw	(r30),r2
  797  000017fc  0bffffd0	j	L21_LF2
  798  00001800  54000000	nop; delay slot nop
  799  00001804          	L22_LF2:
  800  00001804  23bdfff8	addi	r29,r29,#-8
  801  00001808  001d0820	add	r1,r0,r29
  802  0000180c  8fc20000	lw	r2,(r30)
  803  00001810  ac220000	sw	(r1),r2
  804  00001814  8fc20004	lw	r2,4(r30)
  805  00001818  ac220004	sw	4(r1),r2
  806  0000181c  0ffffe5c	jal	_dstrcpy
  807  00001820  54000000	nop; delay slot nop
  808  00001824  23bd0008	addi	r29,r29,#8
  809  00001828  8fc1fff4	lw	r1,-12(r30)
  810  0000182c  08000004	j	L20_LF2
  811  00001830  54000000	nop; delay slot nop
  812  00001834          	L20_LF2:
  813  00001834  8fa20000	lw	r2,0(r29)
  814  00001838  8fdffff8	lw	r31,-8(r30)
  815  0000183c  001ee820	add	r29,r0,r30
  816  00001840  8fdefffc	lw	r30,-4(r30)
  817  00001844  4be00000	jr	r31
  818  00001848  54000000	nop
  819  0000184c          	.endproc _dstrcat
  820  0000184c          	.align 2
  821  0000184c          	.proc _dstrncmp
  822  0000184c          	.global _dstrncmp
  823  0000184c          	_dstrncmp:
  824                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  825  0000184c  afbefffc	sw	-4(r29),r30; push fp
  826  00001850  001df020	add	r30,r0,r29; fp = sp
  827  00001854  afbffff8	sw	-8(r29),r31; push ret addr
  828  00001858  2fbd0018	subui	r29,r29,#24; alloc local storage
  829  0000185c  afa20000	sw	0(r29),r2
  830  00001860  afa30004	sw	4(r29),r3
  831  00001864  54000000	nop
  832  00001868  20010000	addi	r1,r0,#0
  833  0000186c  afc1fff4	sw	-12(r30),r1
  834  00001870          	L25_LF2:
  835  00001870  8fc1fff4	lw	r1,-12(r30)
  836  00001874  8fc20008	lw	r2,8(r30)
  837  00001878  0022082a	slt	r1,r1,r2
  838  0000187c  1420000c	bnez	r1,L28_LF2
  839  00001880  54000000	nop; delay slot nop
  840  00001884  08000088	j	L26_LF2
  841  00001888  54000000	nop; delay slot nop
  842  0000188c          	L28_LF2:
  843  0000188c  8fc10004	lw	r1,4(r30)
  844  00001890  90220000	lbu	r2,(r1)
  845  00001894  64410000	snei	r1,r2,#0
  846  00001898  14200018	bnez	r1,L29_LF2
  847  0000189c  54000000	nop; delay slot nop
  848  000018a0  20010000	addi	r1,r0,#0
  849  000018a4  080000d8	j	L24_LF2
  850  000018a8  54000000	nop; delay slot nop
  851  000018ac  08000028	j	L30_LF2
  852  000018b0  54000000	nop; delay slot nop
  853  000018b4          	L29_LF2:
  854  000018b4  8fc10000	lw	r1,(r30)
  855  000018b8  8fc20004	lw	r2,4(r30)
  856  000018bc  90210000	lbu	r1,(r1)
  857  000018c0  90420000	lbu	r2,(r2)
  858  000018c4  00220829	sne	r1,r1,r2
  859  000018c8  1020000c	beqz	r1,L30_LF2
  860  000018cc  54000000	nop; delay slot nop
  861  000018d0  0800003c	j	L26_LF2
  862  000018d4  54000000	nop; delay slot nop
  863  000018d8          	L31_LF2:
  864  000018d8          	L30_LF2:
  865  000018d8  8fc20000	lw	r2,(r30)
  866  000018dc  20410001	addi	r1,r2,#1
  867  000018e0  00011020	add	r2,r0,r1
  868  000018e4  afc20000	sw	(r30),r2
  869  000018e8  8fc20004	lw	r2,4(r30)
  870  000018ec  20410001	addi	r1,r2,#1
  871  000018f0  00011020	add	r2,r0,r1
  872  000018f4  afc20004	sw	4(r30),r2
  873  000018f8          	L27_LF2:
  874  000018f8  8fc2fff4	lw	r2,-12(r30)
  875  000018fc  20410001	addi	r1,r2,#1
  876  00001900  00011020	add	r2,r0,r1
  877  00001904  afc2fff4	sw	-12(r30),r2
  878  00001908  0bffff64	j	L25_LF2
  879  0000190c  54000000	nop; delay slot nop
  880  00001910          	L26_LF2:
  881  00001910  8fc1fff4	lw	r1,-12(r30)
  882  00001914  8fc20008	lw	r2,8(r30)
  883  00001918  00220828	seq	r1,r1,r2
  884  0000191c  10200018	beqz	r1,L32_LF2
  885  00001920  54000000	nop; delay slot nop
  886  00001924  20010000	addi	r1,r0,#0
  887  00001928  08000054	j	L24_LF2
  888  0000192c  54000000	nop; delay slot nop
  889  00001930  0800004c	j	L33_LF2
  890  00001934  54000000	nop; delay slot nop
  891  00001938          	L32_LF2:
  892  00001938  8fc20000	lw	r2,(r30)
  893  0000193c  90410000	lbu	r1,(r2)
  894  00001940  8fc20004	lw	r2,4(r30)
  895  00001944  90430000	lbu	r3,(r2)
  896  00001948  00230822	sub	r1,r1,r3
  897  0000194c  74220000	sgei	r2,r1,#0
  898  00001950  10400020	beqz	r2,L34_LF2
  899  00001954  54000000	nop; delay slot nop
  900  00001958  8fc10000	lw	r1,(r30)
  901  0000195c  8fc20004	lw	r2,4(r30)
  902  00001960  90210000	lbu	r1,(r1)
  903  00001964  90420000	lbu	r2,(r2)
  904  00001968  00220829	sne	r1,r1,r2
  905  0000196c  08000008	j	L35_LF2
  906  00001970  54000000	nop; delay slot nop
  907  00001974          	L34_LF2:
  908  00001974  2001ffff	addi	r1,r0,#-1
  909  00001978          	L35_LF2:
  910  00001978  08000004	j	L24_LF2
  911  0000197c  54000000	nop; delay slot nop
  912  00001980          	L33_LF2:
  913  00001980          	L24_LF2:
  914  00001980  8fa20000	lw	r2,0(r29)
  915  00001984  8fa30004	lw	r3,4(r29)
  916  00001988  8fdffff8	lw	r31,-8(r30)
  917  0000198c  001ee820	add	r29,r0,r30
  918  00001990  8fdefffc	lw	r30,-4(r30)
  919  00001994  4be00000	jr	r31
  920  00001998  54000000	nop
  921  0000199c          	.endproc _dstrncmp
  922  0000199c          	.align 2
  923  0000199c          	.proc _dstrlen
  924  0000199c          	.global _dstrlen
  925  0000199c          	_dstrlen:
  926                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  927  0000199c  afbefffc	sw	-4(r29),r30; push fp
  928  000019a0  001df020	add	r30,r0,r29; fp = sp
  929  000019a4  afbffff8	sw	-8(r29),r31; push ret addr
  930  000019a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  931  000019ac  afa20000	sw	0(r29),r2
  932  000019b0  20010000	addi	r1,r0,#0
  933  000019b4  afc1fff4	sw	-12(r30),r1
  934  000019b8          	L37_LF2:
  935  000019b8  8fc10000	lw	r1,(r30)
  936  000019bc  20220001	addi	r2,r1,#1
  937  000019c0  afc20000	sw	(r30),r2
  938  000019c4  90210000	lbu	r1,(r1)
  939  000019c8  64220000	snei	r2,r1,#0
  940  000019cc  1440000c	bnez	r2,L39_LF2
  941  000019d0  54000000	nop; delay slot nop
  942  000019d4  0800001c	j	L38_LF2
  943  000019d8  54000000	nop; delay slot nop
  944  000019dc          	L39_LF2:
  945  000019dc  8fc2fff4	lw	r2,-12(r30)
  946  000019e0  20410001	addi	r1,r2,#1
  947  000019e4  00011020	add	r2,r0,r1
  948  000019e8  afc2fff4	sw	-12(r30),r2
  949  000019ec  0bffffc8	j	L37_LF2
  950  000019f0  54000000	nop; delay slot nop
  951  000019f4          	L38_LF2:
  952  000019f4  8fc1fff4	lw	r1,-12(r30)
  953  000019f8  08000004	j	L36_LF2
  954  000019fc  54000000	nop; delay slot nop
  955  00001a00          	L36_LF2:
  956  00001a00  8fa20000	lw	r2,0(r29)
  957  00001a04  8fdffff8	lw	r31,-8(r30)
  958  00001a08  001ee820	add	r29,r0,r30
  959  00001a0c  8fdefffc	lw	r30,-4(r30)
  960  00001a10  4be00000	jr	r31
  961  00001a14  54000000	nop
  962  00001a18          	.endproc _dstrlen
  963  00001a18          	.align 2
  964  00001a18          	.proc _dstrstr
  965  00001a18          	.global _dstrstr
  966  00001a18          	_dstrstr:
  967                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  968  00001a18  afbefffc	sw	-4(r29),r30; push fp
  969  00001a1c  001df020	add	r30,r0,r29; fp = sp
  970  00001a20  afbffff8	sw	-8(r29),r31; push ret addr
  971  00001a24  2fbd0018	subui	r29,r29,#24; alloc local storage
  972  00001a28  afa20000	sw	0(r29),r2
  973  00001a2c  23bdfff8	addi	r29,r29,#-8
  974  00001a30  001d0820	add	r1,r0,r29
  975  00001a34  8fc20004	lw	r2,4(r30)
  976  00001a38  ac220000	sw	(r1),r2
  977  00001a3c  0fffff5c	jal	_dstrlen
  978  00001a40  54000000	nop; delay slot nop
  979  00001a44  23bd0008	addi	r29,r29,#8
  980  00001a48  afc1fff4	sw	-12(r30),r1
  981  00001a4c          	L41_LF2:
  982  00001a4c  8fc10000	lw	r1,(r30)
  983  00001a50  90220000	lbu	r2,(r1)
  984  00001a54  64410000	snei	r1,r2,#0
  985  00001a58  1420000c	bnez	r1,L43_LF2
  986  00001a5c  54000000	nop; delay slot nop
  987  00001a60  08000060	j	L42_LF2
  988  00001a64  54000000	nop; delay slot nop
  989  00001a68          	L43_LF2:
  990  00001a68  23bdfff0	addi	r29,r29,#-16
  991  00001a6c  001d0820	add	r1,r0,r29
  992  00001a70  8fc20000	lw	r2,(r30)
  993  00001a74  ac220000	sw	(r1),r2
  994  00001a78  8fc20004	lw	r2,4(r30)
  995  00001a7c  ac220004	sw	4(r1),r2
  996  00001a80  8fc2fff4	lw	r2,-12(r30)
  997  00001a84  ac220008	sw	8(r1),r2
  998  00001a88  0ffffdc0	jal	_dstrncmp
  999  00001a8c  54000000	nop; delay slot nop
 1000  00001a90  23bd0010	addi	r29,r29,#16
 1001  00001a94  64220000	snei	r2,r1,#0
 1002  00001a98  14400010	bnez	r2,L44_LF2
 1003  00001a9c  54000000	nop; delay slot nop
 1004  00001aa0  8fc10000	lw	r1,(r30)
 1005  00001aa4  08000028	j	L40_LF2
 1006  00001aa8  54000000	nop; delay slot nop
 1007  00001aac          	L44_LF2:
 1008  00001aac  8fc20000	lw	r2,(r30)
 1009  00001ab0  20410001	addi	r1,r2,#1
 1010  00001ab4  00011020	add	r2,r0,r1
 1011  00001ab8  afc20000	sw	(r30),r2
 1012  00001abc  0bffff8c	j	L41_LF2
 1013  00001ac0  54000000	nop; delay slot nop
 1014  00001ac4          	L42_LF2:
 1015  00001ac4  20010000	addi	r1,r0,#0
 1016  00001ac8  08000004	j	L40_LF2
 1017  00001acc  54000000	nop; delay slot nop
 1018  00001ad0          	L40_LF2:
 1019  00001ad0  8fa20000	lw	r2,0(r29)
 1020  00001ad4  8fdffff8	lw	r31,-8(r30)
 1021  00001ad8  001ee820	add	r29,r0,r30
 1022  00001adc  8fdefffc	lw	r30,-4(r30)
 1023  00001ae0  4be00000	jr	r31
 1024  00001ae4  54000000	nop
 1025  00001ae8          	.endproc _dstrstr
 1026  00001ae8          	.align 2
 1027  00001ae8          	.proc _dmindex
 1028  00001ae8          	.global _dmindex
 1029  00001ae8          	_dmindex:
 1030                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1031  00001ae8  afbefffc	sw	-4(r29),r30; push fp
 1032  00001aec  001df020	add	r30,r0,r29; fp = sp
 1033  00001af0  afbffff8	sw	-8(r29),r31; push ret addr
 1034  00001af4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1035  00001af8  afa20000	sw	0(r29),r2
 1036  00001afc  54000000	nop
 1037  00001b00          	L46_LF2:
 1038  00001b00  8fc10000	lw	r1,(r30)
 1039  00001b04  90220000	lbu	r2,(r1)
 1040  00001b08  64410000	snei	r1,r2,#0
 1041  00001b0c  1420000c	bnez	r1,L48_LF2
 1042  00001b10  54000000	nop; delay slot nop
 1043  00001b14  08000070	j	L47_LF2
 1044  00001b18  54000000	nop; delay slot nop
 1045  00001b1c          	L48_LF2:
 1046  00001b1c  8fc10004	lw	r1,4(r30)
 1047  00001b20  afc1fff4	sw	-12(r30),r1
 1048  00001b24          	L49_LF2:
 1049  00001b24  8fc1fff4	lw	r1,-12(r30)
 1050  00001b28  90220000	lbu	r2,(r1)
 1051  00001b2c  64410000	snei	r1,r2,#0
 1052  00001b30  1420000c	bnez	r1,L52_LF2
 1053  00001b34  54000000	nop; delay slot nop
 1054  00001b38  08000044	j	L50_LF2
 1055  00001b3c  54000000	nop; delay slot nop
 1056  00001b40          	L52_LF2:
 1057  00001b40  8fc10000	lw	r1,(r30)
 1058  00001b44  8fc2fff4	lw	r2,-12(r30)
 1059  00001b48  90210000	lbu	r1,(r1)
 1060  00001b4c  90420000	lbu	r2,(r2)
 1061  00001b50  00220828	seq	r1,r1,r2
 1062  00001b54  10200010	beqz	r1,L51_LF2
 1063  00001b58  54000000	nop; delay slot nop
 1064  00001b5c  8fc10000	lw	r1,(r30)
 1065  00001b60  08000030	j	L45_LF2
 1066  00001b64  54000000	nop; delay slot nop
 1067  00001b68          	L53_LF2:
 1068  00001b68          	L51_LF2:
 1069  00001b68  8fc2fff4	lw	r2,-12(r30)
 1070  00001b6c  20410001	addi	r1,r2,#1
 1071  00001b70  00011020	add	r2,r0,r1
 1072  00001b74  afc2fff4	sw	-12(r30),r2
 1073  00001b78  0bffffa8	j	L49_LF2
 1074  00001b7c  54000000	nop; delay slot nop
 1075  00001b80          	L50_LF2:
 1076  00001b80  0bffff7c	j	L46_LF2
 1077  00001b84  54000000	nop; delay slot nop
 1078  00001b88          	L47_LF2:
 1079  00001b88  20010000	addi	r1,r0,#0
 1080  00001b8c  08000004	j	L45_LF2
 1081  00001b90  54000000	nop; delay slot nop
 1082  00001b94          	L45_LF2:
 1083  00001b94  8fa20000	lw	r2,0(r29)
 1084  00001b98  8fdffff8	lw	r31,-8(r30)
 1085  00001b9c  001ee820	add	r29,r0,r30
 1086  00001ba0  8fdefffc	lw	r30,-4(r30)
 1087  00001ba4  4be00000	jr	r31
 1088  00001ba8  54000000	nop
 1089  00001bac          	.endproc _dmindex
 1090  00001bac          	.align 2
 1091  00001bac          	.proc _dindex
 1092  00001bac          	.global _dindex
 1093  00001bac          	_dindex:
 1094                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1095  00001bac  afbefffc	sw	-4(r29),r30; push fp
 1096  00001bb0  001df020	add	r30,r0,r29; fp = sp
 1097  00001bb4  afbffff8	sw	-8(r29),r31; push ret addr
 1098  00001bb8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1099  00001bbc  afa20000	sw	0(r29),r2
 1100  00001bc0  54000000	nop
 1101  00001bc4          	L55_LF2:
 1102  00001bc4  8fc10000	lw	r1,(r30)
 1103  00001bc8  90220000	lbu	r2,(r1)
 1104  00001bcc  64410000	snei	r1,r2,#0
 1105  00001bd0  1420000c	bnez	r1,L57_LF2
 1106  00001bd4  54000000	nop; delay slot nop
 1107  00001bd8  08000040	j	L56_LF2
 1108  00001bdc  54000000	nop; delay slot nop
 1109  00001be0          	L57_LF2:
 1110  00001be0  8fc10000	lw	r1,(r30)
 1111  00001be4  90220000	lbu	r2,(r1)
 1112  00001be8  8fc10004	lw	r1,4(r30)
 1113  00001bec  00411028	seq	r2,r2,r1
 1114  00001bf0  10400010	beqz	r2,L58_LF2
 1115  00001bf4  54000000	nop; delay slot nop
 1116  00001bf8  8fc10000	lw	r1,(r30)
 1117  00001bfc  08000028	j	L54_LF2
 1118  00001c00  54000000	nop; delay slot nop
 1119  00001c04          	L58_LF2:
 1120  00001c04  8fc20000	lw	r2,(r30)
 1121  00001c08  20410001	addi	r1,r2,#1
 1122  00001c0c  00011020	add	r2,r0,r1
 1123  00001c10  afc20000	sw	(r30),r2
 1124  00001c14  0bffffac	j	L55_LF2
 1125  00001c18  54000000	nop; delay slot nop
 1126  00001c1c          	L56_LF2:
 1127  00001c1c  20010000	addi	r1,r0,#0
 1128  00001c20  08000004	j	L54_LF2
 1129  00001c24  54000000	nop; delay slot nop
 1130  00001c28          	L54_LF2:
 1131  00001c28  8fa20000	lw	r2,0(r29)
 1132  00001c2c  8fdffff8	lw	r31,-8(r30)
 1133  00001c30  001ee820	add	r29,r0,r30
 1134  00001c34  8fdefffc	lw	r30,-4(r30)
 1135  00001c38  4be00000	jr	r31
 1136  00001c3c  54000000	nop
 1137  00001c40          	.endproc _dindex
 1138  00001c40          	.align 2
 1139  00001c40          	.proc _ditoa
 1140  00001c40          	.global _ditoa
 1141  00001c40          	_ditoa:
 1142                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1143  00001c40  afbefffc	sw	-4(r29),r30; push fp
 1144  00001c44  001df020	add	r30,r0,r29; fp = sp
 1145  00001c48  afbffff8	sw	-8(r29),r31; push ret addr
 1146  00001c4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1147  00001c50  afa20000	sw	0(r29),r2
 1148  00001c54  afa30004	sw	4(r29),r3
 1149  00001c58  8fc10000	lw	r1,(r30)
 1150  00001c5c  68220000	slti	r2,r1,#0
 1151  00001c60  1040002c	beqz	r2,L60_LF2
 1152  00001c64  54000000	nop; delay slot nop
 1153  00001c68  8fc10004	lw	r1,4(r30)
 1154  00001c6c  20220001	addi	r2,r1,#1
 1155  00001c70  afc20004	sw	4(r30),r2
 1156  00001c74  2002002d	addi	r2,r0,(#0x2d)&0xff
 1157  00001c78  a0220000	sb	(r1),r2
 1158  00001c7c  8fc10000	lw	r1,(r30)
 1159  00001c80  00011022	sub	r2,r0,r1
 1160  00001c84  afc20000	sw	(r30),r2
 1161  00001c88  08000118	j	L61_LF2
 1162  00001c8c  54000000	nop; delay slot nop
 1163  00001c90          	L60_LF2:
 1164  00001c90  8fc10000	lw	r1,(r30)
 1165  00001c94  64220000	snei	r2,r1,#0
 1166  00001c98  14400020	bnez	r2,L62_LF2
 1167  00001c9c  54000000	nop; delay slot nop
 1168  00001ca0  8fc10004	lw	r1,4(r30)
 1169  00001ca4  20220001	addi	r2,r1,#1
 1170  00001ca8  afc20004	sw	4(r30),r2
 1171  00001cac  20020030	addi	r2,r0,(#0x30)&0xff
 1172  00001cb0  a0220000	sb	(r1),r2
 1173  00001cb4  080000ec	j	L61_LF2
 1174  00001cb8  54000000	nop; delay slot nop
 1175  00001cbc          	L62_LF2:
 1176  00001cbc  20010001	addi	r1,r0,#1
 1177  00001cc0  afc1fff4	sw	-12(r30),r1
 1178  00001cc4          	L64_LF2:
 1179  00001cc4  8fc1fff4	lw	r1,-12(r30)
 1180  00001cc8  8fc20000	lw	r2,(r30)
 1181  00001ccc  0022082c	sle	r1,r1,r2
 1182  00001cd0  1420000c	bnez	r1,L66_LF2
 1183  00001cd4  54000000	nop; delay slot nop
 1184  00001cd8  08000024	j	L65_LF2
 1185  00001cdc  54000000	nop; delay slot nop
 1186  00001ce0          	L67_LF2:
 1187  00001ce0          	L66_LF2:
 1188  00001ce0  8fc1fff4	lw	r1,-12(r30)
 1189  00001ce4  00011820	add	r3,r0,r1
 1190  00001ce8  50620002	slli	r2,r3,#0x2
 1191  00001cec  00411020	add	r2,r2,r1
 1192  00001cf0  50410001	slli	r1,r2,#0x1
 1193  00001cf4  afc1fff4	sw	-12(r30),r1
 1194  00001cf8  0bffffc8	j	L64_LF2
 1195  00001cfc  54000000	nop; delay slot nop
 1196  00001d00          	L65_LF2:
 1197  00001d00  54000000	nop
 1198  00001d04          	L68_LF2:
 1199  00001d04  8fc1fff4	lw	r1,-12(r30)
 1200  00001d08  2002000a	addi	r2,r0,#10
 1201  00001d0c  00200035	movi2fp	f0,r1
 1202  00001d10  00400835	movi2fp	f1,r2
 1203  00001d14  0401000f	div	f0,f0,f1
 1204  00001d18  00000834	movfp2i	r1,f0
 1205  00001d1c  afc1fff4	sw	-12(r30),r1
 1206  00001d20  8fc10004	lw	r1,4(r30)
 1207  00001d24  20220001	addi	r2,r1,#1
 1208  00001d28  afc20004	sw	4(r30),r2
 1209  00001d2c  8fc20000	lw	r2,(r30)
 1210  00001d30  8fc3fff4	lw	r3,-12(r30)
 1211  00001d34  00400035	movi2fp	f0,r2
 1212  00001d38  00600835	movi2fp	f1,r3
 1213  00001d3c  0401000f	div	f0,f0,f1
 1214  00001d40  00001034	movfp2i	r2,f0
 1215  00001d44  00021820	add	r3,r0,r2
 1216  00001d48  20620030	addi	r2,r3,#48
 1217  00001d4c  a0220000	sb	(r1),r2
 1218  00001d50  8fc10000	lw	r1,(r30)
 1219  00001d54  8fc3fff4	lw	r3,-12(r30)
 1220  00001d58  00200035	movi2fp	f0,r1
 1221  00001d5c  00600835	movi2fp	f1,r3
 1222  00001d60  0401000f	div	f0,f0,f1
 1223  00001d64  00001034	movfp2i	r2,f0
 1224  00001d68  8fc3fff4	lw	r3,-12(r30)
 1225  00001d6c  00400035	movi2fp	f0,r2
 1226  00001d70  00600835	movi2fp	f1,r3
 1227  00001d74  0401000e	mult	f0,f0,f1
 1228  00001d78  00001034	movfp2i	r2,f0
 1229  00001d7c  00220822	sub	r1,r1,r2
 1230  00001d80  afc10000	sw	(r30),r1
 1231  00001d84          	L70_LF2:
 1232  00001d84  8fc1fff4	lw	r1,-12(r30)
 1233  00001d88  6c220001	sgti	r2,r1,#1
 1234  00001d8c  1440000c	bnez	r2,L71_LF2
 1235  00001d90  54000000	nop; delay slot nop
 1236  00001d94  0800000c	j	L61_LF2
 1237  00001d98  54000000	nop; delay slot nop
 1238  00001d9c          	L71_LF2:
 1239  00001d9c  0bffff64	j	L68_LF2
 1240  00001da0  54000000	nop; delay slot nop
 1241  00001da4          	L69_LF2:
 1242  00001da4          	L63_LF2:
 1243  00001da4          	L61_LF2:
 1244  00001da4  8fc10004	lw	r1,4(r30)
 1245  00001da8  20020000	addi	r2,r0,(#0x0)&0xff
 1246  00001dac  a0220000	sb	(r1),r2
 1247  00001db0          	L59_LF2:
 1248  00001db0  8fa20000	lw	r2,0(r29)
 1249  00001db4  8fa30004	lw	r3,4(r29)
 1250  00001db8  8fdffff8	lw	r31,-8(r30)
 1251  00001dbc  001ee820	add	r29,r0,r30
 1252  00001dc0  8fdefffc	lw	r30,-4(r30)
 1253  00001dc4  4be00000	jr	r31
 1254  00001dc8  54000000	nop
 1255  00001dcc          	.endproc _ditoa
 1256  00001dcc          	.align 2
 1257  00001dcc          	.proc _dstrtol
 1258  00001dcc          	.global _dstrtol
 1259  00001dcc          	_dstrtol:
 1260                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1261  00001dcc  afbefffc	sw	-4(r29),r30; push fp
 1262  00001dd0  001df020	add	r30,r0,r29; fp = sp
 1263  00001dd4  afbffff8	sw	-8(r29),r31; push ret addr
 1264  00001dd8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1265  00001ddc  afa20000	sw	0(r29),r2
 1266  00001de0  20010000	addi	r1,r0,#0
 1267  00001de4  afc1fff4	sw	-12(r30),r1
 1268  00001de8          	L73_LF2:
 1269  00001de8  8fc10000	lw	r1,(r30)
 1270  00001dec  90220000	lbu	r2,(r1)
 1271  00001df0  60410020	seqi	r1,r2,#32
 1272  00001df4  14200034	bnez	r1,L75_LF2
 1273  00001df8  54000000	nop; delay slot nop
 1274  00001dfc  8fc10000	lw	r1,(r30)
 1275  00001e00  90220000	lbu	r2,(r1)
 1276  00001e04  60410009	seqi	r1,r2,#9
 1277  00001e08  14200020	bnez	r1,L75_LF2
 1278  00001e0c  54000000	nop; delay slot nop
 1279  00001e10  8fc10000	lw	r1,(r30)
 1280  00001e14  90220000	lbu	r2,(r1)
 1281  00001e18  6041000a	seqi	r1,r2,#10
 1282  00001e1c  1420000c	bnez	r1,L75_LF2
 1283  00001e20  54000000	nop; delay slot nop
 1284  00001e24  0800001c	j	L74_LF2
 1285  00001e28  54000000	nop; delay slot nop
 1286  00001e2c          	L75_LF2:
 1287  00001e2c  8fc20000	lw	r2,(r30)
 1288  00001e30  20410001	addi	r1,r2,#1
 1289  00001e34  00011020	add	r2,r0,r1
 1290  00001e38  afc20000	sw	(r30),r2
 1291  00001e3c  0bffffa8	j	L73_LF2
 1292  00001e40  54000000	nop; delay slot nop
 1293  00001e44          	L74_LF2:
 1294  00001e44  8fc10004	lw	r1,4(r30)
 1295  00001e48  64220000	snei	r2,r1,#0
 1296  00001e4c  10400010	beqz	r2,L76_LF2
 1297  00001e50  54000000	nop; delay slot nop
 1298  00001e54  8fc10004	lw	r1,4(r30)
 1299  00001e58  8fc20000	lw	r2,(r30)
 1300  00001e5c  ac220000	sw	(r1),r2
 1301  00001e60          	L76_LF2:
 1302  00001e60  8fc10000	lw	r1,(r30)
 1303  00001e64  90220000	lbu	r2,(r1)
 1304  00001e68  64410000	snei	r1,r2,#0
 1305  00001e6c  14200010	bnez	r1,L77_LF2
 1306  00001e70  54000000	nop; delay slot nop
 1307  00001e74  8fc1fff4	lw	r1,-12(r30)
 1308  00001e78  08000294	j	L72_LF2
 1309  00001e7c  54000000	nop; delay slot nop
 1310  00001e80          	L77_LF2:
 1311  00001e80  8fc10000	lw	r1,(r30)
 1312  00001e84  90220000	lbu	r2,(r1)
 1313  00001e88  6041002d	seqi	r1,r2,#45
 1314  00001e8c  10200024	beqz	r1,L78_LF2
 1315  00001e90  54000000	nop; delay slot nop
 1316  00001e94  2001ffff	addi	r1,r0,#-1
 1317  00001e98  afc1ffec	sw	-20(r30),r1
 1318  00001e9c  8fc20000	lw	r2,(r30)
 1319  00001ea0  20410001	addi	r1,r2,#1
 1320  00001ea4  00011020	add	r2,r0,r1
 1321  00001ea8  afc20000	sw	(r30),r2
 1322  00001eac  0800000c	j	L79_LF2
 1323  00001eb0  54000000	nop; delay slot nop
 1324  00001eb4          	L78_LF2:
 1325  00001eb4  20010001	addi	r1,r0,#1
 1326  00001eb8  afc1ffec	sw	-20(r30),r1
 1327  00001ebc          	L79_LF2:
 1328  00001ebc  8fc10008	lw	r1,8(r30)
 1329  00001ec0  64220000	snei	r2,r1,#0
 1330  00001ec4  14400090	bnez	r2,L80_LF2
 1331  00001ec8  54000000	nop; delay slot nop
 1332  00001ecc  8fc10000	lw	r1,(r30)
 1333  00001ed0  90220000	lbu	r2,(r1)
 1334  00001ed4  60410030	seqi	r1,r2,#48
 1335  00001ed8  10200074	beqz	r1,L81_LF2
 1336  00001edc  54000000	nop; delay slot nop
 1337  00001ee0  8fc20000	lw	r2,(r30)
 1338  00001ee4  20410001	addi	r1,r2,#1
 1339  00001ee8  00011020	add	r2,r0,r1
 1340  00001eec  afc20000	sw	(r30),r2
 1341  00001ef0  8fc10000	lw	r1,(r30)
 1342  00001ef4  90220000	lbu	r2,(r1)
 1343  00001ef8  60410078	seqi	r1,r2,#120
 1344  00001efc  14200020	bnez	r1,L83_LF2
 1345  00001f00  54000000	nop; delay slot nop
 1346  00001f04  8fc10000	lw	r1,(r30)
 1347  00001f08  90220000	lbu	r2,(r1)
 1348  00001f0c  60410058	seqi	r1,r2,#88
 1349  00001f10  1420000c	bnez	r1,L83_LF2
 1350  00001f14  54000000	nop; delay slot nop
 1351  00001f18  08000024	j	L82_LF2
 1352  00001f1c  54000000	nop; delay slot nop
 1353  00001f20          	L83_LF2:
 1354  00001f20  20010010	addi	r1,r0,#16
 1355  00001f24  afc10008	sw	8(r30),r1
 1356  00001f28  8fc20000	lw	r2,(r30)
 1357  00001f2c  20410001	addi	r1,r2,#1
 1358  00001f30  00011020	add	r2,r0,r1
 1359  00001f34  afc20000	sw	(r30),r2
 1360  00001f38  0800000c	j	L84_LF2
 1361  00001f3c  54000000	nop; delay slot nop
 1362  00001f40          	L82_LF2:
 1363  00001f40  20010008	addi	r1,r0,#8
 1364  00001f44  afc10008	sw	8(r30),r1
 1365  00001f48          	L84_LF2:
 1366  00001f48  0800000c	j	L80_LF2
 1367  00001f4c  54000000	nop; delay slot nop
 1368  00001f50          	L81_LF2:
 1369  00001f50  2001000a	addi	r1,r0,#10
 1370  00001f54  afc10008	sw	8(r30),r1
 1371  00001f58          	L85_LF2:
 1372  00001f58          	L80_LF2:
 1373  00001f58  8fc10008	lw	r1,8(r30)
 1374  00001f5c  70220000	slei	r2,r1,#0
 1375  00001f60  1440001c	bnez	r2,L87_LF2
 1376  00001f64  54000000	nop; delay slot nop
 1377  00001f68  8fc10008	lw	r1,8(r30)
 1378  00001f6c  6c220010	sgti	r2,r1,#16
 1379  00001f70  1440000c	bnez	r2,L87_LF2
 1380  00001f74  54000000	nop; delay slot nop
 1381  00001f78  08000010	j	L86_LF2
 1382  00001f7c  54000000	nop; delay slot nop
 1383  00001f80          	L87_LF2:
 1384  00001f80  8fc1fff4	lw	r1,-12(r30)
 1385  00001f84  08000188	j	L72_LF2
 1386  00001f88  54000000	nop; delay slot nop
 1387  00001f8c          	L86_LF2:
 1388  00001f8c  54000000	nop
 1389  00001f90          	L88_LF2:
 1390  00001f90  8fc10000	lw	r1,(r30)
 1391  00001f94  90220000	lbu	r2,(r1)
 1392  00001f98  6c41002f	sgtui	r1,r2,#47
 1393  00001f9c  10200030	beqz	r1,L91_LF2
 1394  00001fa0  54000000	nop; delay slot nop
 1395  00001fa4  8fc10000	lw	r1,(r30)
 1396  00001fa8  90220000	lbu	r2,(r1)
 1397  00001fac  70410039	sleui	r1,r2,#57
 1398  00001fb0  1020001c	beqz	r1,L91_LF2
 1399  00001fb4  54000000	nop; delay slot nop
 1400  00001fb8  8fc10000	lw	r1,(r30)
 1401  00001fbc  90220000	lbu	r2,(r1)
 1402  00001fc0  2041ffd0	addi	r1,r2,#-48
 1403  00001fc4  afc1fff0	sw	-16(r30),r1
 1404  00001fc8  0800008c	j	L92_LF2
 1405  00001fcc  54000000	nop; delay slot nop
 1406  00001fd0          	L91_LF2:
 1407  00001fd0  8fc10000	lw	r1,(r30)
 1408  00001fd4  90220000	lbu	r2,(r1)
 1409  00001fd8  6c410060	sgtui	r1,r2,#96
 1410  00001fdc  10200030	beqz	r1,L93_LF2
 1411  00001fe0  54000000	nop; delay slot nop
 1412  00001fe4  8fc10000	lw	r1,(r30)
 1413  00001fe8  90220000	lbu	r2,(r1)
 1414  00001fec  7041007a	sleui	r1,r2,#122
 1415  00001ff0  1020001c	beqz	r1,L93_LF2
 1416  00001ff4  54000000	nop; delay slot nop
 1417  00001ff8  8fc10000	lw	r1,(r30)
 1418  00001ffc  90220000	lbu	r2,(r1)
 1419  00002000  2041ffa9	addi	r1,r2,#-87
 1420  00002004  afc1fff0	sw	-16(r30),r1
 1421  00002008  0800004c	j	L92_LF2
 1422  0000200c  54000000	nop; delay slot nop
 1423  00002010          	L93_LF2:
 1424  00002010  8fc10000	lw	r1,(r30)
 1425  00002014  90220000	lbu	r2,(r1)
 1426  00002018  6c410040	sgtui	r1,r2,#64
 1427  0000201c  10200030	beqz	r1,L95_LF2
 1428  00002020  54000000	nop; delay slot nop
 1429  00002024  8fc10000	lw	r1,(r30)
 1430  00002028  90220000	lbu	r2,(r1)
 1431  0000202c  7041005a	sleui	r1,r2,#90
 1432  00002030  1020001c	beqz	r1,L95_LF2
 1433  00002034  54000000	nop; delay slot nop
 1434  00002038  8fc10000	lw	r1,(r30)
 1435  0000203c  90220000	lbu	r2,(r1)
 1436  00002040  2041ffc9	addi	r1,r2,#-55
 1437  00002044  afc1fff0	sw	-16(r30),r1
 1438  00002048  0800000c	j	L92_LF2
 1439  0000204c  54000000	nop; delay slot nop
 1440  00002050          	L95_LF2:
 1441  00002050  200103e8	addi	r1,r0,#1000
 1442  00002054  afc1fff0	sw	-16(r30),r1
 1443  00002058          	L96_LF2:
 1444  00002058          	L94_LF2:
 1445  00002058          	L92_LF2:
 1446  00002058  8fc1fff0	lw	r1,-16(r30)
 1447  0000205c  8fc20008	lw	r2,8(r30)
 1448  00002060  0022082a	slt	r1,r1,r2
 1449  00002064  10200040	beqz	r1,L90_LF2
 1450  00002068  54000000	nop; delay slot nop
 1451  0000206c  8fc1fff4	lw	r1,-12(r30)
 1452  00002070  8fc20008	lw	r2,8(r30)
 1453  00002074  00200035	movi2fp	f0,r1
 1454  00002078  00400835	movi2fp	f1,r2
 1455  0000207c  0401000e	mult	f0,f0,f1
 1456  00002080  00000834	movfp2i	r1,f0
 1457  00002084  afc1fff4	sw	-12(r30),r1
 1458  00002088  8fc1fff4	lw	r1,-12(r30)
 1459  0000208c  8fc2fff0	lw	r2,-16(r30)
 1460  00002090  00220820	add	r1,r1,r2
 1461  00002094  afc1fff4	sw	-12(r30),r1
 1462  00002098  8fc20000	lw	r2,(r30)
 1463  0000209c  20410001	addi	r1,r2,#1
 1464  000020a0  00011020	add	r2,r0,r1
 1465  000020a4  afc20000	sw	(r30),r2
 1466  000020a8          	L97_LF2:
 1467  000020a8          	L90_LF2:
 1468  000020a8  8fc1fff0	lw	r1,-16(r30)
 1469  000020ac  8fc20008	lw	r2,8(r30)
 1470  000020b0  0022082a	slt	r1,r1,r2
 1471  000020b4  1420000c	bnez	r1,L98_LF2
 1472  000020b8  54000000	nop; delay slot nop
 1473  000020bc  0800000c	j	L89_LF2
 1474  000020c0  54000000	nop; delay slot nop
 1475  000020c4          	L98_LF2:
 1476  000020c4  0bfffec8	j	L88_LF2
 1477  000020c8  54000000	nop; delay slot nop
 1478  000020cc          	L89_LF2:
 1479  000020cc  8fc10004	lw	r1,4(r30)
 1480  000020d0  64220000	snei	r2,r1,#0
 1481  000020d4  10400010	beqz	r2,L99_LF2
 1482  000020d8  54000000	nop; delay slot nop
 1483  000020dc  8fc10004	lw	r1,4(r30)
 1484  000020e0  8fc20000	lw	r2,(r30)
 1485  000020e4  ac220000	sw	(r1),r2
 1486  000020e8          	L99_LF2:
 1487  000020e8  8fc1fff4	lw	r1,-12(r30)
 1488  000020ec  8fc2ffec	lw	r2,-20(r30)
 1489  000020f0  00200035	movi2fp	f0,r1
 1490  000020f4  00400835	movi2fp	f1,r2
 1491  000020f8  0401000e	mult	f0,f0,f1
 1492  000020fc  00000834	movfp2i	r1,f0
 1493  00002100  afc1fff4	sw	-12(r30),r1
 1494  00002104  8fc1fff4	lw	r1,-12(r30)
 1495  00002108  08000004	j	L72_LF2
 1496  0000210c  54000000	nop; delay slot nop
 1497  00002110          	L72_LF2:
 1498  00002110  8fa20000	lw	r2,0(r29)
 1499  00002114  8fdffff8	lw	r31,-8(r30)
 1500  00002118  001ee820	add	r29,r0,r30
 1501  0000211c  8fdefffc	lw	r30,-4(r30)
 1502  00002120  4be00000	jr	r31
 1503  00002124  54000000	nop
 1504  00002128          	.endproc _dstrtol
 1505  00002128          	.align 2
 1506  00002128          	.proc _bcopy
 1507  00002128          	.global _bcopy
 1508  00002128          	_bcopy:
 1509                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1510  00002128  afbefffc	sw	-4(r29),r30; push fp
 1511  0000212c  001df020	add	r30,r0,r29; fp = sp
 1512  00002130  afbffff8	sw	-8(r29),r31; push ret addr
 1513  00002134  2fbd0010	subui	r29,r29,#16; alloc local storage
 1514  00002138  afa20000	sw	0(r29),r2
 1515  0000213c  afa30004	sw	4(r29),r3
 1516  00002140  54000000	nop
 1517  00002144          	L101_LF2:
 1518  00002144  8fc10008	lw	r1,8(r30)
 1519  00002148  2022ffff	addi	r2,r1,#-1
 1520  0000214c  afc20008	sw	8(r30),r2
 1521  00002150  6c210000	sgti	r1,r1,#0
 1522  00002154  1420000c	bnez	r1,L103_LF2
 1523  00002158  54000000	nop; delay slot nop
 1524  0000215c  0800002c	j	L102_LF2
 1525  00002160  54000000	nop; delay slot nop
 1526  00002164          	L103_LF2:
 1527  00002164  8fc10004	lw	r1,4(r30)
 1528  00002168  20220001	addi	r2,r1,#1
 1529  0000216c  afc20004	sw	4(r30),r2
 1530  00002170  8fc20000	lw	r2,(r30)
 1531  00002174  20430001	addi	r3,r2,#1
 1532  00002178  afc30000	sw	(r30),r3
 1533  0000217c  80420000	lb	r2,(r2)
 1534  00002180  a0220000	sb	(r1),r2
 1535  00002184  0bffffbc	j	L101_LF2
 1536  00002188  54000000	nop; delay slot nop
 1537  0000218c          	L102_LF2:
 1538  0000218c          	L100_LF2:
 1539  0000218c  8fa20000	lw	r2,0(r29)
 1540  00002190  8fa30004	lw	r3,4(r29)
 1541  00002194  8fdffff8	lw	r31,-8(r30)
 1542  00002198  001ee820	add	r29,r0,r30
 1543  0000219c  8fdefffc	lw	r30,-4(r30)
 1544  000021a0  4be00000	jr	r31
 1545  000021a4  54000000	nop
 1546  000021a8          	.endproc _bcopy
 1547  000021a8          	.align 2
 1548  000021a8          	.proc _bzero
 1549  000021a8          	.global _bzero
 1550  000021a8          	_bzero:
 1551                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1552  000021a8  afbefffc	sw	-4(r29),r30; push fp
 1553  000021ac  001df020	add	r30,r0,r29; fp = sp
 1554  000021b0  afbffff8	sw	-8(r29),r31; push ret addr
 1555  000021b4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1556  000021b8  afa20000	sw	0(r29),r2
 1557  000021bc  54000000	nop
 1558  000021c0          	L105_LF2:
 1559  000021c0  8fc10004	lw	r1,4(r30)
 1560  000021c4  2022ffff	addi	r2,r1,#-1
 1561  000021c8  afc20004	sw	4(r30),r2
 1562  000021cc  6c210000	sgti	r1,r1,#0
 1563  000021d0  1420000c	bnez	r1,L107_LF2
 1564  000021d4  54000000	nop; delay slot nop
 1565  000021d8  08000020	j	L106_LF2
 1566  000021dc  54000000	nop; delay slot nop
 1567  000021e0          	L107_LF2:
 1568  000021e0  8fc10000	lw	r1,(r30)
 1569  000021e4  20220001	addi	r2,r1,#1
 1570  000021e8  afc20000	sw	(r30),r2
 1571  000021ec  20020000	addi	r2,r0,(#0x0)&0xff
 1572  000021f0  a0220000	sb	(r1),r2
 1573  000021f4  0bffffc8	j	L105_LF2
 1574  000021f8  54000000	nop; delay slot nop
 1575  000021fc          	L106_LF2:
 1576  000021fc          	L104_LF2:
 1577  000021fc  8fa20000	lw	r2,0(r29)
 1578  00002200  8fdffff8	lw	r31,-8(r30)
 1579  00002204  001ee820	add	r29,r0,r30
 1580  00002208  8fdefffc	lw	r30,-4(r30)
 1581  0000220c  4be00000	jr	r31
 1582  00002210  54000000	nop
 1583  00002214          	.endproc _bzero
 1584  00002214          	.align 2
 1585  00002214          	.proc _min
 1586  00002214          	.global _min
 1587  00002214          	_min:
 1588                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1589  00002214  afbefffc	sw	-4(r29),r30; push fp
 1590  00002218  001df020	add	r30,r0,r29; fp = sp
 1591  0000221c  afbffff8	sw	-8(r29),r31; push ret addr
 1592  00002220  2fbd0010	subui	r29,r29,#16; alloc local storage
 1593  00002224  afa20000	sw	0(r29),r2
 1594  00002228  afa30004	sw	4(r29),r3
 1595  0000222c  8fc10000	lw	r1,(r30)
 1596  00002230  8fc20004	lw	r2,4(r30)
 1597  00002234  0022182c	sle	r3,r1,r2
 1598  00002238  14600008	bnez	r3,L109_LF2
 1599  0000223c  54000000	nop; delay slot nop
 1600  00002240  8fc10004	lw	r1,4(r30)
 1601  00002244          	L109_LF2:
 1602  00002244  08000004	j	L108_LF2
 1603  00002248  54000000	nop; delay slot nop
 1604  0000224c          	L108_LF2:
 1605  0000224c  8fa20000	lw	r2,0(r29)
 1606  00002250  8fa30004	lw	r3,4(r29)
 1607  00002254  8fdffff8	lw	r31,-8(r30)
 1608  00002258  001ee820	add	r29,r0,r30
 1609  0000225c  8fdefffc	lw	r30,-4(r30)
 1610  00002260  4be00000	jr	r31
 1611  00002264  54000000	nop
 1612  00002268          	.endproc _min
 1613  00002268          	.align 2
 1614  00002268          	.proc _max
 1615  00002268          	.global _max
 1616  00002268          	_max:
 1617                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1618  00002268  afbefffc	sw	-4(r29),r30; push fp
 1619  0000226c  001df020	add	r30,r0,r29; fp = sp
 1620  00002270  afbffff8	sw	-8(r29),r31; push ret addr
 1621  00002274  2fbd0010	subui	r29,r29,#16; alloc local storage
 1622  00002278  afa20000	sw	0(r29),r2
 1623  0000227c  afa30004	sw	4(r29),r3
 1624  00002280  8fc10000	lw	r1,(r30)
 1625  00002284  8fc20004	lw	r2,4(r30)
 1626  00002288  0022182d	sge	r3,r1,r2
 1627  0000228c  14600008	bnez	r3,L111_LF2
 1628  00002290  54000000	nop; delay slot nop
 1629  00002294  8fc10004	lw	r1,4(r30)
 1630  00002298          	L111_LF2:
 1631  00002298  08000004	j	L110_LF2
 1632  0000229c  54000000	nop; delay slot nop
 1633  000022a0          	L110_LF2:
 1634  000022a0  8fa20000	lw	r2,0(r29)
 1635  000022a4  8fa30004	lw	r3,4(r29)
 1636  000022a8  8fdffff8	lw	r31,-8(r30)
 1637  000022ac  001ee820	add	r29,r0,r30
 1638  000022b0  8fdefffc	lw	r30,-4(r30)
 1639  000022b4  4be00000	jr	r31
 1640  000022b8  54000000	nop
 1641  000022bc          	.endproc _max
 1642                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1643                      ;;;
 1644                      ;;; Most of the traps are called in files from libtraps.
 1647  000022bc          	.align 2
 1648  000022bc          	.proc _exit
 1649  000022bc          	.global _exit
 1650  000022bc          	_exit:
 1651  000022bc  44000300	trap	#0x300
 1652  000022c0  4be00000	jr	r31
 1653  000022c4  54000000	nop
 1654  000022c8          	.endproc _exit
 1656                      ; for the benefit of gcc.
 1657  000022c8          	.proc ___main
 1658  000022c8          	.global ___main
 1659  000022c8          	___main:
 1660  000022c8  4be00000	jr	r31
 1661  000022cc  54000000	nop
 1662  000022d0          	.endproc ___main
 1663  000022d0          	.text
 1664  000022d0          	.global _etext
 1665  000022d0          	_etext:
 1666  000022d0          	.align 3
 1667  000022d0          	.data
 1668  000030d2          	.global _edata
 1669  000030d2          	_edata:
