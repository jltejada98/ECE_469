 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 122
    4                      ; Text size: 4676
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  496e636f	.ascii "Incorrect Arguments for %s\000"
   82  00003004  72726563	
   82  00003008  74204172	
   82  0000300c  67756d65	
   82  00003010  6e747320	
   82  00003014  666f7220	
   82  00003018  257300  	
   83  0000301b          	.align 2
   84  0000301c          	LC1_LF0:
   85  0000301c  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
   85  00003020  73656d61	
   85  00003024  70686f72	
   85  00003028  65207365	
   85  0000302c  6d5f7072	
   85  00003030  6f63735f	
   85  00003034  636f6d70	
   85  00003038  6c657465	
   85  0000303c  64202825	
   85  00003040  64292069	
   85  00003044  6e2000  	
   86  00003047          	.align 2
   87  00003048          	LC2_LF0:
   88  00003048  2c206578	.ascii ", exiting...\n\000"
   88  0000304c  6974696e	
   88  00003050  672e2e2e	
   88  00003054  0a00    	
   89  00003056          	.align 2
   90  00003058          	LC3_LF0:
   91  00003058  534f3420	.ascii "SO4 -> SO2 + O2 reacted, PID: %d\n\000"
   91  0000305c  2d3e2053	
   91  00003060  4f32202b	
   91  00003064  204f3220	
   91  00003068  72656163	
   91  0000306c  7465642c	
   91  00003070  20504944	
   91  00003074  3a202564	
   91  00003078  0a00    	
   92  0000307a          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc40004	lw	r4,4(r30)
  104  000010ec  0c00114c	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410006	snei	r1,r2,#6
  107  000010f8  10200030	beqz	r1,L14_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  111  00001108  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  112  0000110c  afa90000	sw	(r29),r9
  113  00001110  8c810000	lw	r1,(r4)
  114  00001114  afa10004	sw	4(r29),r1
  115  00001118  0c000318	jal	_Printf
  116  0000111c  54000000	nop; not filled.
  117  00001120  0c0003c4	jal	_Exit
  118  00001124  54000000	nop; not filled.
  119  00001128  23bd0008	addi	r29,r29,#8
  120  0000112c          	L14_LF0:
  121  0000112c  23bdfff0	addi	r29,r29,#-16
  122  00001130  8c890004	lw	r9,4(r4)
  123  00001134  afa90000	sw	(r29),r9
  124  00001138  20090000	addi	r9,r0,#0
  125  0000113c  afa90004	sw	4(r29),r9
  126  00001140  2009000a	addi	r9,r0,#10
  127  00001144  afa90008	sw	8(r29),r9
  128  00001148  0c000c48	jal	_dstrtol
  129  0000114c  54000000	nop; not filled.
  130  00001150  00011820	add	r3,r0,r1
  131  00001154  8c890008	lw	r9,8(r4)
  132  00001158  afa90000	sw	(r29),r9
  133  0000115c  20090000	addi	r9,r0,#0
  134  00001160  afa90004	sw	4(r29),r9
  135  00001164  2009000a	addi	r9,r0,#10
  136  00001168  afa90008	sw	8(r29),r9
  137  0000116c  0c000c24	jal	_dstrtol
  138  00001170  54000000	nop; not filled.
  139  00001174  00014020	add	r8,r0,r1
  140  00001178  8c89000c	lw	r9,12(r4)
  141  0000117c  afa90000	sw	(r29),r9
  142  00001180  20090000	addi	r9,r0,#0
  143  00001184  afa90004	sw	4(r29),r9
  144  00001188  2009000a	addi	r9,r0,#10
  145  0000118c  afa90008	sw	8(r29),r9
  146  00001190  0c000c00	jal	_dstrtol
  147  00001194  54000000	nop; not filled.
  148  00001198  00013820	add	r7,r0,r1
  149  0000119c  8c890010	lw	r9,16(r4)
  150  000011a0  afa90000	sw	(r29),r9
  151  000011a4  20090000	addi	r9,r0,#0
  152  000011a8  afa90004	sw	4(r29),r9
  153  000011ac  2009000a	addi	r9,r0,#10
  154  000011b0  afa90008	sw	8(r29),r9
  155  000011b4  0c000bdc	jal	_dstrtol
  156  000011b8  54000000	nop; not filled.
  157  000011bc  00013020	add	r6,r0,r1
  158  000011c0  8c890014	lw	r9,20(r4)
  159  000011c4  afa90000	sw	(r29),r9
  160  000011c8  20090000	addi	r9,r0,#0
  161  000011cc  afa90004	sw	4(r29),r9
  162  000011d0  2009000a	addi	r9,r0,#10
  163  000011d4  afa90008	sw	8(r29),r9
  164  000011d8  0c000bb8	jal	_dstrtol
  165  000011dc  54000000	nop; not filled.
  166  000011e0  00012820	add	r5,r0,r1
  167  000011e4  20020000	addi	r2,r0,#0
  168  000011e8  23bd0010	addi	r29,r29,#16
  169  000011ec  0045082a	slt	r1,r2,r5
  170  000011f0  10200180	beqz	r1,L16_LF0
  171  000011f4  54000000	nop; not filled.
  172  000011f8          	L18_LF0:
  173  000011f8  23bdfff8	addi	r29,r29,#-8
  174  000011fc  afa80000	sw	(r29),r8
  175  00001200  0c000278	jal	_sem_wait
  176  00001204  54000000	nop; not filled.
  177  00001208  23bd0008	addi	r29,r29,#8
  178  0000120c  64210001	snei	r1,r1,#1
  179  00001210  10200050	beqz	r1,L19_LF0
  180  00001214  54000000	nop; not filled.
  181  00001218  23bdfff8	addi	r29,r29,#-8
  182  0000121c  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  183  00001220  2529301c	addui	r9,r9,(LC1_LF0)&0xffff
  184  00001224  afa90000	sw	(r29),r9
  185  00001228  afa30004	sw	4(r29),r3
  186  0000122c  0c000204	jal	_Printf
  187  00001230  54000000	nop; not filled.
  188  00001234  8c890000	lw	r9,(r4)
  189  00001238  afa90000	sw	(r29),r9
  190  0000123c  0c0001f4	jal	_Printf
  191  00001240  54000000	nop; not filled.
  192  00001244  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  193  00001248  25293048	addui	r9,r9,(LC2_LF0)&0xffff
  194  0000124c  afa90000	sw	(r29),r9
  195  00001250  0c0001e0	jal	_Printf
  196  00001254  54000000	nop; not filled.
  197  00001258  0c00028c	jal	_Exit
  198  0000125c  54000000	nop; not filled.
  199  00001260  23bd0008	addi	r29,r29,#8
  200  00001264          	L19_LF0:
  201  00001264  23bdfff8	addi	r29,r29,#-8
  202  00001268  afa70000	sw	(r29),r7
  203  0000126c  0c000218	jal	_sem_signal
  204  00001270  54000000	nop; not filled.
  205  00001274  23bd0008	addi	r29,r29,#8
  206  00001278  64210001	snei	r1,r1,#1
  207  0000127c  10200050	beqz	r1,L20_LF0
  208  00001280  54000000	nop; not filled.
  209  00001284  23bdfff8	addi	r29,r29,#-8
  210  00001288  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  211  0000128c  2529301c	addui	r9,r9,(LC1_LF0)&0xffff
  212  00001290  afa90000	sw	(r29),r9
  213  00001294  afa30004	sw	4(r29),r3
  214  00001298  0c000198	jal	_Printf
  215  0000129c  54000000	nop; not filled.
  216  000012a0  8c890000	lw	r9,(r4)
  217  000012a4  afa90000	sw	(r29),r9
  218  000012a8  0c000188	jal	_Printf
  219  000012ac  54000000	nop; not filled.
  220  000012b0  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  221  000012b4  25293048	addui	r9,r9,(LC2_LF0)&0xffff
  222  000012b8  afa90000	sw	(r29),r9
  223  000012bc  0c000174	jal	_Printf
  224  000012c0  54000000	nop; not filled.
  225  000012c4  0c000220	jal	_Exit
  226  000012c8  54000000	nop; not filled.
  227  000012cc  23bd0008	addi	r29,r29,#8
  228  000012d0          	L20_LF0:
  229  000012d0  23bdfff8	addi	r29,r29,#-8
  230  000012d4  afa60000	sw	(r29),r6
  231  000012d8  0c0001ac	jal	_sem_signal
  232  000012dc  54000000	nop; not filled.
  233  000012e0  23bd0008	addi	r29,r29,#8
  234  000012e4  64210001	snei	r1,r1,#1
  235  000012e8  10200050	beqz	r1,L21_LF0
  236  000012ec  54000000	nop; not filled.
  237  000012f0  23bdfff8	addi	r29,r29,#-8
  238  000012f4  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  239  000012f8  2529301c	addui	r9,r9,(LC1_LF0)&0xffff
  240  000012fc  afa90000	sw	(r29),r9
  241  00001300  afa30004	sw	4(r29),r3
  242  00001304  0c00012c	jal	_Printf
  243  00001308  54000000	nop; not filled.
  244  0000130c  8c890000	lw	r9,(r4)
  245  00001310  afa90000	sw	(r29),r9
  246  00001314  0c00011c	jal	_Printf
  247  00001318  54000000	nop; not filled.
  248  0000131c  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  249  00001320  25293048	addui	r9,r9,(LC2_LF0)&0xffff
  250  00001324  afa90000	sw	(r29),r9
  251  00001328  0c000108	jal	_Printf
  252  0000132c  54000000	nop; not filled.
  253  00001330  0c0001b4	jal	_Exit
  254  00001334  54000000	nop; not filled.
  255  00001338  23bd0008	addi	r29,r29,#8
  256  0000133c          	L21_LF0:
  257  0000133c  0c000100	jal	_getpid
  258  00001340  54000000	nop; not filled.
  259  00001344  23bdfff8	addi	r29,r29,#-8
  260  00001348  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  261  0000134c  25293058	addui	r9,r9,(LC3_LF0)&0xffff
  262  00001350  afa90000	sw	(r29),r9
  263  00001354  afa10004	sw	4(r29),r1
  264  00001358  0c0000d8	jal	_Printf
  265  0000135c  54000000	nop; not filled.
  266  00001360  23bd0008	addi	r29,r29,#8
  267  00001364  20420001	addi	r2,r2,#1
  268  00001368  0045082a	slt	r1,r2,r5
  269  0000136c  1420fe88	bnez	r1,L18_LF0
  270  00001370  54000000	nop; not filled.
  271  00001374          	L16_LF0:
  272  00001374  23bdfff8	addi	r29,r29,#-8
  273  00001378  afa30000	sw	(r29),r3
  274  0000137c  0c000108	jal	_sem_signal
  275  00001380  54000000	nop; not filled.
  276  00001384  23bd0008	addi	r29,r29,#8
  277  00001388  64210001	snei	r1,r1,#1
  278  0000138c  10200050	beqz	r1,L23_LF0
  279  00001390  54000000	nop; not filled.
  280  00001394  23bdfff8	addi	r29,r29,#-8
  281  00001398  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  282  0000139c  2529301c	addui	r9,r9,(LC1_LF0)&0xffff
  283  000013a0  afa90000	sw	(r29),r9
  284  000013a4  afa30004	sw	4(r29),r3
  285  000013a8  0c000088	jal	_Printf
  286  000013ac  54000000	nop; not filled.
  287  000013b0  8c840000	lw	r4,(r4)
  288  000013b4  afa40000	sw	(r29),r4
  289  000013b8  0c000078	jal	_Printf
  290  000013bc  54000000	nop; not filled.
  291  000013c0  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  292  000013c4  25293048	addui	r9,r9,(LC2_LF0)&0xffff
  293  000013c8  afa90000	sw	(r29),r9
  294  000013cc  0c000064	jal	_Printf
  295  000013d0  54000000	nop; not filled.
  296  000013d4  0c000110	jal	_Exit
  297  000013d8  54000000	nop; not filled.
  298  000013dc  23bd0008	addi	r29,r29,#8
  299  000013e0          	L23_LF0:
  300  000013e0  20010000	addi	r1,r0,#0
  301  000013e4  0c000e48	jal	_exit
  302  000013e8  54000000	nop
  303  000013ec          	.endproc _main
  304                      ;;;
  305                      ;;; Stub functions for DLX traps.
  306                      ;;;
  307                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  308                      ;;;
  309                      ;;; The traps such as Open and Close
  310                      ;;; (note the capital letters) are for use by user programs.  The traps
  311                      ;;; with names such as open and close (lower case) are for use by the OS.
  312                      ;;;
  315  000013ec          	.align 2
  317                      ;;; The following are the traps to be used by user-level programs
  318                      ;;;
  320  000013ec          	.align 2
  321  000013ec          	.proc _Open
  322  000013ec          	.global _Open
  323  000013ec          	_Open:
  324                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  325                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  326                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  327  000013ec  44000213	trap	#0x213
  328  000013f0  4be00000	jr	r31
  329  000013f4  54000000	nop
  330  000013f8          	.endproc _Open
  332  000013f8          	.proc _Close
  333  000013f8          	.global _Close
  334  000013f8          	_Close:
  335  000013f8  44000214	trap	#0x214
  336  000013fc  4be00000	jr	r31
  337  00001400  54000000	nop
  338  00001404          	.endproc _Close
  340  00001404          	.proc _Read
  341  00001404          	.global _Read
  342  00001404          	_Read:
  343  00001404  44000210	trap	#0x210
  344  00001408  4be00000	jr	r31
  345  0000140c  54000000	nop
  346  00001410          	.endproc _Read
  348  00001410          	.proc _Write
  349  00001410          	.global _Write
  350  00001410          	_Write:
  351  00001410  44000211	trap	#0x211
  352  00001414  4be00000	jr	r31
  353  00001418  54000000	nop
  354  0000141c          	.endproc _Write
  356  0000141c          	.proc _Lseek
  357  0000141c          	.global _Lseek
  358  0000141c          	_Lseek:
  359  0000141c  44000212	trap	#0x212
  360  00001420  4be00000	jr	r31
  361  00001424  54000000	nop
  362  00001428          	.endproc _Lseek
  364  00001428          	.proc _Putchar
  365  00001428          	.global _Putchar
  366  00001428          	_Putchar:
  367  00001428  44000280	trap	#0x280
  368  0000142c  4be00000	jr	r31
  369  00001430  54000000	nop
  370  00001434          	.endproc _Putchar
  372  00001434          	.proc _Printf
  373  00001434          	.global _Printf
  374  00001434          	_Printf:
  375  00001434  44000201	trap	#0x201
  376  00001438  4be00000	jr	r31
  377  0000143c  54000000	nop
  378  00001440          	.endproc _Printf
  380  00001440          	.proc _getpid
  381  00001440          	.global _getpid
  382  00001440          	_getpid:
  383  00001440  44000431	trap	#0x431
  384  00001444  4be00000	jr	r31
  385  00001448  54000000	nop
  386  0000144c          	.endproc _getpid
  388  0000144c          	.proc _process_create
  389  0000144c          	.global _process_create
  390  0000144c          	_process_create:
  391  0000144c  44000432	trap	#0x432
  392  00001450  4be00000	jr	r31
  393  00001454  54000000	nop
  394  00001458          	.endproc _process_create
  396  00001458          	.proc _shmget
  397  00001458          	.global _shmget
  398  00001458          	_shmget:
  399  00001458  44000440	trap	#0x440
  400  0000145c  4be00000	jr	r31
  401  00001460  54000000	nop
  402  00001464          	.endproc _shmget
  404  00001464          	.proc _shmat
  405  00001464          	.global _shmat
  406  00001464          	_shmat:
  407  00001464  44000441	trap	#0x441
  408  00001468  4be00000	jr	r31
  409  0000146c  54000000	nop
  410  00001470          	.endproc _shmat
  412  00001470          	.proc _sem_create
  413  00001470          	.global _sem_create
  414  00001470          	_sem_create:
  415  00001470  44000450	trap	#0x450
  416  00001474  4be00000	jr	r31
  417  00001478  54000000	nop
  418  0000147c          	.endproc _sem_create
  420  0000147c          	.proc _sem_wait
  421  0000147c          	.global _sem_wait
  422  0000147c          	_sem_wait:
  423  0000147c  44000451	trap	#0x451
  424  00001480  4be00000	jr	r31
  425  00001484  54000000	nop
  426  00001488          	.endproc _sem_wait
  428  00001488          	.proc _sem_signal
  429  00001488          	.global _sem_signal
  430  00001488          	_sem_signal:
  431  00001488  44000452	trap	#0x452
  432  0000148c  4be00000	jr	r31
  433  00001490  54000000	nop
  434  00001494          	.endproc _sem_signal
  436  00001494          	.proc _lock_create
  437  00001494          	.global _lock_create
  438  00001494          	_lock_create:
  439  00001494  44000453	trap	#0x453
  440  00001498  4be00000	jr	r31
  441  0000149c  54000000	nop
  442  000014a0          	.endproc _lock_create
  444  000014a0          	.proc _lock_acquire
  445  000014a0          	.global _lock_acquire
  446  000014a0          	_lock_acquire:
  447  000014a0  44000454	trap	#0x454
  448  000014a4  4be00000	jr	r31
  449  000014a8  54000000	nop
  450  000014ac          	.endproc _lock_acquire
  452  000014ac          	.proc _lock_release
  453  000014ac          	.global _lock_release
  454  000014ac          	_lock_release:
  455  000014ac  44000455	trap	#0x455
  456  000014b0  4be00000	jr	r31
  457  000014b4  54000000	nop
  458  000014b8          	.endproc _lock_release
  460  000014b8          	.proc _cond_create
  461  000014b8          	.global _cond_create
  462  000014b8          	_cond_create:
  463  000014b8  44000456	trap	#0x456
  464  000014bc  4be00000	jr	r31
  465  000014c0  54000000	nop
  466  000014c4          	.endproc _cond_create
  468  000014c4          	.proc _cond_wait
  469  000014c4          	.global _cond_wait
  470  000014c4          	_cond_wait:
  471  000014c4  44000457	trap	#0x457
  472  000014c8  4be00000	jr	r31
  473  000014cc  54000000	nop
  474  000014d0          	.endproc _cond_wait
  476  000014d0          	.proc _cond_signal
  477  000014d0          	.global _cond_signal
  478  000014d0          	_cond_signal:
  479  000014d0  44000458	trap	#0x458
  480  000014d4  4be00000	jr	r31
  481  000014d8  54000000	nop
  482  000014dc          	.endproc _cond_signal
  484  000014dc          	.proc _cond_broadcast
  485  000014dc          	.global _cond_broadcast
  486  000014dc          	_cond_broadcast:
  487  000014dc  44000459	trap	#0x459
  488  000014e0  4be00000	jr	r31
  489  000014e4  54000000	nop
  490  000014e8          	.endproc _cond_broadcast
  492  000014e8          	.proc _Exit
  493  000014e8          	.global _Exit
  494  000014e8          	_Exit:
  495  000014e8  44000500	trap	#0x500
  496  000014ec  4be00000	jr	r31
  497  000014f0  54000000	nop
  498  000014f4          	.endproc _Exit
  499                      ; Compiled by GCC
  501  000014f4          	.align 2
  502  000014f4          	.proc _isspace
  503  000014f4          	.global _isspace
  504  000014f4          	_isspace:
  505                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  506  000014f4  afbefffc	sw	-4(r29),r30; push fp
  507  000014f8  001df020	add	r30,r0,r29; fp = sp
  508  000014fc  afbffff8	sw	-8(r29),r31; push ret addr
  509  00001500  2fbd0018	subui	r29,r29,#24; alloc local storage
  510  00001504  afa20000	sw	0(r29),r2
  511  00001508  afa30004	sw	4(r29),r3
  512  0000150c  afa40008	sw	8(r29),r4
  513  00001510  83c20003	lb	r2,3(r30)
  514  00001514  20010000	addi	r1,r0,#0
  515  00001518  304300ff	andi	r3,r2,#0x00ff
  516  0000151c  60640020	seqi	r4,r3,#32
  517  00001520  1480002c	bnez	r4,L3_LF2
  518  00001524  54000000	nop; delay slot nop
  519  00001528  304300ff	andi	r3,r2,#0x00ff
  520  0000152c  60640009	seqi	r4,r3,#9
  521  00001530  1480001c	bnez	r4,L3_LF2
  522  00001534  54000000	nop; delay slot nop
  523  00001538  304300ff	andi	r3,r2,#0x00ff
  524  0000153c  6064000a	seqi	r4,r3,#10
  525  00001540  1480000c	bnez	r4,L3_LF2
  526  00001544  54000000	nop; delay slot nop
  527  00001548  08000008	j	L2_LF2
  528  0000154c  54000000	nop; delay slot nop
  529  00001550          	L3_LF2:
  530  00001550  20010001	addi	r1,r0,#1
  531  00001554          	L2_LF2:
  532  00001554  08000004	j	L1_LF2
  533  00001558  54000000	nop; delay slot nop
  534  0000155c          	L1_LF2:
  535  0000155c  8fa20000	lw	r2,0(r29)
  536  00001560  8fa30004	lw	r3,4(r29)
  537  00001564  8fa40008	lw	r4,8(r29)
  538  00001568  8fdffff8	lw	r31,-8(r30)
  539  0000156c  001ee820	add	r29,r0,r30
  540  00001570  8fdefffc	lw	r30,-4(r30)
  541  00001574  4be00000	jr	r31
  542  00001578  54000000	nop
  543  0000157c          	.endproc _isspace
  544  0000157c          	.align 2
  545  0000157c          	.proc _isxdigit
  546  0000157c          	.global _isxdigit
  547  0000157c          	_isxdigit:
  548                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  549  0000157c  afbefffc	sw	-4(r29),r30; push fp
  550  00001580  001df020	add	r30,r0,r29; fp = sp
  551  00001584  afbffff8	sw	-8(r29),r31; push ret addr
  552  00001588  2fbd0018	subui	r29,r29,#24; alloc local storage
  553  0000158c  afa20000	sw	0(r29),r2
  554  00001590  afa30004	sw	4(r29),r3
  555  00001594  afa40008	sw	8(r29),r4
  556  00001598  83c20003	lb	r2,3(r30)
  557  0000159c  20010000	addi	r1,r0,#0
  558  000015a0  304300ff	andi	r3,r2,#0x00ff
  559  000015a4  6c64002f	sgtui	r4,r3,#47
  560  000015a8  1080001c	beqz	r4,L7_LF2
  561  000015ac  54000000	nop; delay slot nop
  562  000015b0  304300ff	andi	r3,r2,#0x00ff
  563  000015b4  70640039	sleui	r4,r3,#57
  564  000015b8  1480005c	bnez	r4,L6_LF2
  565  000015bc  54000000	nop; delay slot nop
  566  000015c0  08000004	j	L7_LF2
  567  000015c4  54000000	nop; delay slot nop
  568  000015c8          	L7_LF2:
  569  000015c8  304300ff	andi	r3,r2,#0x00ff
  570  000015cc  6c640060	sgtui	r4,r3,#96
  571  000015d0  1080001c	beqz	r4,L8_LF2
  572  000015d4  54000000	nop; delay slot nop
  573  000015d8  304300ff	andi	r3,r2,#0x00ff
  574  000015dc  70640066	sleui	r4,r3,#102
  575  000015e0  14800034	bnez	r4,L6_LF2
  576  000015e4  54000000	nop; delay slot nop
  577  000015e8  08000004	j	L8_LF2
  578  000015ec  54000000	nop; delay slot nop
  579  000015f0          	L8_LF2:
  580  000015f0  304300ff	andi	r3,r2,#0x00ff
  581  000015f4  6c640040	sgtui	r4,r3,#64
  582  000015f8  10800020	beqz	r4,L5_LF2
  583  000015fc  54000000	nop; delay slot nop
  584  00001600  304300ff	andi	r3,r2,#0x00ff
  585  00001604  70640041	sleui	r4,r3,#65
  586  00001608  1480000c	bnez	r4,L6_LF2
  587  0000160c  54000000	nop; delay slot nop
  588  00001610  08000008	j	L5_LF2
  589  00001614  54000000	nop; delay slot nop
  590  00001618          	L6_LF2:
  591  00001618  20010001	addi	r1,r0,#1
  592  0000161c          	L5_LF2:
  593  0000161c  08000004	j	L4_LF2
  594  00001620  54000000	nop; delay slot nop
  595  00001624          	L4_LF2:
  596  00001624  8fa20000	lw	r2,0(r29)
  597  00001628  8fa30004	lw	r3,4(r29)
  598  0000162c  8fa40008	lw	r4,8(r29)
  599  00001630  8fdffff8	lw	r31,-8(r30)
  600  00001634  001ee820	add	r29,r0,r30
  601  00001638  8fdefffc	lw	r30,-4(r30)
  602  0000163c  4be00000	jr	r31
  603  00001640  54000000	nop
  604  00001644          	.endproc _isxdigit
  605  00001644          	.align 2
  606  00001644          	.proc _dstrcpy
  607  00001644          	.global _dstrcpy
  608  00001644          	_dstrcpy:
  609                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  610  00001644  afbefffc	sw	-4(r29),r30; push fp
  611  00001648  001df020	add	r30,r0,r29; fp = sp
  612  0000164c  afbffff8	sw	-8(r29),r31; push ret addr
  613  00001650  2fbd0018	subui	r29,r29,#24; alloc local storage
  614  00001654  afa20000	sw	0(r29),r2
  615  00001658  afa30004	sw	4(r29),r3
  616  0000165c  8fc10000	lw	r1,(r30)
  617  00001660  afc1fff4	sw	-12(r30),r1
  618  00001664          	L10_LF2:
  619  00001664  8fc10000	lw	r1,(r30)
  620  00001668  20220001	addi	r2,r1,#1
  621  0000166c  afc20000	sw	(r30),r2
  622  00001670  8fc20004	lw	r2,4(r30)
  623  00001674  20430001	addi	r3,r2,#1
  624  00001678  afc30004	sw	4(r30),r3
  625  0000167c  80420000	lb	r2,(r2)
  626  00001680  a0220000	sb	(r1),r2
  627  00001684  a3c2fff3	sb	-13(r30),r2
  628  00001688          	L12_LF2:
  629  00001688  93c1fff3	lbu	r1,-13(r30)
  630  0000168c  64220000	snei	r2,r1,#0
  631  00001690  1440000c	bnez	r2,L13_LF2
  632  00001694  54000000	nop; delay slot nop
  633  00001698  0800000c	j	L11_LF2
  634  0000169c  54000000	nop; delay slot nop
  635  000016a0          	L13_LF2:
  636  000016a0  0bffffc0	j	L10_LF2
  637  000016a4  54000000	nop; delay slot nop
  638  000016a8          	L11_LF2:
  639  000016a8  8fc1fff4	lw	r1,-12(r30)
  640  000016ac  08000004	j	L9_LF2
  641  000016b0  54000000	nop; delay slot nop
  642  000016b4          	L9_LF2:
  643  000016b4  8fa20000	lw	r2,0(r29)
  644  000016b8  8fa30004	lw	r3,4(r29)
  645  000016bc  8fdffff8	lw	r31,-8(r30)
  646  000016c0  001ee820	add	r29,r0,r30
  647  000016c4  8fdefffc	lw	r30,-4(r30)
  648  000016c8  4be00000	jr	r31
  649  000016cc  54000000	nop
  650  000016d0          	.endproc _dstrcpy
  651  000016d0          	.align 2
  652  000016d0          	.proc _dstrncpy
  653  000016d0          	.global _dstrncpy
  654  000016d0          	_dstrncpy:
  655                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  656  000016d0  afbefffc	sw	-4(r29),r30; push fp
  657  000016d4  001df020	add	r30,r0,r29; fp = sp
  658  000016d8  afbffff8	sw	-8(r29),r31; push ret addr
  659  000016dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  660  000016e0  afa20000	sw	0(r29),r2
  661  000016e4  afa30004	sw	4(r29),r3
  662  000016e8  8fc10000	lw	r1,(r30)
  663  000016ec  afc1fff4	sw	-12(r30),r1
  664  000016f0          	L15_LF2:
  665  000016f0  8fc10008	lw	r1,8(r30)
  666  000016f4  2022ffff	addi	r2,r1,#-1
  667  000016f8  afc20008	sw	8(r30),r2
  668  000016fc  70210000	slei	r1,r1,#0
  669  00001700  1020000c	beqz	r1,L18_LF2
  670  00001704  54000000	nop; delay slot nop
  671  00001708  08000048	j	L16_LF2
  672  0000170c  54000000	nop; delay slot nop
  673  00001710          	L18_LF2:
  674  00001710  8fc10000	lw	r1,(r30)
  675  00001714  20220001	addi	r2,r1,#1
  676  00001718  afc20000	sw	(r30),r2
  677  0000171c  8fc20004	lw	r2,4(r30)
  678  00001720  20430001	addi	r3,r2,#1
  679  00001724  afc30004	sw	4(r30),r3
  680  00001728  80420000	lb	r2,(r2)
  681  0000172c  a0220000	sb	(r1),r2
  682  00001730  a3c2fff3	sb	-13(r30),r2
  683  00001734          	L17_LF2:
  684  00001734  93c1fff3	lbu	r1,-13(r30)
  685  00001738  64220000	snei	r2,r1,#0
  686  0000173c  1440000c	bnez	r2,L19_LF2
  687  00001740  54000000	nop; delay slot nop
  688  00001744  0800000c	j	L16_LF2
  689  00001748  54000000	nop; delay slot nop
  690  0000174c          	L19_LF2:
  691  0000174c  0bffffa0	j	L15_LF2
  692  00001750  54000000	nop; delay slot nop
  693  00001754          	L16_LF2:
  694  00001754  8fc1fff4	lw	r1,-12(r30)
  695  00001758  08000004	j	L14_LF2
  696  0000175c  54000000	nop; delay slot nop
  697  00001760          	L14_LF2:
  698  00001760  8fa20000	lw	r2,0(r29)
  699  00001764  8fa30004	lw	r3,4(r29)
  700  00001768  8fdffff8	lw	r31,-8(r30)
  701  0000176c  001ee820	add	r29,r0,r30
  702  00001770  8fdefffc	lw	r30,-4(r30)
  703  00001774  4be00000	jr	r31
  704  00001778  54000000	nop
  705  0000177c          	.endproc _dstrncpy
  706  0000177c          	.align 2
  707  0000177c          	.proc _dstrcat
  708  0000177c          	.global _dstrcat
  709  0000177c          	_dstrcat:
  710                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  711  0000177c  afbefffc	sw	-4(r29),r30; push fp
  712  00001780  001df020	add	r30,r0,r29; fp = sp
  713  00001784  afbffff8	sw	-8(r29),r31; push ret addr
  714  00001788  2fbd0018	subui	r29,r29,#24; alloc local storage
  715  0000178c  afa20000	sw	0(r29),r2
  716  00001790  8fc10000	lw	r1,(r30)
  717  00001794  afc1fff4	sw	-12(r30),r1
  718  00001798          	L21_LF2:
  719  00001798  8fc10000	lw	r1,(r30)
  720  0000179c  90220000	lbu	r2,(r1)
  721  000017a0  64410000	snei	r1,r2,#0
  722  000017a4  1420000c	bnez	r1,L23_LF2
  723  000017a8  54000000	nop; delay slot nop
  724  000017ac  0800001c	j	L22_LF2
  725  000017b0  54000000	nop; delay slot nop
  726  000017b4          	L23_LF2:
  727  000017b4  8fc20000	lw	r2,(r30)
  728  000017b8  20410001	addi	r1,r2,#1
  729  000017bc  00011020	add	r2,r0,r1
  730  000017c0  afc20000	sw	(r30),r2
  731  000017c4  0bffffd0	j	L21_LF2
  732  000017c8  54000000	nop; delay slot nop
  733  000017cc          	L22_LF2:
  734  000017cc  23bdfff8	addi	r29,r29,#-8
  735  000017d0  001d0820	add	r1,r0,r29
  736  000017d4  8fc20000	lw	r2,(r30)
  737  000017d8  ac220000	sw	(r1),r2
  738  000017dc  8fc20004	lw	r2,4(r30)
  739  000017e0  ac220004	sw	4(r1),r2
  740  000017e4  0ffffe5c	jal	_dstrcpy
  741  000017e8  54000000	nop; delay slot nop
  742  000017ec  23bd0008	addi	r29,r29,#8
  743  000017f0  8fc1fff4	lw	r1,-12(r30)
  744  000017f4  08000004	j	L20_LF2
  745  000017f8  54000000	nop; delay slot nop
  746  000017fc          	L20_LF2:
  747  000017fc  8fa20000	lw	r2,0(r29)
  748  00001800  8fdffff8	lw	r31,-8(r30)
  749  00001804  001ee820	add	r29,r0,r30
  750  00001808  8fdefffc	lw	r30,-4(r30)
  751  0000180c  4be00000	jr	r31
  752  00001810  54000000	nop
  753  00001814          	.endproc _dstrcat
  754  00001814          	.align 2
  755  00001814          	.proc _dstrncmp
  756  00001814          	.global _dstrncmp
  757  00001814          	_dstrncmp:
  758                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  759  00001814  afbefffc	sw	-4(r29),r30; push fp
  760  00001818  001df020	add	r30,r0,r29; fp = sp
  761  0000181c  afbffff8	sw	-8(r29),r31; push ret addr
  762  00001820  2fbd0018	subui	r29,r29,#24; alloc local storage
  763  00001824  afa20000	sw	0(r29),r2
  764  00001828  afa30004	sw	4(r29),r3
  765  0000182c  54000000	nop
  766  00001830  20010000	addi	r1,r0,#0
  767  00001834  afc1fff4	sw	-12(r30),r1
  768  00001838          	L25_LF2:
  769  00001838  8fc1fff4	lw	r1,-12(r30)
  770  0000183c  8fc20008	lw	r2,8(r30)
  771  00001840  0022082a	slt	r1,r1,r2
  772  00001844  1420000c	bnez	r1,L28_LF2
  773  00001848  54000000	nop; delay slot nop
  774  0000184c  08000088	j	L26_LF2
  775  00001850  54000000	nop; delay slot nop
  776  00001854          	L28_LF2:
  777  00001854  8fc10004	lw	r1,4(r30)
  778  00001858  90220000	lbu	r2,(r1)
  779  0000185c  64410000	snei	r1,r2,#0
  780  00001860  14200018	bnez	r1,L29_LF2
  781  00001864  54000000	nop; delay slot nop
  782  00001868  20010000	addi	r1,r0,#0
  783  0000186c  080000d8	j	L24_LF2
  784  00001870  54000000	nop; delay slot nop
  785  00001874  08000028	j	L30_LF2
  786  00001878  54000000	nop; delay slot nop
  787  0000187c          	L29_LF2:
  788  0000187c  8fc10000	lw	r1,(r30)
  789  00001880  8fc20004	lw	r2,4(r30)
  790  00001884  90210000	lbu	r1,(r1)
  791  00001888  90420000	lbu	r2,(r2)
  792  0000188c  00220829	sne	r1,r1,r2
  793  00001890  1020000c	beqz	r1,L30_LF2
  794  00001894  54000000	nop; delay slot nop
  795  00001898  0800003c	j	L26_LF2
  796  0000189c  54000000	nop; delay slot nop
  797  000018a0          	L31_LF2:
  798  000018a0          	L30_LF2:
  799  000018a0  8fc20000	lw	r2,(r30)
  800  000018a4  20410001	addi	r1,r2,#1
  801  000018a8  00011020	add	r2,r0,r1
  802  000018ac  afc20000	sw	(r30),r2
  803  000018b0  8fc20004	lw	r2,4(r30)
  804  000018b4  20410001	addi	r1,r2,#1
  805  000018b8  00011020	add	r2,r0,r1
  806  000018bc  afc20004	sw	4(r30),r2
  807  000018c0          	L27_LF2:
  808  000018c0  8fc2fff4	lw	r2,-12(r30)
  809  000018c4  20410001	addi	r1,r2,#1
  810  000018c8  00011020	add	r2,r0,r1
  811  000018cc  afc2fff4	sw	-12(r30),r2
  812  000018d0  0bffff64	j	L25_LF2
  813  000018d4  54000000	nop; delay slot nop
  814  000018d8          	L26_LF2:
  815  000018d8  8fc1fff4	lw	r1,-12(r30)
  816  000018dc  8fc20008	lw	r2,8(r30)
  817  000018e0  00220828	seq	r1,r1,r2
  818  000018e4  10200018	beqz	r1,L32_LF2
  819  000018e8  54000000	nop; delay slot nop
  820  000018ec  20010000	addi	r1,r0,#0
  821  000018f0  08000054	j	L24_LF2
  822  000018f4  54000000	nop; delay slot nop
  823  000018f8  0800004c	j	L33_LF2
  824  000018fc  54000000	nop; delay slot nop
  825  00001900          	L32_LF2:
  826  00001900  8fc20000	lw	r2,(r30)
  827  00001904  90410000	lbu	r1,(r2)
  828  00001908  8fc20004	lw	r2,4(r30)
  829  0000190c  90430000	lbu	r3,(r2)
  830  00001910  00230822	sub	r1,r1,r3
  831  00001914  74220000	sgei	r2,r1,#0
  832  00001918  10400020	beqz	r2,L34_LF2
  833  0000191c  54000000	nop; delay slot nop
  834  00001920  8fc10000	lw	r1,(r30)
  835  00001924  8fc20004	lw	r2,4(r30)
  836  00001928  90210000	lbu	r1,(r1)
  837  0000192c  90420000	lbu	r2,(r2)
  838  00001930  00220829	sne	r1,r1,r2
  839  00001934  08000008	j	L35_LF2
  840  00001938  54000000	nop; delay slot nop
  841  0000193c          	L34_LF2:
  842  0000193c  2001ffff	addi	r1,r0,#-1
  843  00001940          	L35_LF2:
  844  00001940  08000004	j	L24_LF2
  845  00001944  54000000	nop; delay slot nop
  846  00001948          	L33_LF2:
  847  00001948          	L24_LF2:
  848  00001948  8fa20000	lw	r2,0(r29)
  849  0000194c  8fa30004	lw	r3,4(r29)
  850  00001950  8fdffff8	lw	r31,-8(r30)
  851  00001954  001ee820	add	r29,r0,r30
  852  00001958  8fdefffc	lw	r30,-4(r30)
  853  0000195c  4be00000	jr	r31
  854  00001960  54000000	nop
  855  00001964          	.endproc _dstrncmp
  856  00001964          	.align 2
  857  00001964          	.proc _dstrlen
  858  00001964          	.global _dstrlen
  859  00001964          	_dstrlen:
  860                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  861  00001964  afbefffc	sw	-4(r29),r30; push fp
  862  00001968  001df020	add	r30,r0,r29; fp = sp
  863  0000196c  afbffff8	sw	-8(r29),r31; push ret addr
  864  00001970  2fbd0018	subui	r29,r29,#24; alloc local storage
  865  00001974  afa20000	sw	0(r29),r2
  866  00001978  20010000	addi	r1,r0,#0
  867  0000197c  afc1fff4	sw	-12(r30),r1
  868  00001980          	L37_LF2:
  869  00001980  8fc10000	lw	r1,(r30)
  870  00001984  20220001	addi	r2,r1,#1
  871  00001988  afc20000	sw	(r30),r2
  872  0000198c  90210000	lbu	r1,(r1)
  873  00001990  64220000	snei	r2,r1,#0
  874  00001994  1440000c	bnez	r2,L39_LF2
  875  00001998  54000000	nop; delay slot nop
  876  0000199c  0800001c	j	L38_LF2
  877  000019a0  54000000	nop; delay slot nop
  878  000019a4          	L39_LF2:
  879  000019a4  8fc2fff4	lw	r2,-12(r30)
  880  000019a8  20410001	addi	r1,r2,#1
  881  000019ac  00011020	add	r2,r0,r1
  882  000019b0  afc2fff4	sw	-12(r30),r2
  883  000019b4  0bffffc8	j	L37_LF2
  884  000019b8  54000000	nop; delay slot nop
  885  000019bc          	L38_LF2:
  886  000019bc  8fc1fff4	lw	r1,-12(r30)
  887  000019c0  08000004	j	L36_LF2
  888  000019c4  54000000	nop; delay slot nop
  889  000019c8          	L36_LF2:
  890  000019c8  8fa20000	lw	r2,0(r29)
  891  000019cc  8fdffff8	lw	r31,-8(r30)
  892  000019d0  001ee820	add	r29,r0,r30
  893  000019d4  8fdefffc	lw	r30,-4(r30)
  894  000019d8  4be00000	jr	r31
  895  000019dc  54000000	nop
  896  000019e0          	.endproc _dstrlen
  897  000019e0          	.align 2
  898  000019e0          	.proc _dstrstr
  899  000019e0          	.global _dstrstr
  900  000019e0          	_dstrstr:
  901                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  902  000019e0  afbefffc	sw	-4(r29),r30; push fp
  903  000019e4  001df020	add	r30,r0,r29; fp = sp
  904  000019e8  afbffff8	sw	-8(r29),r31; push ret addr
  905  000019ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  906  000019f0  afa20000	sw	0(r29),r2
  907  000019f4  23bdfff8	addi	r29,r29,#-8
  908  000019f8  001d0820	add	r1,r0,r29
  909  000019fc  8fc20004	lw	r2,4(r30)
  910  00001a00  ac220000	sw	(r1),r2
  911  00001a04  0fffff5c	jal	_dstrlen
  912  00001a08  54000000	nop; delay slot nop
  913  00001a0c  23bd0008	addi	r29,r29,#8
  914  00001a10  afc1fff4	sw	-12(r30),r1
  915  00001a14          	L41_LF2:
  916  00001a14  8fc10000	lw	r1,(r30)
  917  00001a18  90220000	lbu	r2,(r1)
  918  00001a1c  64410000	snei	r1,r2,#0
  919  00001a20  1420000c	bnez	r1,L43_LF2
  920  00001a24  54000000	nop; delay slot nop
  921  00001a28  08000060	j	L42_LF2
  922  00001a2c  54000000	nop; delay slot nop
  923  00001a30          	L43_LF2:
  924  00001a30  23bdfff0	addi	r29,r29,#-16
  925  00001a34  001d0820	add	r1,r0,r29
  926  00001a38  8fc20000	lw	r2,(r30)
  927  00001a3c  ac220000	sw	(r1),r2
  928  00001a40  8fc20004	lw	r2,4(r30)
  929  00001a44  ac220004	sw	4(r1),r2
  930  00001a48  8fc2fff4	lw	r2,-12(r30)
  931  00001a4c  ac220008	sw	8(r1),r2
  932  00001a50  0ffffdc0	jal	_dstrncmp
  933  00001a54  54000000	nop; delay slot nop
  934  00001a58  23bd0010	addi	r29,r29,#16
  935  00001a5c  64220000	snei	r2,r1,#0
  936  00001a60  14400010	bnez	r2,L44_LF2
  937  00001a64  54000000	nop; delay slot nop
  938  00001a68  8fc10000	lw	r1,(r30)
  939  00001a6c  08000028	j	L40_LF2
  940  00001a70  54000000	nop; delay slot nop
  941  00001a74          	L44_LF2:
  942  00001a74  8fc20000	lw	r2,(r30)
  943  00001a78  20410001	addi	r1,r2,#1
  944  00001a7c  00011020	add	r2,r0,r1
  945  00001a80  afc20000	sw	(r30),r2
  946  00001a84  0bffff8c	j	L41_LF2
  947  00001a88  54000000	nop; delay slot nop
  948  00001a8c          	L42_LF2:
  949  00001a8c  20010000	addi	r1,r0,#0
  950  00001a90  08000004	j	L40_LF2
  951  00001a94  54000000	nop; delay slot nop
  952  00001a98          	L40_LF2:
  953  00001a98  8fa20000	lw	r2,0(r29)
  954  00001a9c  8fdffff8	lw	r31,-8(r30)
  955  00001aa0  001ee820	add	r29,r0,r30
  956  00001aa4  8fdefffc	lw	r30,-4(r30)
  957  00001aa8  4be00000	jr	r31
  958  00001aac  54000000	nop
  959  00001ab0          	.endproc _dstrstr
  960  00001ab0          	.align 2
  961  00001ab0          	.proc _dmindex
  962  00001ab0          	.global _dmindex
  963  00001ab0          	_dmindex:
  964                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  965  00001ab0  afbefffc	sw	-4(r29),r30; push fp
  966  00001ab4  001df020	add	r30,r0,r29; fp = sp
  967  00001ab8  afbffff8	sw	-8(r29),r31; push ret addr
  968  00001abc  2fbd0018	subui	r29,r29,#24; alloc local storage
  969  00001ac0  afa20000	sw	0(r29),r2
  970  00001ac4  54000000	nop
  971  00001ac8          	L46_LF2:
  972  00001ac8  8fc10000	lw	r1,(r30)
  973  00001acc  90220000	lbu	r2,(r1)
  974  00001ad0  64410000	snei	r1,r2,#0
  975  00001ad4  1420000c	bnez	r1,L48_LF2
  976  00001ad8  54000000	nop; delay slot nop
  977  00001adc  08000070	j	L47_LF2
  978  00001ae0  54000000	nop; delay slot nop
  979  00001ae4          	L48_LF2:
  980  00001ae4  8fc10004	lw	r1,4(r30)
  981  00001ae8  afc1fff4	sw	-12(r30),r1
  982  00001aec          	L49_LF2:
  983  00001aec  8fc1fff4	lw	r1,-12(r30)
  984  00001af0  90220000	lbu	r2,(r1)
  985  00001af4  64410000	snei	r1,r2,#0
  986  00001af8  1420000c	bnez	r1,L52_LF2
  987  00001afc  54000000	nop; delay slot nop
  988  00001b00  08000044	j	L50_LF2
  989  00001b04  54000000	nop; delay slot nop
  990  00001b08          	L52_LF2:
  991  00001b08  8fc10000	lw	r1,(r30)
  992  00001b0c  8fc2fff4	lw	r2,-12(r30)
  993  00001b10  90210000	lbu	r1,(r1)
  994  00001b14  90420000	lbu	r2,(r2)
  995  00001b18  00220828	seq	r1,r1,r2
  996  00001b1c  10200010	beqz	r1,L51_LF2
  997  00001b20  54000000	nop; delay slot nop
  998  00001b24  8fc10000	lw	r1,(r30)
  999  00001b28  08000030	j	L45_LF2
 1000  00001b2c  54000000	nop; delay slot nop
 1001  00001b30          	L53_LF2:
 1002  00001b30          	L51_LF2:
 1003  00001b30  8fc2fff4	lw	r2,-12(r30)
 1004  00001b34  20410001	addi	r1,r2,#1
 1005  00001b38  00011020	add	r2,r0,r1
 1006  00001b3c  afc2fff4	sw	-12(r30),r2
 1007  00001b40  0bffffa8	j	L49_LF2
 1008  00001b44  54000000	nop; delay slot nop
 1009  00001b48          	L50_LF2:
 1010  00001b48  0bffff7c	j	L46_LF2
 1011  00001b4c  54000000	nop; delay slot nop
 1012  00001b50          	L47_LF2:
 1013  00001b50  20010000	addi	r1,r0,#0
 1014  00001b54  08000004	j	L45_LF2
 1015  00001b58  54000000	nop; delay slot nop
 1016  00001b5c          	L45_LF2:
 1017  00001b5c  8fa20000	lw	r2,0(r29)
 1018  00001b60  8fdffff8	lw	r31,-8(r30)
 1019  00001b64  001ee820	add	r29,r0,r30
 1020  00001b68  8fdefffc	lw	r30,-4(r30)
 1021  00001b6c  4be00000	jr	r31
 1022  00001b70  54000000	nop
 1023  00001b74          	.endproc _dmindex
 1024  00001b74          	.align 2
 1025  00001b74          	.proc _dindex
 1026  00001b74          	.global _dindex
 1027  00001b74          	_dindex:
 1028                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1029  00001b74  afbefffc	sw	-4(r29),r30; push fp
 1030  00001b78  001df020	add	r30,r0,r29; fp = sp
 1031  00001b7c  afbffff8	sw	-8(r29),r31; push ret addr
 1032  00001b80  2fbd0010	subui	r29,r29,#16; alloc local storage
 1033  00001b84  afa20000	sw	0(r29),r2
 1034  00001b88  54000000	nop
 1035  00001b8c          	L55_LF2:
 1036  00001b8c  8fc10000	lw	r1,(r30)
 1037  00001b90  90220000	lbu	r2,(r1)
 1038  00001b94  64410000	snei	r1,r2,#0
 1039  00001b98  1420000c	bnez	r1,L57_LF2
 1040  00001b9c  54000000	nop; delay slot nop
 1041  00001ba0  08000040	j	L56_LF2
 1042  00001ba4  54000000	nop; delay slot nop
 1043  00001ba8          	L57_LF2:
 1044  00001ba8  8fc10000	lw	r1,(r30)
 1045  00001bac  90220000	lbu	r2,(r1)
 1046  00001bb0  8fc10004	lw	r1,4(r30)
 1047  00001bb4  00411028	seq	r2,r2,r1
 1048  00001bb8  10400010	beqz	r2,L58_LF2
 1049  00001bbc  54000000	nop; delay slot nop
 1050  00001bc0  8fc10000	lw	r1,(r30)
 1051  00001bc4  08000028	j	L54_LF2
 1052  00001bc8  54000000	nop; delay slot nop
 1053  00001bcc          	L58_LF2:
 1054  00001bcc  8fc20000	lw	r2,(r30)
 1055  00001bd0  20410001	addi	r1,r2,#1
 1056  00001bd4  00011020	add	r2,r0,r1
 1057  00001bd8  afc20000	sw	(r30),r2
 1058  00001bdc  0bffffac	j	L55_LF2
 1059  00001be0  54000000	nop; delay slot nop
 1060  00001be4          	L56_LF2:
 1061  00001be4  20010000	addi	r1,r0,#0
 1062  00001be8  08000004	j	L54_LF2
 1063  00001bec  54000000	nop; delay slot nop
 1064  00001bf0          	L54_LF2:
 1065  00001bf0  8fa20000	lw	r2,0(r29)
 1066  00001bf4  8fdffff8	lw	r31,-8(r30)
 1067  00001bf8  001ee820	add	r29,r0,r30
 1068  00001bfc  8fdefffc	lw	r30,-4(r30)
 1069  00001c00  4be00000	jr	r31
 1070  00001c04  54000000	nop
 1071  00001c08          	.endproc _dindex
 1072  00001c08          	.align 2
 1073  00001c08          	.proc _ditoa
 1074  00001c08          	.global _ditoa
 1075  00001c08          	_ditoa:
 1076                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1077  00001c08  afbefffc	sw	-4(r29),r30; push fp
 1078  00001c0c  001df020	add	r30,r0,r29; fp = sp
 1079  00001c10  afbffff8	sw	-8(r29),r31; push ret addr
 1080  00001c14  2fbd0018	subui	r29,r29,#24; alloc local storage
 1081  00001c18  afa20000	sw	0(r29),r2
 1082  00001c1c  afa30004	sw	4(r29),r3
 1083  00001c20  8fc10000	lw	r1,(r30)
 1084  00001c24  68220000	slti	r2,r1,#0
 1085  00001c28  1040002c	beqz	r2,L60_LF2
 1086  00001c2c  54000000	nop; delay slot nop
 1087  00001c30  8fc10004	lw	r1,4(r30)
 1088  00001c34  20220001	addi	r2,r1,#1
 1089  00001c38  afc20004	sw	4(r30),r2
 1090  00001c3c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1091  00001c40  a0220000	sb	(r1),r2
 1092  00001c44  8fc10000	lw	r1,(r30)
 1093  00001c48  00011022	sub	r2,r0,r1
 1094  00001c4c  afc20000	sw	(r30),r2
 1095  00001c50  08000118	j	L61_LF2
 1096  00001c54  54000000	nop; delay slot nop
 1097  00001c58          	L60_LF2:
 1098  00001c58  8fc10000	lw	r1,(r30)
 1099  00001c5c  64220000	snei	r2,r1,#0
 1100  00001c60  14400020	bnez	r2,L62_LF2
 1101  00001c64  54000000	nop; delay slot nop
 1102  00001c68  8fc10004	lw	r1,4(r30)
 1103  00001c6c  20220001	addi	r2,r1,#1
 1104  00001c70  afc20004	sw	4(r30),r2
 1105  00001c74  20020030	addi	r2,r0,(#0x30)&0xff
 1106  00001c78  a0220000	sb	(r1),r2
 1107  00001c7c  080000ec	j	L61_LF2
 1108  00001c80  54000000	nop; delay slot nop
 1109  00001c84          	L62_LF2:
 1110  00001c84  20010001	addi	r1,r0,#1
 1111  00001c88  afc1fff4	sw	-12(r30),r1
 1112  00001c8c          	L64_LF2:
 1113  00001c8c  8fc1fff4	lw	r1,-12(r30)
 1114  00001c90  8fc20000	lw	r2,(r30)
 1115  00001c94  0022082c	sle	r1,r1,r2
 1116  00001c98  1420000c	bnez	r1,L66_LF2
 1117  00001c9c  54000000	nop; delay slot nop
 1118  00001ca0  08000024	j	L65_LF2
 1119  00001ca4  54000000	nop; delay slot nop
 1120  00001ca8          	L67_LF2:
 1121  00001ca8          	L66_LF2:
 1122  00001ca8  8fc1fff4	lw	r1,-12(r30)
 1123  00001cac  00011820	add	r3,r0,r1
 1124  00001cb0  50620002	slli	r2,r3,#0x2
 1125  00001cb4  00411020	add	r2,r2,r1
 1126  00001cb8  50410001	slli	r1,r2,#0x1
 1127  00001cbc  afc1fff4	sw	-12(r30),r1
 1128  00001cc0  0bffffc8	j	L64_LF2
 1129  00001cc4  54000000	nop; delay slot nop
 1130  00001cc8          	L65_LF2:
 1131  00001cc8  54000000	nop
 1132  00001ccc          	L68_LF2:
 1133  00001ccc  8fc1fff4	lw	r1,-12(r30)
 1134  00001cd0  2002000a	addi	r2,r0,#10
 1135  00001cd4  00200035	movi2fp	f0,r1
 1136  00001cd8  00400835	movi2fp	f1,r2
 1137  00001cdc  0401000f	div	f0,f0,f1
 1138  00001ce0  00000834	movfp2i	r1,f0
 1139  00001ce4  afc1fff4	sw	-12(r30),r1
 1140  00001ce8  8fc10004	lw	r1,4(r30)
 1141  00001cec  20220001	addi	r2,r1,#1
 1142  00001cf0  afc20004	sw	4(r30),r2
 1143  00001cf4  8fc20000	lw	r2,(r30)
 1144  00001cf8  8fc3fff4	lw	r3,-12(r30)
 1145  00001cfc  00400035	movi2fp	f0,r2
 1146  00001d00  00600835	movi2fp	f1,r3
 1147  00001d04  0401000f	div	f0,f0,f1
 1148  00001d08  00001034	movfp2i	r2,f0
 1149  00001d0c  00021820	add	r3,r0,r2
 1150  00001d10  20620030	addi	r2,r3,#48
 1151  00001d14  a0220000	sb	(r1),r2
 1152  00001d18  8fc10000	lw	r1,(r30)
 1153  00001d1c  8fc3fff4	lw	r3,-12(r30)
 1154  00001d20  00200035	movi2fp	f0,r1
 1155  00001d24  00600835	movi2fp	f1,r3
 1156  00001d28  0401000f	div	f0,f0,f1
 1157  00001d2c  00001034	movfp2i	r2,f0
 1158  00001d30  8fc3fff4	lw	r3,-12(r30)
 1159  00001d34  00400035	movi2fp	f0,r2
 1160  00001d38  00600835	movi2fp	f1,r3
 1161  00001d3c  0401000e	mult	f0,f0,f1
 1162  00001d40  00001034	movfp2i	r2,f0
 1163  00001d44  00220822	sub	r1,r1,r2
 1164  00001d48  afc10000	sw	(r30),r1
 1165  00001d4c          	L70_LF2:
 1166  00001d4c  8fc1fff4	lw	r1,-12(r30)
 1167  00001d50  6c220001	sgti	r2,r1,#1
 1168  00001d54  1440000c	bnez	r2,L71_LF2
 1169  00001d58  54000000	nop; delay slot nop
 1170  00001d5c  0800000c	j	L61_LF2
 1171  00001d60  54000000	nop; delay slot nop
 1172  00001d64          	L71_LF2:
 1173  00001d64  0bffff64	j	L68_LF2
 1174  00001d68  54000000	nop; delay slot nop
 1175  00001d6c          	L69_LF2:
 1176  00001d6c          	L63_LF2:
 1177  00001d6c          	L61_LF2:
 1178  00001d6c  8fc10004	lw	r1,4(r30)
 1179  00001d70  20020000	addi	r2,r0,(#0x0)&0xff
 1180  00001d74  a0220000	sb	(r1),r2
 1181  00001d78          	L59_LF2:
 1182  00001d78  8fa20000	lw	r2,0(r29)
 1183  00001d7c  8fa30004	lw	r3,4(r29)
 1184  00001d80  8fdffff8	lw	r31,-8(r30)
 1185  00001d84  001ee820	add	r29,r0,r30
 1186  00001d88  8fdefffc	lw	r30,-4(r30)
 1187  00001d8c  4be00000	jr	r31
 1188  00001d90  54000000	nop
 1189  00001d94          	.endproc _ditoa
 1190  00001d94          	.align 2
 1191  00001d94          	.proc _dstrtol
 1192  00001d94          	.global _dstrtol
 1193  00001d94          	_dstrtol:
 1194                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1195  00001d94  afbefffc	sw	-4(r29),r30; push fp
 1196  00001d98  001df020	add	r30,r0,r29; fp = sp
 1197  00001d9c  afbffff8	sw	-8(r29),r31; push ret addr
 1198  00001da0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1199  00001da4  afa20000	sw	0(r29),r2
 1200  00001da8  20010000	addi	r1,r0,#0
 1201  00001dac  afc1fff4	sw	-12(r30),r1
 1202  00001db0          	L73_LF2:
 1203  00001db0  8fc10000	lw	r1,(r30)
 1204  00001db4  90220000	lbu	r2,(r1)
 1205  00001db8  60410020	seqi	r1,r2,#32
 1206  00001dbc  14200034	bnez	r1,L75_LF2
 1207  00001dc0  54000000	nop; delay slot nop
 1208  00001dc4  8fc10000	lw	r1,(r30)
 1209  00001dc8  90220000	lbu	r2,(r1)
 1210  00001dcc  60410009	seqi	r1,r2,#9
 1211  00001dd0  14200020	bnez	r1,L75_LF2
 1212  00001dd4  54000000	nop; delay slot nop
 1213  00001dd8  8fc10000	lw	r1,(r30)
 1214  00001ddc  90220000	lbu	r2,(r1)
 1215  00001de0  6041000a	seqi	r1,r2,#10
 1216  00001de4  1420000c	bnez	r1,L75_LF2
 1217  00001de8  54000000	nop; delay slot nop
 1218  00001dec  0800001c	j	L74_LF2
 1219  00001df0  54000000	nop; delay slot nop
 1220  00001df4          	L75_LF2:
 1221  00001df4  8fc20000	lw	r2,(r30)
 1222  00001df8  20410001	addi	r1,r2,#1
 1223  00001dfc  00011020	add	r2,r0,r1
 1224  00001e00  afc20000	sw	(r30),r2
 1225  00001e04  0bffffa8	j	L73_LF2
 1226  00001e08  54000000	nop; delay slot nop
 1227  00001e0c          	L74_LF2:
 1228  00001e0c  8fc10004	lw	r1,4(r30)
 1229  00001e10  64220000	snei	r2,r1,#0
 1230  00001e14  10400010	beqz	r2,L76_LF2
 1231  00001e18  54000000	nop; delay slot nop
 1232  00001e1c  8fc10004	lw	r1,4(r30)
 1233  00001e20  8fc20000	lw	r2,(r30)
 1234  00001e24  ac220000	sw	(r1),r2
 1235  00001e28          	L76_LF2:
 1236  00001e28  8fc10000	lw	r1,(r30)
 1237  00001e2c  90220000	lbu	r2,(r1)
 1238  00001e30  64410000	snei	r1,r2,#0
 1239  00001e34  14200010	bnez	r1,L77_LF2
 1240  00001e38  54000000	nop; delay slot nop
 1241  00001e3c  8fc1fff4	lw	r1,-12(r30)
 1242  00001e40  08000294	j	L72_LF2
 1243  00001e44  54000000	nop; delay slot nop
 1244  00001e48          	L77_LF2:
 1245  00001e48  8fc10000	lw	r1,(r30)
 1246  00001e4c  90220000	lbu	r2,(r1)
 1247  00001e50  6041002d	seqi	r1,r2,#45
 1248  00001e54  10200024	beqz	r1,L78_LF2
 1249  00001e58  54000000	nop; delay slot nop
 1250  00001e5c  2001ffff	addi	r1,r0,#-1
 1251  00001e60  afc1ffec	sw	-20(r30),r1
 1252  00001e64  8fc20000	lw	r2,(r30)
 1253  00001e68  20410001	addi	r1,r2,#1
 1254  00001e6c  00011020	add	r2,r0,r1
 1255  00001e70  afc20000	sw	(r30),r2
 1256  00001e74  0800000c	j	L79_LF2
 1257  00001e78  54000000	nop; delay slot nop
 1258  00001e7c          	L78_LF2:
 1259  00001e7c  20010001	addi	r1,r0,#1
 1260  00001e80  afc1ffec	sw	-20(r30),r1
 1261  00001e84          	L79_LF2:
 1262  00001e84  8fc10008	lw	r1,8(r30)
 1263  00001e88  64220000	snei	r2,r1,#0
 1264  00001e8c  14400090	bnez	r2,L80_LF2
 1265  00001e90  54000000	nop; delay slot nop
 1266  00001e94  8fc10000	lw	r1,(r30)
 1267  00001e98  90220000	lbu	r2,(r1)
 1268  00001e9c  60410030	seqi	r1,r2,#48
 1269  00001ea0  10200074	beqz	r1,L81_LF2
 1270  00001ea4  54000000	nop; delay slot nop
 1271  00001ea8  8fc20000	lw	r2,(r30)
 1272  00001eac  20410001	addi	r1,r2,#1
 1273  00001eb0  00011020	add	r2,r0,r1
 1274  00001eb4  afc20000	sw	(r30),r2
 1275  00001eb8  8fc10000	lw	r1,(r30)
 1276  00001ebc  90220000	lbu	r2,(r1)
 1277  00001ec0  60410078	seqi	r1,r2,#120
 1278  00001ec4  14200020	bnez	r1,L83_LF2
 1279  00001ec8  54000000	nop; delay slot nop
 1280  00001ecc  8fc10000	lw	r1,(r30)
 1281  00001ed0  90220000	lbu	r2,(r1)
 1282  00001ed4  60410058	seqi	r1,r2,#88
 1283  00001ed8  1420000c	bnez	r1,L83_LF2
 1284  00001edc  54000000	nop; delay slot nop
 1285  00001ee0  08000024	j	L82_LF2
 1286  00001ee4  54000000	nop; delay slot nop
 1287  00001ee8          	L83_LF2:
 1288  00001ee8  20010010	addi	r1,r0,#16
 1289  00001eec  afc10008	sw	8(r30),r1
 1290  00001ef0  8fc20000	lw	r2,(r30)
 1291  00001ef4  20410001	addi	r1,r2,#1
 1292  00001ef8  00011020	add	r2,r0,r1
 1293  00001efc  afc20000	sw	(r30),r2
 1294  00001f00  0800000c	j	L84_LF2
 1295  00001f04  54000000	nop; delay slot nop
 1296  00001f08          	L82_LF2:
 1297  00001f08  20010008	addi	r1,r0,#8
 1298  00001f0c  afc10008	sw	8(r30),r1
 1299  00001f10          	L84_LF2:
 1300  00001f10  0800000c	j	L80_LF2
 1301  00001f14  54000000	nop; delay slot nop
 1302  00001f18          	L81_LF2:
 1303  00001f18  2001000a	addi	r1,r0,#10
 1304  00001f1c  afc10008	sw	8(r30),r1
 1305  00001f20          	L85_LF2:
 1306  00001f20          	L80_LF2:
 1307  00001f20  8fc10008	lw	r1,8(r30)
 1308  00001f24  70220000	slei	r2,r1,#0
 1309  00001f28  1440001c	bnez	r2,L87_LF2
 1310  00001f2c  54000000	nop; delay slot nop
 1311  00001f30  8fc10008	lw	r1,8(r30)
 1312  00001f34  6c220010	sgti	r2,r1,#16
 1313  00001f38  1440000c	bnez	r2,L87_LF2
 1314  00001f3c  54000000	nop; delay slot nop
 1315  00001f40  08000010	j	L86_LF2
 1316  00001f44  54000000	nop; delay slot nop
 1317  00001f48          	L87_LF2:
 1318  00001f48  8fc1fff4	lw	r1,-12(r30)
 1319  00001f4c  08000188	j	L72_LF2
 1320  00001f50  54000000	nop; delay slot nop
 1321  00001f54          	L86_LF2:
 1322  00001f54  54000000	nop
 1323  00001f58          	L88_LF2:
 1324  00001f58  8fc10000	lw	r1,(r30)
 1325  00001f5c  90220000	lbu	r2,(r1)
 1326  00001f60  6c41002f	sgtui	r1,r2,#47
 1327  00001f64  10200030	beqz	r1,L91_LF2
 1328  00001f68  54000000	nop; delay slot nop
 1329  00001f6c  8fc10000	lw	r1,(r30)
 1330  00001f70  90220000	lbu	r2,(r1)
 1331  00001f74  70410039	sleui	r1,r2,#57
 1332  00001f78  1020001c	beqz	r1,L91_LF2
 1333  00001f7c  54000000	nop; delay slot nop
 1334  00001f80  8fc10000	lw	r1,(r30)
 1335  00001f84  90220000	lbu	r2,(r1)
 1336  00001f88  2041ffd0	addi	r1,r2,#-48
 1337  00001f8c  afc1fff0	sw	-16(r30),r1
 1338  00001f90  0800008c	j	L92_LF2
 1339  00001f94  54000000	nop; delay slot nop
 1340  00001f98          	L91_LF2:
 1341  00001f98  8fc10000	lw	r1,(r30)
 1342  00001f9c  90220000	lbu	r2,(r1)
 1343  00001fa0  6c410060	sgtui	r1,r2,#96
 1344  00001fa4  10200030	beqz	r1,L93_LF2
 1345  00001fa8  54000000	nop; delay slot nop
 1346  00001fac  8fc10000	lw	r1,(r30)
 1347  00001fb0  90220000	lbu	r2,(r1)
 1348  00001fb4  7041007a	sleui	r1,r2,#122
 1349  00001fb8  1020001c	beqz	r1,L93_LF2
 1350  00001fbc  54000000	nop; delay slot nop
 1351  00001fc0  8fc10000	lw	r1,(r30)
 1352  00001fc4  90220000	lbu	r2,(r1)
 1353  00001fc8  2041ffa9	addi	r1,r2,#-87
 1354  00001fcc  afc1fff0	sw	-16(r30),r1
 1355  00001fd0  0800004c	j	L92_LF2
 1356  00001fd4  54000000	nop; delay slot nop
 1357  00001fd8          	L93_LF2:
 1358  00001fd8  8fc10000	lw	r1,(r30)
 1359  00001fdc  90220000	lbu	r2,(r1)
 1360  00001fe0  6c410040	sgtui	r1,r2,#64
 1361  00001fe4  10200030	beqz	r1,L95_LF2
 1362  00001fe8  54000000	nop; delay slot nop
 1363  00001fec  8fc10000	lw	r1,(r30)
 1364  00001ff0  90220000	lbu	r2,(r1)
 1365  00001ff4  7041005a	sleui	r1,r2,#90
 1366  00001ff8  1020001c	beqz	r1,L95_LF2
 1367  00001ffc  54000000	nop; delay slot nop
 1368  00002000  8fc10000	lw	r1,(r30)
 1369  00002004  90220000	lbu	r2,(r1)
 1370  00002008  2041ffc9	addi	r1,r2,#-55
 1371  0000200c  afc1fff0	sw	-16(r30),r1
 1372  00002010  0800000c	j	L92_LF2
 1373  00002014  54000000	nop; delay slot nop
 1374  00002018          	L95_LF2:
 1375  00002018  200103e8	addi	r1,r0,#1000
 1376  0000201c  afc1fff0	sw	-16(r30),r1
 1377  00002020          	L96_LF2:
 1378  00002020          	L94_LF2:
 1379  00002020          	L92_LF2:
 1380  00002020  8fc1fff0	lw	r1,-16(r30)
 1381  00002024  8fc20008	lw	r2,8(r30)
 1382  00002028  0022082a	slt	r1,r1,r2
 1383  0000202c  10200040	beqz	r1,L90_LF2
 1384  00002030  54000000	nop; delay slot nop
 1385  00002034  8fc1fff4	lw	r1,-12(r30)
 1386  00002038  8fc20008	lw	r2,8(r30)
 1387  0000203c  00200035	movi2fp	f0,r1
 1388  00002040  00400835	movi2fp	f1,r2
 1389  00002044  0401000e	mult	f0,f0,f1
 1390  00002048  00000834	movfp2i	r1,f0
 1391  0000204c  afc1fff4	sw	-12(r30),r1
 1392  00002050  8fc1fff4	lw	r1,-12(r30)
 1393  00002054  8fc2fff0	lw	r2,-16(r30)
 1394  00002058  00220820	add	r1,r1,r2
 1395  0000205c  afc1fff4	sw	-12(r30),r1
 1396  00002060  8fc20000	lw	r2,(r30)
 1397  00002064  20410001	addi	r1,r2,#1
 1398  00002068  00011020	add	r2,r0,r1
 1399  0000206c  afc20000	sw	(r30),r2
 1400  00002070          	L97_LF2:
 1401  00002070          	L90_LF2:
 1402  00002070  8fc1fff0	lw	r1,-16(r30)
 1403  00002074  8fc20008	lw	r2,8(r30)
 1404  00002078  0022082a	slt	r1,r1,r2
 1405  0000207c  1420000c	bnez	r1,L98_LF2
 1406  00002080  54000000	nop; delay slot nop
 1407  00002084  0800000c	j	L89_LF2
 1408  00002088  54000000	nop; delay slot nop
 1409  0000208c          	L98_LF2:
 1410  0000208c  0bfffec8	j	L88_LF2
 1411  00002090  54000000	nop; delay slot nop
 1412  00002094          	L89_LF2:
 1413  00002094  8fc10004	lw	r1,4(r30)
 1414  00002098  64220000	snei	r2,r1,#0
 1415  0000209c  10400010	beqz	r2,L99_LF2
 1416  000020a0  54000000	nop; delay slot nop
 1417  000020a4  8fc10004	lw	r1,4(r30)
 1418  000020a8  8fc20000	lw	r2,(r30)
 1419  000020ac  ac220000	sw	(r1),r2
 1420  000020b0          	L99_LF2:
 1421  000020b0  8fc1fff4	lw	r1,-12(r30)
 1422  000020b4  8fc2ffec	lw	r2,-20(r30)
 1423  000020b8  00200035	movi2fp	f0,r1
 1424  000020bc  00400835	movi2fp	f1,r2
 1425  000020c0  0401000e	mult	f0,f0,f1
 1426  000020c4  00000834	movfp2i	r1,f0
 1427  000020c8  afc1fff4	sw	-12(r30),r1
 1428  000020cc  8fc1fff4	lw	r1,-12(r30)
 1429  000020d0  08000004	j	L72_LF2
 1430  000020d4  54000000	nop; delay slot nop
 1431  000020d8          	L72_LF2:
 1432  000020d8  8fa20000	lw	r2,0(r29)
 1433  000020dc  8fdffff8	lw	r31,-8(r30)
 1434  000020e0  001ee820	add	r29,r0,r30
 1435  000020e4  8fdefffc	lw	r30,-4(r30)
 1436  000020e8  4be00000	jr	r31
 1437  000020ec  54000000	nop
 1438  000020f0          	.endproc _dstrtol
 1439  000020f0          	.align 2
 1440  000020f0          	.proc _bcopy
 1441  000020f0          	.global _bcopy
 1442  000020f0          	_bcopy:
 1443                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1444  000020f0  afbefffc	sw	-4(r29),r30; push fp
 1445  000020f4  001df020	add	r30,r0,r29; fp = sp
 1446  000020f8  afbffff8	sw	-8(r29),r31; push ret addr
 1447  000020fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1448  00002100  afa20000	sw	0(r29),r2
 1449  00002104  afa30004	sw	4(r29),r3
 1450  00002108  54000000	nop
 1451  0000210c          	L101_LF2:
 1452  0000210c  8fc10008	lw	r1,8(r30)
 1453  00002110  2022ffff	addi	r2,r1,#-1
 1454  00002114  afc20008	sw	8(r30),r2
 1455  00002118  6c210000	sgti	r1,r1,#0
 1456  0000211c  1420000c	bnez	r1,L103_LF2
 1457  00002120  54000000	nop; delay slot nop
 1458  00002124  0800002c	j	L102_LF2
 1459  00002128  54000000	nop; delay slot nop
 1460  0000212c          	L103_LF2:
 1461  0000212c  8fc10004	lw	r1,4(r30)
 1462  00002130  20220001	addi	r2,r1,#1
 1463  00002134  afc20004	sw	4(r30),r2
 1464  00002138  8fc20000	lw	r2,(r30)
 1465  0000213c  20430001	addi	r3,r2,#1
 1466  00002140  afc30000	sw	(r30),r3
 1467  00002144  80420000	lb	r2,(r2)
 1468  00002148  a0220000	sb	(r1),r2
 1469  0000214c  0bffffbc	j	L101_LF2
 1470  00002150  54000000	nop; delay slot nop
 1471  00002154          	L102_LF2:
 1472  00002154          	L100_LF2:
 1473  00002154  8fa20000	lw	r2,0(r29)
 1474  00002158  8fa30004	lw	r3,4(r29)
 1475  0000215c  8fdffff8	lw	r31,-8(r30)
 1476  00002160  001ee820	add	r29,r0,r30
 1477  00002164  8fdefffc	lw	r30,-4(r30)
 1478  00002168  4be00000	jr	r31
 1479  0000216c  54000000	nop
 1480  00002170          	.endproc _bcopy
 1481  00002170          	.align 2
 1482  00002170          	.proc _bzero
 1483  00002170          	.global _bzero
 1484  00002170          	_bzero:
 1485                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1486  00002170  afbefffc	sw	-4(r29),r30; push fp
 1487  00002174  001df020	add	r30,r0,r29; fp = sp
 1488  00002178  afbffff8	sw	-8(r29),r31; push ret addr
 1489  0000217c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1490  00002180  afa20000	sw	0(r29),r2
 1491  00002184  54000000	nop
 1492  00002188          	L105_LF2:
 1493  00002188  8fc10004	lw	r1,4(r30)
 1494  0000218c  2022ffff	addi	r2,r1,#-1
 1495  00002190  afc20004	sw	4(r30),r2
 1496  00002194  6c210000	sgti	r1,r1,#0
 1497  00002198  1420000c	bnez	r1,L107_LF2
 1498  0000219c  54000000	nop; delay slot nop
 1499  000021a0  08000020	j	L106_LF2
 1500  000021a4  54000000	nop; delay slot nop
 1501  000021a8          	L107_LF2:
 1502  000021a8  8fc10000	lw	r1,(r30)
 1503  000021ac  20220001	addi	r2,r1,#1
 1504  000021b0  afc20000	sw	(r30),r2
 1505  000021b4  20020000	addi	r2,r0,(#0x0)&0xff
 1506  000021b8  a0220000	sb	(r1),r2
 1507  000021bc  0bffffc8	j	L105_LF2
 1508  000021c0  54000000	nop; delay slot nop
 1509  000021c4          	L106_LF2:
 1510  000021c4          	L104_LF2:
 1511  000021c4  8fa20000	lw	r2,0(r29)
 1512  000021c8  8fdffff8	lw	r31,-8(r30)
 1513  000021cc  001ee820	add	r29,r0,r30
 1514  000021d0  8fdefffc	lw	r30,-4(r30)
 1515  000021d4  4be00000	jr	r31
 1516  000021d8  54000000	nop
 1517  000021dc          	.endproc _bzero
 1518  000021dc          	.align 2
 1519  000021dc          	.proc _min
 1520  000021dc          	.global _min
 1521  000021dc          	_min:
 1522                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1523  000021dc  afbefffc	sw	-4(r29),r30; push fp
 1524  000021e0  001df020	add	r30,r0,r29; fp = sp
 1525  000021e4  afbffff8	sw	-8(r29),r31; push ret addr
 1526  000021e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1527  000021ec  afa20000	sw	0(r29),r2
 1528  000021f0  afa30004	sw	4(r29),r3
 1529  000021f4  8fc10000	lw	r1,(r30)
 1530  000021f8  8fc20004	lw	r2,4(r30)
 1531  000021fc  0022182c	sle	r3,r1,r2
 1532  00002200  14600008	bnez	r3,L109_LF2
 1533  00002204  54000000	nop; delay slot nop
 1534  00002208  8fc10004	lw	r1,4(r30)
 1535  0000220c          	L109_LF2:
 1536  0000220c  08000004	j	L108_LF2
 1537  00002210  54000000	nop; delay slot nop
 1538  00002214          	L108_LF2:
 1539  00002214  8fa20000	lw	r2,0(r29)
 1540  00002218  8fa30004	lw	r3,4(r29)
 1541  0000221c  8fdffff8	lw	r31,-8(r30)
 1542  00002220  001ee820	add	r29,r0,r30
 1543  00002224  8fdefffc	lw	r30,-4(r30)
 1544  00002228  4be00000	jr	r31
 1545  0000222c  54000000	nop
 1546  00002230          	.endproc _min
 1547                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1548                      ;;;
 1549                      ;;; Most of the traps are called in files from libtraps.
 1552  00002230          	.align 2
 1553  00002230          	.proc _exit
 1554  00002230          	.global _exit
 1555  00002230          	_exit:
 1556  00002230  44000300	trap	#0x300
 1557  00002234  4be00000	jr	r31
 1558  00002238  54000000	nop
 1559  0000223c          	.endproc _exit
 1561                      ; for the benefit of gcc.
 1562  0000223c          	.proc ___main
 1563  0000223c          	.global ___main
 1564  0000223c          	___main:
 1565  0000223c  4be00000	jr	r31
 1566  00002240  54000000	nop
 1567  00002244          	.endproc ___main
 1568  00002244          	.text
 1569  00002244          	.global _etext
 1570  00002244          	_etext:
 1571  00002244          	.align 3
 1572  00002248          	.data
 1573  0000307a          	.global _edata
 1574  0000307a          	_edata:
