 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 183
    4                      ; Text size: 4416
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  42616420	.ascii "Bad semaphore sem_procs_completed (%d) in \000"
   88  00003050  73656d61	
   88  00003054  70686f72	
   88  00003058  65207365	
   88  0000305c  6d5f7072	
   88  00003060  6f63735f	
   88  00003064  636f6d70	
   88  00003068  6c657465	
   88  0000306c  64202825	
   88  00003070  64292069	
   88  00003074  6e2000  	
   89  00003077          	.align 2
   90  00003078          	LC3_LF0:
   91  00003078  2c206578	.ascii ", exiting...\n\000"
   91  0000307c  6974696e	
   91  00003080  672e2e2e	
   91  00003084  0a00    	
   92  00003086          	.align 2
   93  00003088          	LC4_LF0:
   94  00003088  534f3420	.ascii "SO4 injected into Radeon atmosphere, PID: %d \n\000"
   94  0000308c  696e6a65	
   94  00003090  63746564	
   94  00003094  20696e74	
   94  00003098  6f205261	
   94  0000309c  64656f6e	
   94  000030a0  2061746d	
   94  000030a4  6f737068	
   94  000030a8  6572652c	
   94  000030ac  20504944	
   94  000030b0  3a202564	
   94  000030b4  200a00  	
   95  000030b7          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc50004	lw	r5,4(r30)
  107  000010ec  0c001048	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410004	snei	r1,r2,#4
  110  000010f8  1020004c	beqz	r1,L14_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  114  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  115  0000110c  afa70000	sw	(r29),r7
  116  00001110  0c00021c	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  8ca70000	lw	r7,(r5)
  119  0000111c  afa70000	sw	(r29),r7
  120  00001120  0c00020c	jal	_Printf
  121  00001124  54000000	nop; not filled.
  122  00001128  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  123  0000112c  24e73008	addui	r7,r7,(LC1_LF0)&0xffff
  124  00001130  afa70000	sw	(r29),r7
  125  00001134  0c0001f8	jal	_Printf
  126  00001138  54000000	nop; not filled.
  127  0000113c  0c0002a4	jal	_Exit
  128  00001140  54000000	nop; not filled.
  129  00001144  23bd0008	addi	r29,r29,#8
  130  00001148          	L14_LF0:
  131  00001148  23bdfff0	addi	r29,r29,#-16
  132  0000114c  8ca70004	lw	r7,4(r5)
  133  00001150  afa70000	sw	(r29),r7
  134  00001154  20070000	addi	r7,r0,#0
  135  00001158  afa70004	sw	4(r29),r7
  136  0000115c  2007000a	addi	r7,r0,#10
  137  00001160  afa70008	sw	8(r29),r7
  138  00001164  0c000b28	jal	_dstrtol
  139  00001168  54000000	nop; not filled.
  140  0000116c  00012020	add	r4,r0,r1
  141  00001170  8ca70008	lw	r7,8(r5)
  142  00001174  afa70000	sw	(r29),r7
  143  00001178  20070000	addi	r7,r0,#0
  144  0000117c  afa70004	sw	4(r29),r7
  145  00001180  2007000a	addi	r7,r0,#10
  146  00001184  afa70008	sw	8(r29),r7
  147  00001188  0c000b04	jal	_dstrtol
  148  0000118c  54000000	nop; not filled.
  149  00001190  00011820	add	r3,r0,r1
  150  00001194  8ca7000c	lw	r7,12(r5)
  151  00001198  afa70000	sw	(r29),r7
  152  0000119c  20070000	addi	r7,r0,#0
  153  000011a0  afa70004	sw	4(r29),r7
  154  000011a4  2007000a	addi	r7,r0,#10
  155  000011a8  afa70008	sw	8(r29),r7
  156  000011ac  0c000ae0	jal	_dstrtol
  157  000011b0  54000000	nop; not filled.
  158  000011b4  00013020	add	r6,r0,r1
  159  000011b8  20020000	addi	r2,r0,#0
  160  000011bc  23bd0010	addi	r29,r29,#16
  161  000011c0  0043082a	slt	r1,r2,r3
  162  000011c4  102000a8	beqz	r1,L16_LF0
  163  000011c8  54000000	nop; not filled.
  164  000011cc          	L18_LF0:
  165  000011cc  23bdfff8	addi	r29,r29,#-8
  166  000011d0  afa60000	sw	(r29),r6
  167  000011d4  0c0001ac	jal	_sem_signal
  168  000011d8  54000000	nop; not filled.
  169  000011dc  23bd0008	addi	r29,r29,#8
  170  000011e0  64210001	snei	r1,r1,#1
  171  000011e4  10200050	beqz	r1,L19_LF0
  172  000011e8  54000000	nop; not filled.
  173  000011ec  23bdfff8	addi	r29,r29,#-8
  174  000011f0  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  175  000011f4  24e7304c	addui	r7,r7,(LC2_LF0)&0xffff
  176  000011f8  afa70000	sw	(r29),r7
  177  000011fc  afa40004	sw	4(r29),r4
  178  00001200  0c00012c	jal	_Printf
  179  00001204  54000000	nop; not filled.
  180  00001208  8ca70000	lw	r7,(r5)
  181  0000120c  afa70000	sw	(r29),r7
  182  00001210  0c00011c	jal	_Printf
  183  00001214  54000000	nop; not filled.
  184  00001218  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  185  0000121c  24e73078	addui	r7,r7,(LC3_LF0)&0xffff
  186  00001220  afa70000	sw	(r29),r7
  187  00001224  0c000108	jal	_Printf
  188  00001228  54000000	nop; not filled.
  189  0000122c  0c0001b4	jal	_Exit
  190  00001230  54000000	nop; not filled.
  191  00001234  23bd0008	addi	r29,r29,#8
  192  00001238          	L19_LF0:
  193  00001238  0c000100	jal	_getpid
  194  0000123c  54000000	nop; not filled.
  195  00001240  23bdfff8	addi	r29,r29,#-8
  196  00001244  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  197  00001248  24e73088	addui	r7,r7,(LC4_LF0)&0xffff
  198  0000124c  afa70000	sw	(r29),r7
  199  00001250  afa10004	sw	4(r29),r1
  200  00001254  0c0000d8	jal	_Printf
  201  00001258  54000000	nop; not filled.
  202  0000125c  23bd0008	addi	r29,r29,#8
  203  00001260  20420001	addi	r2,r2,#1
  204  00001264  0043082a	slt	r1,r2,r3
  205  00001268  1420ff60	bnez	r1,L18_LF0
  206  0000126c  54000000	nop; not filled.
  207  00001270          	L16_LF0:
  208  00001270  23bdfff8	addi	r29,r29,#-8
  209  00001274  afa40000	sw	(r29),r4
  210  00001278  0c000108	jal	_sem_signal
  211  0000127c  54000000	nop; not filled.
  212  00001280  23bd0008	addi	r29,r29,#8
  213  00001284  64210001	snei	r1,r1,#1
  214  00001288  10200050	beqz	r1,L21_LF0
  215  0000128c  54000000	nop; not filled.
  216  00001290  23bdfff8	addi	r29,r29,#-8
  217  00001294  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  218  00001298  24e7304c	addui	r7,r7,(LC2_LF0)&0xffff
  219  0000129c  afa70000	sw	(r29),r7
  220  000012a0  afa40004	sw	4(r29),r4
  221  000012a4  0c000088	jal	_Printf
  222  000012a8  54000000	nop; not filled.
  223  000012ac  8ca50000	lw	r5,(r5)
  224  000012b0  afa50000	sw	(r29),r5
  225  000012b4  0c000078	jal	_Printf
  226  000012b8  54000000	nop; not filled.
  227  000012bc  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  228  000012c0  24e73078	addui	r7,r7,(LC3_LF0)&0xffff
  229  000012c4  afa70000	sw	(r29),r7
  230  000012c8  0c000064	jal	_Printf
  231  000012cc  54000000	nop; not filled.
  232  000012d0  0c000110	jal	_Exit
  233  000012d4  54000000	nop; not filled.
  234  000012d8  23bd0008	addi	r29,r29,#8
  235  000012dc          	L21_LF0:
  236  000012dc  20010000	addi	r1,r0,#0
  237  000012e0  0c000e48	jal	_exit
  238  000012e4  54000000	nop
  239  000012e8          	.endproc _main
  240                      ;;;
  241                      ;;; Stub functions for DLX traps.
  242                      ;;;
  243                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  244                      ;;;
  245                      ;;; The traps such as Open and Close
  246                      ;;; (note the capital letters) are for use by user programs.  The traps
  247                      ;;; with names such as open and close (lower case) are for use by the OS.
  248                      ;;;
  251  000012e8          	.align 2
  253                      ;;; The following are the traps to be used by user-level programs
  254                      ;;;
  256  000012e8          	.align 2
  257  000012e8          	.proc _Open
  258  000012e8          	.global _Open
  259  000012e8          	_Open:
  260                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  261                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  262                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  263  000012e8  44000213	trap	#0x213
  264  000012ec  4be00000	jr	r31
  265  000012f0  54000000	nop
  266  000012f4          	.endproc _Open
  268  000012f4          	.proc _Close
  269  000012f4          	.global _Close
  270  000012f4          	_Close:
  271  000012f4  44000214	trap	#0x214
  272  000012f8  4be00000	jr	r31
  273  000012fc  54000000	nop
  274  00001300          	.endproc _Close
  276  00001300          	.proc _Read
  277  00001300          	.global _Read
  278  00001300          	_Read:
  279  00001300  44000210	trap	#0x210
  280  00001304  4be00000	jr	r31
  281  00001308  54000000	nop
  282  0000130c          	.endproc _Read
  284  0000130c          	.proc _Write
  285  0000130c          	.global _Write
  286  0000130c          	_Write:
  287  0000130c  44000211	trap	#0x211
  288  00001310  4be00000	jr	r31
  289  00001314  54000000	nop
  290  00001318          	.endproc _Write
  292  00001318          	.proc _Lseek
  293  00001318          	.global _Lseek
  294  00001318          	_Lseek:
  295  00001318  44000212	trap	#0x212
  296  0000131c  4be00000	jr	r31
  297  00001320  54000000	nop
  298  00001324          	.endproc _Lseek
  300  00001324          	.proc _Putchar
  301  00001324          	.global _Putchar
  302  00001324          	_Putchar:
  303  00001324  44000280	trap	#0x280
  304  00001328  4be00000	jr	r31
  305  0000132c  54000000	nop
  306  00001330          	.endproc _Putchar
  308  00001330          	.proc _Printf
  309  00001330          	.global _Printf
  310  00001330          	_Printf:
  311  00001330  44000201	trap	#0x201
  312  00001334  4be00000	jr	r31
  313  00001338  54000000	nop
  314  0000133c          	.endproc _Printf
  316  0000133c          	.proc _getpid
  317  0000133c          	.global _getpid
  318  0000133c          	_getpid:
  319  0000133c  44000431	trap	#0x431
  320  00001340  4be00000	jr	r31
  321  00001344  54000000	nop
  322  00001348          	.endproc _getpid
  324  00001348          	.proc _process_create
  325  00001348          	.global _process_create
  326  00001348          	_process_create:
  327  00001348  44000432	trap	#0x432
  328  0000134c  4be00000	jr	r31
  329  00001350  54000000	nop
  330  00001354          	.endproc _process_create
  332  00001354          	.proc _shmget
  333  00001354          	.global _shmget
  334  00001354          	_shmget:
  335  00001354  44000440	trap	#0x440
  336  00001358  4be00000	jr	r31
  337  0000135c  54000000	nop
  338  00001360          	.endproc _shmget
  340  00001360          	.proc _shmat
  341  00001360          	.global _shmat
  342  00001360          	_shmat:
  343  00001360  44000441	trap	#0x441
  344  00001364  4be00000	jr	r31
  345  00001368  54000000	nop
  346  0000136c          	.endproc _shmat
  348  0000136c          	.proc _sem_create
  349  0000136c          	.global _sem_create
  350  0000136c          	_sem_create:
  351  0000136c  44000450	trap	#0x450
  352  00001370  4be00000	jr	r31
  353  00001374  54000000	nop
  354  00001378          	.endproc _sem_create
  356  00001378          	.proc _sem_wait
  357  00001378          	.global _sem_wait
  358  00001378          	_sem_wait:
  359  00001378  44000451	trap	#0x451
  360  0000137c  4be00000	jr	r31
  361  00001380  54000000	nop
  362  00001384          	.endproc _sem_wait
  364  00001384          	.proc _sem_signal
  365  00001384          	.global _sem_signal
  366  00001384          	_sem_signal:
  367  00001384  44000452	trap	#0x452
  368  00001388  4be00000	jr	r31
  369  0000138c  54000000	nop
  370  00001390          	.endproc _sem_signal
  372  00001390          	.proc _lock_create
  373  00001390          	.global _lock_create
  374  00001390          	_lock_create:
  375  00001390  44000453	trap	#0x453
  376  00001394  4be00000	jr	r31
  377  00001398  54000000	nop
  378  0000139c          	.endproc _lock_create
  380  0000139c          	.proc _lock_acquire
  381  0000139c          	.global _lock_acquire
  382  0000139c          	_lock_acquire:
  383  0000139c  44000454	trap	#0x454
  384  000013a0  4be00000	jr	r31
  385  000013a4  54000000	nop
  386  000013a8          	.endproc _lock_acquire
  388  000013a8          	.proc _lock_release
  389  000013a8          	.global _lock_release
  390  000013a8          	_lock_release:
  391  000013a8  44000455	trap	#0x455
  392  000013ac  4be00000	jr	r31
  393  000013b0  54000000	nop
  394  000013b4          	.endproc _lock_release
  396  000013b4          	.proc _cond_create
  397  000013b4          	.global _cond_create
  398  000013b4          	_cond_create:
  399  000013b4  44000456	trap	#0x456
  400  000013b8  4be00000	jr	r31
  401  000013bc  54000000	nop
  402  000013c0          	.endproc _cond_create
  404  000013c0          	.proc _cond_wait
  405  000013c0          	.global _cond_wait
  406  000013c0          	_cond_wait:
  407  000013c0  44000457	trap	#0x457
  408  000013c4  4be00000	jr	r31
  409  000013c8  54000000	nop
  410  000013cc          	.endproc _cond_wait
  412  000013cc          	.proc _cond_signal
  413  000013cc          	.global _cond_signal
  414  000013cc          	_cond_signal:
  415  000013cc  44000458	trap	#0x458
  416  000013d0  4be00000	jr	r31
  417  000013d4  54000000	nop
  418  000013d8          	.endproc _cond_signal
  420  000013d8          	.proc _cond_broadcast
  421  000013d8          	.global _cond_broadcast
  422  000013d8          	_cond_broadcast:
  423  000013d8  44000459	trap	#0x459
  424  000013dc  4be00000	jr	r31
  425  000013e0  54000000	nop
  426  000013e4          	.endproc _cond_broadcast
  428  000013e4          	.proc _Exit
  429  000013e4          	.global _Exit
  430  000013e4          	_Exit:
  431  000013e4  44000500	trap	#0x500
  432  000013e8  4be00000	jr	r31
  433  000013ec  54000000	nop
  434  000013f0          	.endproc _Exit
  435                      ; Compiled by GCC
  437  000013f0          	.align 2
  438  000013f0          	.proc _isspace
  439  000013f0          	.global _isspace
  440  000013f0          	_isspace:
  441                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  442  000013f0  afbefffc	sw	-4(r29),r30; push fp
  443  000013f4  001df020	add	r30,r0,r29; fp = sp
  444  000013f8  afbffff8	sw	-8(r29),r31; push ret addr
  445  000013fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  446  00001400  afa20000	sw	0(r29),r2
  447  00001404  afa30004	sw	4(r29),r3
  448  00001408  afa40008	sw	8(r29),r4
  449  0000140c  83c20003	lb	r2,3(r30)
  450  00001410  20010000	addi	r1,r0,#0
  451  00001414  304300ff	andi	r3,r2,#0x00ff
  452  00001418  60640020	seqi	r4,r3,#32
  453  0000141c  1480002c	bnez	r4,L3_LF2
  454  00001420  54000000	nop; delay slot nop
  455  00001424  304300ff	andi	r3,r2,#0x00ff
  456  00001428  60640009	seqi	r4,r3,#9
  457  0000142c  1480001c	bnez	r4,L3_LF2
  458  00001430  54000000	nop; delay slot nop
  459  00001434  304300ff	andi	r3,r2,#0x00ff
  460  00001438  6064000a	seqi	r4,r3,#10
  461  0000143c  1480000c	bnez	r4,L3_LF2
  462  00001440  54000000	nop; delay slot nop
  463  00001444  08000008	j	L2_LF2
  464  00001448  54000000	nop; delay slot nop
  465  0000144c          	L3_LF2:
  466  0000144c  20010001	addi	r1,r0,#1
  467  00001450          	L2_LF2:
  468  00001450  08000004	j	L1_LF2
  469  00001454  54000000	nop; delay slot nop
  470  00001458          	L1_LF2:
  471  00001458  8fa20000	lw	r2,0(r29)
  472  0000145c  8fa30004	lw	r3,4(r29)
  473  00001460  8fa40008	lw	r4,8(r29)
  474  00001464  8fdffff8	lw	r31,-8(r30)
  475  00001468  001ee820	add	r29,r0,r30
  476  0000146c  8fdefffc	lw	r30,-4(r30)
  477  00001470  4be00000	jr	r31
  478  00001474  54000000	nop
  479  00001478          	.endproc _isspace
  480  00001478          	.align 2
  481  00001478          	.proc _isxdigit
  482  00001478          	.global _isxdigit
  483  00001478          	_isxdigit:
  484                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  485  00001478  afbefffc	sw	-4(r29),r30; push fp
  486  0000147c  001df020	add	r30,r0,r29; fp = sp
  487  00001480  afbffff8	sw	-8(r29),r31; push ret addr
  488  00001484  2fbd0018	subui	r29,r29,#24; alloc local storage
  489  00001488  afa20000	sw	0(r29),r2
  490  0000148c  afa30004	sw	4(r29),r3
  491  00001490  afa40008	sw	8(r29),r4
  492  00001494  83c20003	lb	r2,3(r30)
  493  00001498  20010000	addi	r1,r0,#0
  494  0000149c  304300ff	andi	r3,r2,#0x00ff
  495  000014a0  6c64002f	sgtui	r4,r3,#47
  496  000014a4  1080001c	beqz	r4,L7_LF2
  497  000014a8  54000000	nop; delay slot nop
  498  000014ac  304300ff	andi	r3,r2,#0x00ff
  499  000014b0  70640039	sleui	r4,r3,#57
  500  000014b4  1480005c	bnez	r4,L6_LF2
  501  000014b8  54000000	nop; delay slot nop
  502  000014bc  08000004	j	L7_LF2
  503  000014c0  54000000	nop; delay slot nop
  504  000014c4          	L7_LF2:
  505  000014c4  304300ff	andi	r3,r2,#0x00ff
  506  000014c8  6c640060	sgtui	r4,r3,#96
  507  000014cc  1080001c	beqz	r4,L8_LF2
  508  000014d0  54000000	nop; delay slot nop
  509  000014d4  304300ff	andi	r3,r2,#0x00ff
  510  000014d8  70640066	sleui	r4,r3,#102
  511  000014dc  14800034	bnez	r4,L6_LF2
  512  000014e0  54000000	nop; delay slot nop
  513  000014e4  08000004	j	L8_LF2
  514  000014e8  54000000	nop; delay slot nop
  515  000014ec          	L8_LF2:
  516  000014ec  304300ff	andi	r3,r2,#0x00ff
  517  000014f0  6c640040	sgtui	r4,r3,#64
  518  000014f4  10800020	beqz	r4,L5_LF2
  519  000014f8  54000000	nop; delay slot nop
  520  000014fc  304300ff	andi	r3,r2,#0x00ff
  521  00001500  70640041	sleui	r4,r3,#65
  522  00001504  1480000c	bnez	r4,L6_LF2
  523  00001508  54000000	nop; delay slot nop
  524  0000150c  08000008	j	L5_LF2
  525  00001510  54000000	nop; delay slot nop
  526  00001514          	L6_LF2:
  527  00001514  20010001	addi	r1,r0,#1
  528  00001518          	L5_LF2:
  529  00001518  08000004	j	L4_LF2
  530  0000151c  54000000	nop; delay slot nop
  531  00001520          	L4_LF2:
  532  00001520  8fa20000	lw	r2,0(r29)
  533  00001524  8fa30004	lw	r3,4(r29)
  534  00001528  8fa40008	lw	r4,8(r29)
  535  0000152c  8fdffff8	lw	r31,-8(r30)
  536  00001530  001ee820	add	r29,r0,r30
  537  00001534  8fdefffc	lw	r30,-4(r30)
  538  00001538  4be00000	jr	r31
  539  0000153c  54000000	nop
  540  00001540          	.endproc _isxdigit
  541  00001540          	.align 2
  542  00001540          	.proc _dstrcpy
  543  00001540          	.global _dstrcpy
  544  00001540          	_dstrcpy:
  545                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  546  00001540  afbefffc	sw	-4(r29),r30; push fp
  547  00001544  001df020	add	r30,r0,r29; fp = sp
  548  00001548  afbffff8	sw	-8(r29),r31; push ret addr
  549  0000154c  2fbd0018	subui	r29,r29,#24; alloc local storage
  550  00001550  afa20000	sw	0(r29),r2
  551  00001554  afa30004	sw	4(r29),r3
  552  00001558  8fc10000	lw	r1,(r30)
  553  0000155c  afc1fff4	sw	-12(r30),r1
  554  00001560          	L10_LF2:
  555  00001560  8fc10000	lw	r1,(r30)
  556  00001564  20220001	addi	r2,r1,#1
  557  00001568  afc20000	sw	(r30),r2
  558  0000156c  8fc20004	lw	r2,4(r30)
  559  00001570  20430001	addi	r3,r2,#1
  560  00001574  afc30004	sw	4(r30),r3
  561  00001578  80420000	lb	r2,(r2)
  562  0000157c  a0220000	sb	(r1),r2
  563  00001580  a3c2fff3	sb	-13(r30),r2
  564  00001584          	L12_LF2:
  565  00001584  93c1fff3	lbu	r1,-13(r30)
  566  00001588  64220000	snei	r2,r1,#0
  567  0000158c  1440000c	bnez	r2,L13_LF2
  568  00001590  54000000	nop; delay slot nop
  569  00001594  0800000c	j	L11_LF2
  570  00001598  54000000	nop; delay slot nop
  571  0000159c          	L13_LF2:
  572  0000159c  0bffffc0	j	L10_LF2
  573  000015a0  54000000	nop; delay slot nop
  574  000015a4          	L11_LF2:
  575  000015a4  8fc1fff4	lw	r1,-12(r30)
  576  000015a8  08000004	j	L9_LF2
  577  000015ac  54000000	nop; delay slot nop
  578  000015b0          	L9_LF2:
  579  000015b0  8fa20000	lw	r2,0(r29)
  580  000015b4  8fa30004	lw	r3,4(r29)
  581  000015b8  8fdffff8	lw	r31,-8(r30)
  582  000015bc  001ee820	add	r29,r0,r30
  583  000015c0  8fdefffc	lw	r30,-4(r30)
  584  000015c4  4be00000	jr	r31
  585  000015c8  54000000	nop
  586  000015cc          	.endproc _dstrcpy
  587  000015cc          	.align 2
  588  000015cc          	.proc _dstrncpy
  589  000015cc          	.global _dstrncpy
  590  000015cc          	_dstrncpy:
  591                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  592  000015cc  afbefffc	sw	-4(r29),r30; push fp
  593  000015d0  001df020	add	r30,r0,r29; fp = sp
  594  000015d4  afbffff8	sw	-8(r29),r31; push ret addr
  595  000015d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  596  000015dc  afa20000	sw	0(r29),r2
  597  000015e0  afa30004	sw	4(r29),r3
  598  000015e4  8fc10000	lw	r1,(r30)
  599  000015e8  afc1fff4	sw	-12(r30),r1
  600  000015ec          	L15_LF2:
  601  000015ec  8fc10008	lw	r1,8(r30)
  602  000015f0  2022ffff	addi	r2,r1,#-1
  603  000015f4  afc20008	sw	8(r30),r2
  604  000015f8  70210000	slei	r1,r1,#0
  605  000015fc  1020000c	beqz	r1,L18_LF2
  606  00001600  54000000	nop; delay slot nop
  607  00001604  08000048	j	L16_LF2
  608  00001608  54000000	nop; delay slot nop
  609  0000160c          	L18_LF2:
  610  0000160c  8fc10000	lw	r1,(r30)
  611  00001610  20220001	addi	r2,r1,#1
  612  00001614  afc20000	sw	(r30),r2
  613  00001618  8fc20004	lw	r2,4(r30)
  614  0000161c  20430001	addi	r3,r2,#1
  615  00001620  afc30004	sw	4(r30),r3
  616  00001624  80420000	lb	r2,(r2)
  617  00001628  a0220000	sb	(r1),r2
  618  0000162c  a3c2fff3	sb	-13(r30),r2
  619  00001630          	L17_LF2:
  620  00001630  93c1fff3	lbu	r1,-13(r30)
  621  00001634  64220000	snei	r2,r1,#0
  622  00001638  1440000c	bnez	r2,L19_LF2
  623  0000163c  54000000	nop; delay slot nop
  624  00001640  0800000c	j	L16_LF2
  625  00001644  54000000	nop; delay slot nop
  626  00001648          	L19_LF2:
  627  00001648  0bffffa0	j	L15_LF2
  628  0000164c  54000000	nop; delay slot nop
  629  00001650          	L16_LF2:
  630  00001650  8fc1fff4	lw	r1,-12(r30)
  631  00001654  08000004	j	L14_LF2
  632  00001658  54000000	nop; delay slot nop
  633  0000165c          	L14_LF2:
  634  0000165c  8fa20000	lw	r2,0(r29)
  635  00001660  8fa30004	lw	r3,4(r29)
  636  00001664  8fdffff8	lw	r31,-8(r30)
  637  00001668  001ee820	add	r29,r0,r30
  638  0000166c  8fdefffc	lw	r30,-4(r30)
  639  00001670  4be00000	jr	r31
  640  00001674  54000000	nop
  641  00001678          	.endproc _dstrncpy
  642  00001678          	.align 2
  643  00001678          	.proc _dstrcat
  644  00001678          	.global _dstrcat
  645  00001678          	_dstrcat:
  646                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  647  00001678  afbefffc	sw	-4(r29),r30; push fp
  648  0000167c  001df020	add	r30,r0,r29; fp = sp
  649  00001680  afbffff8	sw	-8(r29),r31; push ret addr
  650  00001684  2fbd0018	subui	r29,r29,#24; alloc local storage
  651  00001688  afa20000	sw	0(r29),r2
  652  0000168c  8fc10000	lw	r1,(r30)
  653  00001690  afc1fff4	sw	-12(r30),r1
  654  00001694          	L21_LF2:
  655  00001694  8fc10000	lw	r1,(r30)
  656  00001698  90220000	lbu	r2,(r1)
  657  0000169c  64410000	snei	r1,r2,#0
  658  000016a0  1420000c	bnez	r1,L23_LF2
  659  000016a4  54000000	nop; delay slot nop
  660  000016a8  0800001c	j	L22_LF2
  661  000016ac  54000000	nop; delay slot nop
  662  000016b0          	L23_LF2:
  663  000016b0  8fc20000	lw	r2,(r30)
  664  000016b4  20410001	addi	r1,r2,#1
  665  000016b8  00011020	add	r2,r0,r1
  666  000016bc  afc20000	sw	(r30),r2
  667  000016c0  0bffffd0	j	L21_LF2
  668  000016c4  54000000	nop; delay slot nop
  669  000016c8          	L22_LF2:
  670  000016c8  23bdfff8	addi	r29,r29,#-8
  671  000016cc  001d0820	add	r1,r0,r29
  672  000016d0  8fc20000	lw	r2,(r30)
  673  000016d4  ac220000	sw	(r1),r2
  674  000016d8  8fc20004	lw	r2,4(r30)
  675  000016dc  ac220004	sw	4(r1),r2
  676  000016e0  0ffffe5c	jal	_dstrcpy
  677  000016e4  54000000	nop; delay slot nop
  678  000016e8  23bd0008	addi	r29,r29,#8
  679  000016ec  8fc1fff4	lw	r1,-12(r30)
  680  000016f0  08000004	j	L20_LF2
  681  000016f4  54000000	nop; delay slot nop
  682  000016f8          	L20_LF2:
  683  000016f8  8fa20000	lw	r2,0(r29)
  684  000016fc  8fdffff8	lw	r31,-8(r30)
  685  00001700  001ee820	add	r29,r0,r30
  686  00001704  8fdefffc	lw	r30,-4(r30)
  687  00001708  4be00000	jr	r31
  688  0000170c  54000000	nop
  689  00001710          	.endproc _dstrcat
  690  00001710          	.align 2
  691  00001710          	.proc _dstrncmp
  692  00001710          	.global _dstrncmp
  693  00001710          	_dstrncmp:
  694                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  695  00001710  afbefffc	sw	-4(r29),r30; push fp
  696  00001714  001df020	add	r30,r0,r29; fp = sp
  697  00001718  afbffff8	sw	-8(r29),r31; push ret addr
  698  0000171c  2fbd0018	subui	r29,r29,#24; alloc local storage
  699  00001720  afa20000	sw	0(r29),r2
  700  00001724  afa30004	sw	4(r29),r3
  701  00001728  54000000	nop
  702  0000172c  20010000	addi	r1,r0,#0
  703  00001730  afc1fff4	sw	-12(r30),r1
  704  00001734          	L25_LF2:
  705  00001734  8fc1fff4	lw	r1,-12(r30)
  706  00001738  8fc20008	lw	r2,8(r30)
  707  0000173c  0022082a	slt	r1,r1,r2
  708  00001740  1420000c	bnez	r1,L28_LF2
  709  00001744  54000000	nop; delay slot nop
  710  00001748  08000088	j	L26_LF2
  711  0000174c  54000000	nop; delay slot nop
  712  00001750          	L28_LF2:
  713  00001750  8fc10004	lw	r1,4(r30)
  714  00001754  90220000	lbu	r2,(r1)
  715  00001758  64410000	snei	r1,r2,#0
  716  0000175c  14200018	bnez	r1,L29_LF2
  717  00001760  54000000	nop; delay slot nop
  718  00001764  20010000	addi	r1,r0,#0
  719  00001768  080000d8	j	L24_LF2
  720  0000176c  54000000	nop; delay slot nop
  721  00001770  08000028	j	L30_LF2
  722  00001774  54000000	nop; delay slot nop
  723  00001778          	L29_LF2:
  724  00001778  8fc10000	lw	r1,(r30)
  725  0000177c  8fc20004	lw	r2,4(r30)
  726  00001780  90210000	lbu	r1,(r1)
  727  00001784  90420000	lbu	r2,(r2)
  728  00001788  00220829	sne	r1,r1,r2
  729  0000178c  1020000c	beqz	r1,L30_LF2
  730  00001790  54000000	nop; delay slot nop
  731  00001794  0800003c	j	L26_LF2
  732  00001798  54000000	nop; delay slot nop
  733  0000179c          	L31_LF2:
  734  0000179c          	L30_LF2:
  735  0000179c  8fc20000	lw	r2,(r30)
  736  000017a0  20410001	addi	r1,r2,#1
  737  000017a4  00011020	add	r2,r0,r1
  738  000017a8  afc20000	sw	(r30),r2
  739  000017ac  8fc20004	lw	r2,4(r30)
  740  000017b0  20410001	addi	r1,r2,#1
  741  000017b4  00011020	add	r2,r0,r1
  742  000017b8  afc20004	sw	4(r30),r2
  743  000017bc          	L27_LF2:
  744  000017bc  8fc2fff4	lw	r2,-12(r30)
  745  000017c0  20410001	addi	r1,r2,#1
  746  000017c4  00011020	add	r2,r0,r1
  747  000017c8  afc2fff4	sw	-12(r30),r2
  748  000017cc  0bffff64	j	L25_LF2
  749  000017d0  54000000	nop; delay slot nop
  750  000017d4          	L26_LF2:
  751  000017d4  8fc1fff4	lw	r1,-12(r30)
  752  000017d8  8fc20008	lw	r2,8(r30)
  753  000017dc  00220828	seq	r1,r1,r2
  754  000017e0  10200018	beqz	r1,L32_LF2
  755  000017e4  54000000	nop; delay slot nop
  756  000017e8  20010000	addi	r1,r0,#0
  757  000017ec  08000054	j	L24_LF2
  758  000017f0  54000000	nop; delay slot nop
  759  000017f4  0800004c	j	L33_LF2
  760  000017f8  54000000	nop; delay slot nop
  761  000017fc          	L32_LF2:
  762  000017fc  8fc20000	lw	r2,(r30)
  763  00001800  90410000	lbu	r1,(r2)
  764  00001804  8fc20004	lw	r2,4(r30)
  765  00001808  90430000	lbu	r3,(r2)
  766  0000180c  00230822	sub	r1,r1,r3
  767  00001810  74220000	sgei	r2,r1,#0
  768  00001814  10400020	beqz	r2,L34_LF2
  769  00001818  54000000	nop; delay slot nop
  770  0000181c  8fc10000	lw	r1,(r30)
  771  00001820  8fc20004	lw	r2,4(r30)
  772  00001824  90210000	lbu	r1,(r1)
  773  00001828  90420000	lbu	r2,(r2)
  774  0000182c  00220829	sne	r1,r1,r2
  775  00001830  08000008	j	L35_LF2
  776  00001834  54000000	nop; delay slot nop
  777  00001838          	L34_LF2:
  778  00001838  2001ffff	addi	r1,r0,#-1
  779  0000183c          	L35_LF2:
  780  0000183c  08000004	j	L24_LF2
  781  00001840  54000000	nop; delay slot nop
  782  00001844          	L33_LF2:
  783  00001844          	L24_LF2:
  784  00001844  8fa20000	lw	r2,0(r29)
  785  00001848  8fa30004	lw	r3,4(r29)
  786  0000184c  8fdffff8	lw	r31,-8(r30)
  787  00001850  001ee820	add	r29,r0,r30
  788  00001854  8fdefffc	lw	r30,-4(r30)
  789  00001858  4be00000	jr	r31
  790  0000185c  54000000	nop
  791  00001860          	.endproc _dstrncmp
  792  00001860          	.align 2
  793  00001860          	.proc _dstrlen
  794  00001860          	.global _dstrlen
  795  00001860          	_dstrlen:
  796                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  797  00001860  afbefffc	sw	-4(r29),r30; push fp
  798  00001864  001df020	add	r30,r0,r29; fp = sp
  799  00001868  afbffff8	sw	-8(r29),r31; push ret addr
  800  0000186c  2fbd0018	subui	r29,r29,#24; alloc local storage
  801  00001870  afa20000	sw	0(r29),r2
  802  00001874  20010000	addi	r1,r0,#0
  803  00001878  afc1fff4	sw	-12(r30),r1
  804  0000187c          	L37_LF2:
  805  0000187c  8fc10000	lw	r1,(r30)
  806  00001880  20220001	addi	r2,r1,#1
  807  00001884  afc20000	sw	(r30),r2
  808  00001888  90210000	lbu	r1,(r1)
  809  0000188c  64220000	snei	r2,r1,#0
  810  00001890  1440000c	bnez	r2,L39_LF2
  811  00001894  54000000	nop; delay slot nop
  812  00001898  0800001c	j	L38_LF2
  813  0000189c  54000000	nop; delay slot nop
  814  000018a0          	L39_LF2:
  815  000018a0  8fc2fff4	lw	r2,-12(r30)
  816  000018a4  20410001	addi	r1,r2,#1
  817  000018a8  00011020	add	r2,r0,r1
  818  000018ac  afc2fff4	sw	-12(r30),r2
  819  000018b0  0bffffc8	j	L37_LF2
  820  000018b4  54000000	nop; delay slot nop
  821  000018b8          	L38_LF2:
  822  000018b8  8fc1fff4	lw	r1,-12(r30)
  823  000018bc  08000004	j	L36_LF2
  824  000018c0  54000000	nop; delay slot nop
  825  000018c4          	L36_LF2:
  826  000018c4  8fa20000	lw	r2,0(r29)
  827  000018c8  8fdffff8	lw	r31,-8(r30)
  828  000018cc  001ee820	add	r29,r0,r30
  829  000018d0  8fdefffc	lw	r30,-4(r30)
  830  000018d4  4be00000	jr	r31
  831  000018d8  54000000	nop
  832  000018dc          	.endproc _dstrlen
  833  000018dc          	.align 2
  834  000018dc          	.proc _dstrstr
  835  000018dc          	.global _dstrstr
  836  000018dc          	_dstrstr:
  837                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  838  000018dc  afbefffc	sw	-4(r29),r30; push fp
  839  000018e0  001df020	add	r30,r0,r29; fp = sp
  840  000018e4  afbffff8	sw	-8(r29),r31; push ret addr
  841  000018e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  842  000018ec  afa20000	sw	0(r29),r2
  843  000018f0  23bdfff8	addi	r29,r29,#-8
  844  000018f4  001d0820	add	r1,r0,r29
  845  000018f8  8fc20004	lw	r2,4(r30)
  846  000018fc  ac220000	sw	(r1),r2
  847  00001900  0fffff5c	jal	_dstrlen
  848  00001904  54000000	nop; delay slot nop
  849  00001908  23bd0008	addi	r29,r29,#8
  850  0000190c  afc1fff4	sw	-12(r30),r1
  851  00001910          	L41_LF2:
  852  00001910  8fc10000	lw	r1,(r30)
  853  00001914  90220000	lbu	r2,(r1)
  854  00001918  64410000	snei	r1,r2,#0
  855  0000191c  1420000c	bnez	r1,L43_LF2
  856  00001920  54000000	nop; delay slot nop
  857  00001924  08000060	j	L42_LF2
  858  00001928  54000000	nop; delay slot nop
  859  0000192c          	L43_LF2:
  860  0000192c  23bdfff0	addi	r29,r29,#-16
  861  00001930  001d0820	add	r1,r0,r29
  862  00001934  8fc20000	lw	r2,(r30)
  863  00001938  ac220000	sw	(r1),r2
  864  0000193c  8fc20004	lw	r2,4(r30)
  865  00001940  ac220004	sw	4(r1),r2
  866  00001944  8fc2fff4	lw	r2,-12(r30)
  867  00001948  ac220008	sw	8(r1),r2
  868  0000194c  0ffffdc0	jal	_dstrncmp
  869  00001950  54000000	nop; delay slot nop
  870  00001954  23bd0010	addi	r29,r29,#16
  871  00001958  64220000	snei	r2,r1,#0
  872  0000195c  14400010	bnez	r2,L44_LF2
  873  00001960  54000000	nop; delay slot nop
  874  00001964  8fc10000	lw	r1,(r30)
  875  00001968  08000028	j	L40_LF2
  876  0000196c  54000000	nop; delay slot nop
  877  00001970          	L44_LF2:
  878  00001970  8fc20000	lw	r2,(r30)
  879  00001974  20410001	addi	r1,r2,#1
  880  00001978  00011020	add	r2,r0,r1
  881  0000197c  afc20000	sw	(r30),r2
  882  00001980  0bffff8c	j	L41_LF2
  883  00001984  54000000	nop; delay slot nop
  884  00001988          	L42_LF2:
  885  00001988  20010000	addi	r1,r0,#0
  886  0000198c  08000004	j	L40_LF2
  887  00001990  54000000	nop; delay slot nop
  888  00001994          	L40_LF2:
  889  00001994  8fa20000	lw	r2,0(r29)
  890  00001998  8fdffff8	lw	r31,-8(r30)
  891  0000199c  001ee820	add	r29,r0,r30
  892  000019a0  8fdefffc	lw	r30,-4(r30)
  893  000019a4  4be00000	jr	r31
  894  000019a8  54000000	nop
  895  000019ac          	.endproc _dstrstr
  896  000019ac          	.align 2
  897  000019ac          	.proc _dmindex
  898  000019ac          	.global _dmindex
  899  000019ac          	_dmindex:
  900                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  901  000019ac  afbefffc	sw	-4(r29),r30; push fp
  902  000019b0  001df020	add	r30,r0,r29; fp = sp
  903  000019b4  afbffff8	sw	-8(r29),r31; push ret addr
  904  000019b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  905  000019bc  afa20000	sw	0(r29),r2
  906  000019c0  54000000	nop
  907  000019c4          	L46_LF2:
  908  000019c4  8fc10000	lw	r1,(r30)
  909  000019c8  90220000	lbu	r2,(r1)
  910  000019cc  64410000	snei	r1,r2,#0
  911  000019d0  1420000c	bnez	r1,L48_LF2
  912  000019d4  54000000	nop; delay slot nop
  913  000019d8  08000070	j	L47_LF2
  914  000019dc  54000000	nop; delay slot nop
  915  000019e0          	L48_LF2:
  916  000019e0  8fc10004	lw	r1,4(r30)
  917  000019e4  afc1fff4	sw	-12(r30),r1
  918  000019e8          	L49_LF2:
  919  000019e8  8fc1fff4	lw	r1,-12(r30)
  920  000019ec  90220000	lbu	r2,(r1)
  921  000019f0  64410000	snei	r1,r2,#0
  922  000019f4  1420000c	bnez	r1,L52_LF2
  923  000019f8  54000000	nop; delay slot nop
  924  000019fc  08000044	j	L50_LF2
  925  00001a00  54000000	nop; delay slot nop
  926  00001a04          	L52_LF2:
  927  00001a04  8fc10000	lw	r1,(r30)
  928  00001a08  8fc2fff4	lw	r2,-12(r30)
  929  00001a0c  90210000	lbu	r1,(r1)
  930  00001a10  90420000	lbu	r2,(r2)
  931  00001a14  00220828	seq	r1,r1,r2
  932  00001a18  10200010	beqz	r1,L51_LF2
  933  00001a1c  54000000	nop; delay slot nop
  934  00001a20  8fc10000	lw	r1,(r30)
  935  00001a24  08000030	j	L45_LF2
  936  00001a28  54000000	nop; delay slot nop
  937  00001a2c          	L53_LF2:
  938  00001a2c          	L51_LF2:
  939  00001a2c  8fc2fff4	lw	r2,-12(r30)
  940  00001a30  20410001	addi	r1,r2,#1
  941  00001a34  00011020	add	r2,r0,r1
  942  00001a38  afc2fff4	sw	-12(r30),r2
  943  00001a3c  0bffffa8	j	L49_LF2
  944  00001a40  54000000	nop; delay slot nop
  945  00001a44          	L50_LF2:
  946  00001a44  0bffff7c	j	L46_LF2
  947  00001a48  54000000	nop; delay slot nop
  948  00001a4c          	L47_LF2:
  949  00001a4c  20010000	addi	r1,r0,#0
  950  00001a50  08000004	j	L45_LF2
  951  00001a54  54000000	nop; delay slot nop
  952  00001a58          	L45_LF2:
  953  00001a58  8fa20000	lw	r2,0(r29)
  954  00001a5c  8fdffff8	lw	r31,-8(r30)
  955  00001a60  001ee820	add	r29,r0,r30
  956  00001a64  8fdefffc	lw	r30,-4(r30)
  957  00001a68  4be00000	jr	r31
  958  00001a6c  54000000	nop
  959  00001a70          	.endproc _dmindex
  960  00001a70          	.align 2
  961  00001a70          	.proc _dindex
  962  00001a70          	.global _dindex
  963  00001a70          	_dindex:
  964                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  965  00001a70  afbefffc	sw	-4(r29),r30; push fp
  966  00001a74  001df020	add	r30,r0,r29; fp = sp
  967  00001a78  afbffff8	sw	-8(r29),r31; push ret addr
  968  00001a7c  2fbd0010	subui	r29,r29,#16; alloc local storage
  969  00001a80  afa20000	sw	0(r29),r2
  970  00001a84  54000000	nop
  971  00001a88          	L55_LF2:
  972  00001a88  8fc10000	lw	r1,(r30)
  973  00001a8c  90220000	lbu	r2,(r1)
  974  00001a90  64410000	snei	r1,r2,#0
  975  00001a94  1420000c	bnez	r1,L57_LF2
  976  00001a98  54000000	nop; delay slot nop
  977  00001a9c  08000040	j	L56_LF2
  978  00001aa0  54000000	nop; delay slot nop
  979  00001aa4          	L57_LF2:
  980  00001aa4  8fc10000	lw	r1,(r30)
  981  00001aa8  90220000	lbu	r2,(r1)
  982  00001aac  8fc10004	lw	r1,4(r30)
  983  00001ab0  00411028	seq	r2,r2,r1
  984  00001ab4  10400010	beqz	r2,L58_LF2
  985  00001ab8  54000000	nop; delay slot nop
  986  00001abc  8fc10000	lw	r1,(r30)
  987  00001ac0  08000028	j	L54_LF2
  988  00001ac4  54000000	nop; delay slot nop
  989  00001ac8          	L58_LF2:
  990  00001ac8  8fc20000	lw	r2,(r30)
  991  00001acc  20410001	addi	r1,r2,#1
  992  00001ad0  00011020	add	r2,r0,r1
  993  00001ad4  afc20000	sw	(r30),r2
  994  00001ad8  0bffffac	j	L55_LF2
  995  00001adc  54000000	nop; delay slot nop
  996  00001ae0          	L56_LF2:
  997  00001ae0  20010000	addi	r1,r0,#0
  998  00001ae4  08000004	j	L54_LF2
  999  00001ae8  54000000	nop; delay slot nop
 1000  00001aec          	L54_LF2:
 1001  00001aec  8fa20000	lw	r2,0(r29)
 1002  00001af0  8fdffff8	lw	r31,-8(r30)
 1003  00001af4  001ee820	add	r29,r0,r30
 1004  00001af8  8fdefffc	lw	r30,-4(r30)
 1005  00001afc  4be00000	jr	r31
 1006  00001b00  54000000	nop
 1007  00001b04          	.endproc _dindex
 1008  00001b04          	.align 2
 1009  00001b04          	.proc _ditoa
 1010  00001b04          	.global _ditoa
 1011  00001b04          	_ditoa:
 1012                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1013  00001b04  afbefffc	sw	-4(r29),r30; push fp
 1014  00001b08  001df020	add	r30,r0,r29; fp = sp
 1015  00001b0c  afbffff8	sw	-8(r29),r31; push ret addr
 1016  00001b10  2fbd0018	subui	r29,r29,#24; alloc local storage
 1017  00001b14  afa20000	sw	0(r29),r2
 1018  00001b18  afa30004	sw	4(r29),r3
 1019  00001b1c  8fc10000	lw	r1,(r30)
 1020  00001b20  68220000	slti	r2,r1,#0
 1021  00001b24  1040002c	beqz	r2,L60_LF2
 1022  00001b28  54000000	nop; delay slot nop
 1023  00001b2c  8fc10004	lw	r1,4(r30)
 1024  00001b30  20220001	addi	r2,r1,#1
 1025  00001b34  afc20004	sw	4(r30),r2
 1026  00001b38  2002002d	addi	r2,r0,(#0x2d)&0xff
 1027  00001b3c  a0220000	sb	(r1),r2
 1028  00001b40  8fc10000	lw	r1,(r30)
 1029  00001b44  00011022	sub	r2,r0,r1
 1030  00001b48  afc20000	sw	(r30),r2
 1031  00001b4c  08000118	j	L61_LF2
 1032  00001b50  54000000	nop; delay slot nop
 1033  00001b54          	L60_LF2:
 1034  00001b54  8fc10000	lw	r1,(r30)
 1035  00001b58  64220000	snei	r2,r1,#0
 1036  00001b5c  14400020	bnez	r2,L62_LF2
 1037  00001b60  54000000	nop; delay slot nop
 1038  00001b64  8fc10004	lw	r1,4(r30)
 1039  00001b68  20220001	addi	r2,r1,#1
 1040  00001b6c  afc20004	sw	4(r30),r2
 1041  00001b70  20020030	addi	r2,r0,(#0x30)&0xff
 1042  00001b74  a0220000	sb	(r1),r2
 1043  00001b78  080000ec	j	L61_LF2
 1044  00001b7c  54000000	nop; delay slot nop
 1045  00001b80          	L62_LF2:
 1046  00001b80  20010001	addi	r1,r0,#1
 1047  00001b84  afc1fff4	sw	-12(r30),r1
 1048  00001b88          	L64_LF2:
 1049  00001b88  8fc1fff4	lw	r1,-12(r30)
 1050  00001b8c  8fc20000	lw	r2,(r30)
 1051  00001b90  0022082c	sle	r1,r1,r2
 1052  00001b94  1420000c	bnez	r1,L66_LF2
 1053  00001b98  54000000	nop; delay slot nop
 1054  00001b9c  08000024	j	L65_LF2
 1055  00001ba0  54000000	nop; delay slot nop
 1056  00001ba4          	L67_LF2:
 1057  00001ba4          	L66_LF2:
 1058  00001ba4  8fc1fff4	lw	r1,-12(r30)
 1059  00001ba8  00011820	add	r3,r0,r1
 1060  00001bac  50620002	slli	r2,r3,#0x2
 1061  00001bb0  00411020	add	r2,r2,r1
 1062  00001bb4  50410001	slli	r1,r2,#0x1
 1063  00001bb8  afc1fff4	sw	-12(r30),r1
 1064  00001bbc  0bffffc8	j	L64_LF2
 1065  00001bc0  54000000	nop; delay slot nop
 1066  00001bc4          	L65_LF2:
 1067  00001bc4  54000000	nop
 1068  00001bc8          	L68_LF2:
 1069  00001bc8  8fc1fff4	lw	r1,-12(r30)
 1070  00001bcc  2002000a	addi	r2,r0,#10
 1071  00001bd0  00200035	movi2fp	f0,r1
 1072  00001bd4  00400835	movi2fp	f1,r2
 1073  00001bd8  0401000f	div	f0,f0,f1
 1074  00001bdc  00000834	movfp2i	r1,f0
 1075  00001be0  afc1fff4	sw	-12(r30),r1
 1076  00001be4  8fc10004	lw	r1,4(r30)
 1077  00001be8  20220001	addi	r2,r1,#1
 1078  00001bec  afc20004	sw	4(r30),r2
 1079  00001bf0  8fc20000	lw	r2,(r30)
 1080  00001bf4  8fc3fff4	lw	r3,-12(r30)
 1081  00001bf8  00400035	movi2fp	f0,r2
 1082  00001bfc  00600835	movi2fp	f1,r3
 1083  00001c00  0401000f	div	f0,f0,f1
 1084  00001c04  00001034	movfp2i	r2,f0
 1085  00001c08  00021820	add	r3,r0,r2
 1086  00001c0c  20620030	addi	r2,r3,#48
 1087  00001c10  a0220000	sb	(r1),r2
 1088  00001c14  8fc10000	lw	r1,(r30)
 1089  00001c18  8fc3fff4	lw	r3,-12(r30)
 1090  00001c1c  00200035	movi2fp	f0,r1
 1091  00001c20  00600835	movi2fp	f1,r3
 1092  00001c24  0401000f	div	f0,f0,f1
 1093  00001c28  00001034	movfp2i	r2,f0
 1094  00001c2c  8fc3fff4	lw	r3,-12(r30)
 1095  00001c30  00400035	movi2fp	f0,r2
 1096  00001c34  00600835	movi2fp	f1,r3
 1097  00001c38  0401000e	mult	f0,f0,f1
 1098  00001c3c  00001034	movfp2i	r2,f0
 1099  00001c40  00220822	sub	r1,r1,r2
 1100  00001c44  afc10000	sw	(r30),r1
 1101  00001c48          	L70_LF2:
 1102  00001c48  8fc1fff4	lw	r1,-12(r30)
 1103  00001c4c  6c220001	sgti	r2,r1,#1
 1104  00001c50  1440000c	bnez	r2,L71_LF2
 1105  00001c54  54000000	nop; delay slot nop
 1106  00001c58  0800000c	j	L61_LF2
 1107  00001c5c  54000000	nop; delay slot nop
 1108  00001c60          	L71_LF2:
 1109  00001c60  0bffff64	j	L68_LF2
 1110  00001c64  54000000	nop; delay slot nop
 1111  00001c68          	L69_LF2:
 1112  00001c68          	L63_LF2:
 1113  00001c68          	L61_LF2:
 1114  00001c68  8fc10004	lw	r1,4(r30)
 1115  00001c6c  20020000	addi	r2,r0,(#0x0)&0xff
 1116  00001c70  a0220000	sb	(r1),r2
 1117  00001c74          	L59_LF2:
 1118  00001c74  8fa20000	lw	r2,0(r29)
 1119  00001c78  8fa30004	lw	r3,4(r29)
 1120  00001c7c  8fdffff8	lw	r31,-8(r30)
 1121  00001c80  001ee820	add	r29,r0,r30
 1122  00001c84  8fdefffc	lw	r30,-4(r30)
 1123  00001c88  4be00000	jr	r31
 1124  00001c8c  54000000	nop
 1125  00001c90          	.endproc _ditoa
 1126  00001c90          	.align 2
 1127  00001c90          	.proc _dstrtol
 1128  00001c90          	.global _dstrtol
 1129  00001c90          	_dstrtol:
 1130                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1131  00001c90  afbefffc	sw	-4(r29),r30; push fp
 1132  00001c94  001df020	add	r30,r0,r29; fp = sp
 1133  00001c98  afbffff8	sw	-8(r29),r31; push ret addr
 1134  00001c9c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1135  00001ca0  afa20000	sw	0(r29),r2
 1136  00001ca4  20010000	addi	r1,r0,#0
 1137  00001ca8  afc1fff4	sw	-12(r30),r1
 1138  00001cac          	L73_LF2:
 1139  00001cac  8fc10000	lw	r1,(r30)
 1140  00001cb0  90220000	lbu	r2,(r1)
 1141  00001cb4  60410020	seqi	r1,r2,#32
 1142  00001cb8  14200034	bnez	r1,L75_LF2
 1143  00001cbc  54000000	nop; delay slot nop
 1144  00001cc0  8fc10000	lw	r1,(r30)
 1145  00001cc4  90220000	lbu	r2,(r1)
 1146  00001cc8  60410009	seqi	r1,r2,#9
 1147  00001ccc  14200020	bnez	r1,L75_LF2
 1148  00001cd0  54000000	nop; delay slot nop
 1149  00001cd4  8fc10000	lw	r1,(r30)
 1150  00001cd8  90220000	lbu	r2,(r1)
 1151  00001cdc  6041000a	seqi	r1,r2,#10
 1152  00001ce0  1420000c	bnez	r1,L75_LF2
 1153  00001ce4  54000000	nop; delay slot nop
 1154  00001ce8  0800001c	j	L74_LF2
 1155  00001cec  54000000	nop; delay slot nop
 1156  00001cf0          	L75_LF2:
 1157  00001cf0  8fc20000	lw	r2,(r30)
 1158  00001cf4  20410001	addi	r1,r2,#1
 1159  00001cf8  00011020	add	r2,r0,r1
 1160  00001cfc  afc20000	sw	(r30),r2
 1161  00001d00  0bffffa8	j	L73_LF2
 1162  00001d04  54000000	nop; delay slot nop
 1163  00001d08          	L74_LF2:
 1164  00001d08  8fc10004	lw	r1,4(r30)
 1165  00001d0c  64220000	snei	r2,r1,#0
 1166  00001d10  10400010	beqz	r2,L76_LF2
 1167  00001d14  54000000	nop; delay slot nop
 1168  00001d18  8fc10004	lw	r1,4(r30)
 1169  00001d1c  8fc20000	lw	r2,(r30)
 1170  00001d20  ac220000	sw	(r1),r2
 1171  00001d24          	L76_LF2:
 1172  00001d24  8fc10000	lw	r1,(r30)
 1173  00001d28  90220000	lbu	r2,(r1)
 1174  00001d2c  64410000	snei	r1,r2,#0
 1175  00001d30  14200010	bnez	r1,L77_LF2
 1176  00001d34  54000000	nop; delay slot nop
 1177  00001d38  8fc1fff4	lw	r1,-12(r30)
 1178  00001d3c  08000294	j	L72_LF2
 1179  00001d40  54000000	nop; delay slot nop
 1180  00001d44          	L77_LF2:
 1181  00001d44  8fc10000	lw	r1,(r30)
 1182  00001d48  90220000	lbu	r2,(r1)
 1183  00001d4c  6041002d	seqi	r1,r2,#45
 1184  00001d50  10200024	beqz	r1,L78_LF2
 1185  00001d54  54000000	nop; delay slot nop
 1186  00001d58  2001ffff	addi	r1,r0,#-1
 1187  00001d5c  afc1ffec	sw	-20(r30),r1
 1188  00001d60  8fc20000	lw	r2,(r30)
 1189  00001d64  20410001	addi	r1,r2,#1
 1190  00001d68  00011020	add	r2,r0,r1
 1191  00001d6c  afc20000	sw	(r30),r2
 1192  00001d70  0800000c	j	L79_LF2
 1193  00001d74  54000000	nop; delay slot nop
 1194  00001d78          	L78_LF2:
 1195  00001d78  20010001	addi	r1,r0,#1
 1196  00001d7c  afc1ffec	sw	-20(r30),r1
 1197  00001d80          	L79_LF2:
 1198  00001d80  8fc10008	lw	r1,8(r30)
 1199  00001d84  64220000	snei	r2,r1,#0
 1200  00001d88  14400090	bnez	r2,L80_LF2
 1201  00001d8c  54000000	nop; delay slot nop
 1202  00001d90  8fc10000	lw	r1,(r30)
 1203  00001d94  90220000	lbu	r2,(r1)
 1204  00001d98  60410030	seqi	r1,r2,#48
 1205  00001d9c  10200074	beqz	r1,L81_LF2
 1206  00001da0  54000000	nop; delay slot nop
 1207  00001da4  8fc20000	lw	r2,(r30)
 1208  00001da8  20410001	addi	r1,r2,#1
 1209  00001dac  00011020	add	r2,r0,r1
 1210  00001db0  afc20000	sw	(r30),r2
 1211  00001db4  8fc10000	lw	r1,(r30)
 1212  00001db8  90220000	lbu	r2,(r1)
 1213  00001dbc  60410078	seqi	r1,r2,#120
 1214  00001dc0  14200020	bnez	r1,L83_LF2
 1215  00001dc4  54000000	nop; delay slot nop
 1216  00001dc8  8fc10000	lw	r1,(r30)
 1217  00001dcc  90220000	lbu	r2,(r1)
 1218  00001dd0  60410058	seqi	r1,r2,#88
 1219  00001dd4  1420000c	bnez	r1,L83_LF2
 1220  00001dd8  54000000	nop; delay slot nop
 1221  00001ddc  08000024	j	L82_LF2
 1222  00001de0  54000000	nop; delay slot nop
 1223  00001de4          	L83_LF2:
 1224  00001de4  20010010	addi	r1,r0,#16
 1225  00001de8  afc10008	sw	8(r30),r1
 1226  00001dec  8fc20000	lw	r2,(r30)
 1227  00001df0  20410001	addi	r1,r2,#1
 1228  00001df4  00011020	add	r2,r0,r1
 1229  00001df8  afc20000	sw	(r30),r2
 1230  00001dfc  0800000c	j	L84_LF2
 1231  00001e00  54000000	nop; delay slot nop
 1232  00001e04          	L82_LF2:
 1233  00001e04  20010008	addi	r1,r0,#8
 1234  00001e08  afc10008	sw	8(r30),r1
 1235  00001e0c          	L84_LF2:
 1236  00001e0c  0800000c	j	L80_LF2
 1237  00001e10  54000000	nop; delay slot nop
 1238  00001e14          	L81_LF2:
 1239  00001e14  2001000a	addi	r1,r0,#10
 1240  00001e18  afc10008	sw	8(r30),r1
 1241  00001e1c          	L85_LF2:
 1242  00001e1c          	L80_LF2:
 1243  00001e1c  8fc10008	lw	r1,8(r30)
 1244  00001e20  70220000	slei	r2,r1,#0
 1245  00001e24  1440001c	bnez	r2,L87_LF2
 1246  00001e28  54000000	nop; delay slot nop
 1247  00001e2c  8fc10008	lw	r1,8(r30)
 1248  00001e30  6c220010	sgti	r2,r1,#16
 1249  00001e34  1440000c	bnez	r2,L87_LF2
 1250  00001e38  54000000	nop; delay slot nop
 1251  00001e3c  08000010	j	L86_LF2
 1252  00001e40  54000000	nop; delay slot nop
 1253  00001e44          	L87_LF2:
 1254  00001e44  8fc1fff4	lw	r1,-12(r30)
 1255  00001e48  08000188	j	L72_LF2
 1256  00001e4c  54000000	nop; delay slot nop
 1257  00001e50          	L86_LF2:
 1258  00001e50  54000000	nop
 1259  00001e54          	L88_LF2:
 1260  00001e54  8fc10000	lw	r1,(r30)
 1261  00001e58  90220000	lbu	r2,(r1)
 1262  00001e5c  6c41002f	sgtui	r1,r2,#47
 1263  00001e60  10200030	beqz	r1,L91_LF2
 1264  00001e64  54000000	nop; delay slot nop
 1265  00001e68  8fc10000	lw	r1,(r30)
 1266  00001e6c  90220000	lbu	r2,(r1)
 1267  00001e70  70410039	sleui	r1,r2,#57
 1268  00001e74  1020001c	beqz	r1,L91_LF2
 1269  00001e78  54000000	nop; delay slot nop
 1270  00001e7c  8fc10000	lw	r1,(r30)
 1271  00001e80  90220000	lbu	r2,(r1)
 1272  00001e84  2041ffd0	addi	r1,r2,#-48
 1273  00001e88  afc1fff0	sw	-16(r30),r1
 1274  00001e8c  0800008c	j	L92_LF2
 1275  00001e90  54000000	nop; delay slot nop
 1276  00001e94          	L91_LF2:
 1277  00001e94  8fc10000	lw	r1,(r30)
 1278  00001e98  90220000	lbu	r2,(r1)
 1279  00001e9c  6c410060	sgtui	r1,r2,#96
 1280  00001ea0  10200030	beqz	r1,L93_LF2
 1281  00001ea4  54000000	nop; delay slot nop
 1282  00001ea8  8fc10000	lw	r1,(r30)
 1283  00001eac  90220000	lbu	r2,(r1)
 1284  00001eb0  7041007a	sleui	r1,r2,#122
 1285  00001eb4  1020001c	beqz	r1,L93_LF2
 1286  00001eb8  54000000	nop; delay slot nop
 1287  00001ebc  8fc10000	lw	r1,(r30)
 1288  00001ec0  90220000	lbu	r2,(r1)
 1289  00001ec4  2041ffa9	addi	r1,r2,#-87
 1290  00001ec8  afc1fff0	sw	-16(r30),r1
 1291  00001ecc  0800004c	j	L92_LF2
 1292  00001ed0  54000000	nop; delay slot nop
 1293  00001ed4          	L93_LF2:
 1294  00001ed4  8fc10000	lw	r1,(r30)
 1295  00001ed8  90220000	lbu	r2,(r1)
 1296  00001edc  6c410040	sgtui	r1,r2,#64
 1297  00001ee0  10200030	beqz	r1,L95_LF2
 1298  00001ee4  54000000	nop; delay slot nop
 1299  00001ee8  8fc10000	lw	r1,(r30)
 1300  00001eec  90220000	lbu	r2,(r1)
 1301  00001ef0  7041005a	sleui	r1,r2,#90
 1302  00001ef4  1020001c	beqz	r1,L95_LF2
 1303  00001ef8  54000000	nop; delay slot nop
 1304  00001efc  8fc10000	lw	r1,(r30)
 1305  00001f00  90220000	lbu	r2,(r1)
 1306  00001f04  2041ffc9	addi	r1,r2,#-55
 1307  00001f08  afc1fff0	sw	-16(r30),r1
 1308  00001f0c  0800000c	j	L92_LF2
 1309  00001f10  54000000	nop; delay slot nop
 1310  00001f14          	L95_LF2:
 1311  00001f14  200103e8	addi	r1,r0,#1000
 1312  00001f18  afc1fff0	sw	-16(r30),r1
 1313  00001f1c          	L96_LF2:
 1314  00001f1c          	L94_LF2:
 1315  00001f1c          	L92_LF2:
 1316  00001f1c  8fc1fff0	lw	r1,-16(r30)
 1317  00001f20  8fc20008	lw	r2,8(r30)
 1318  00001f24  0022082a	slt	r1,r1,r2
 1319  00001f28  10200040	beqz	r1,L90_LF2
 1320  00001f2c  54000000	nop; delay slot nop
 1321  00001f30  8fc1fff4	lw	r1,-12(r30)
 1322  00001f34  8fc20008	lw	r2,8(r30)
 1323  00001f38  00200035	movi2fp	f0,r1
 1324  00001f3c  00400835	movi2fp	f1,r2
 1325  00001f40  0401000e	mult	f0,f0,f1
 1326  00001f44  00000834	movfp2i	r1,f0
 1327  00001f48  afc1fff4	sw	-12(r30),r1
 1328  00001f4c  8fc1fff4	lw	r1,-12(r30)
 1329  00001f50  8fc2fff0	lw	r2,-16(r30)
 1330  00001f54  00220820	add	r1,r1,r2
 1331  00001f58  afc1fff4	sw	-12(r30),r1
 1332  00001f5c  8fc20000	lw	r2,(r30)
 1333  00001f60  20410001	addi	r1,r2,#1
 1334  00001f64  00011020	add	r2,r0,r1
 1335  00001f68  afc20000	sw	(r30),r2
 1336  00001f6c          	L97_LF2:
 1337  00001f6c          	L90_LF2:
 1338  00001f6c  8fc1fff0	lw	r1,-16(r30)
 1339  00001f70  8fc20008	lw	r2,8(r30)
 1340  00001f74  0022082a	slt	r1,r1,r2
 1341  00001f78  1420000c	bnez	r1,L98_LF2
 1342  00001f7c  54000000	nop; delay slot nop
 1343  00001f80  0800000c	j	L89_LF2
 1344  00001f84  54000000	nop; delay slot nop
 1345  00001f88          	L98_LF2:
 1346  00001f88  0bfffec8	j	L88_LF2
 1347  00001f8c  54000000	nop; delay slot nop
 1348  00001f90          	L89_LF2:
 1349  00001f90  8fc10004	lw	r1,4(r30)
 1350  00001f94  64220000	snei	r2,r1,#0
 1351  00001f98  10400010	beqz	r2,L99_LF2
 1352  00001f9c  54000000	nop; delay slot nop
 1353  00001fa0  8fc10004	lw	r1,4(r30)
 1354  00001fa4  8fc20000	lw	r2,(r30)
 1355  00001fa8  ac220000	sw	(r1),r2
 1356  00001fac          	L99_LF2:
 1357  00001fac  8fc1fff4	lw	r1,-12(r30)
 1358  00001fb0  8fc2ffec	lw	r2,-20(r30)
 1359  00001fb4  00200035	movi2fp	f0,r1
 1360  00001fb8  00400835	movi2fp	f1,r2
 1361  00001fbc  0401000e	mult	f0,f0,f1
 1362  00001fc0  00000834	movfp2i	r1,f0
 1363  00001fc4  afc1fff4	sw	-12(r30),r1
 1364  00001fc8  8fc1fff4	lw	r1,-12(r30)
 1365  00001fcc  08000004	j	L72_LF2
 1366  00001fd0  54000000	nop; delay slot nop
 1367  00001fd4          	L72_LF2:
 1368  00001fd4  8fa20000	lw	r2,0(r29)
 1369  00001fd8  8fdffff8	lw	r31,-8(r30)
 1370  00001fdc  001ee820	add	r29,r0,r30
 1371  00001fe0  8fdefffc	lw	r30,-4(r30)
 1372  00001fe4  4be00000	jr	r31
 1373  00001fe8  54000000	nop
 1374  00001fec          	.endproc _dstrtol
 1375  00001fec          	.align 2
 1376  00001fec          	.proc _bcopy
 1377  00001fec          	.global _bcopy
 1378  00001fec          	_bcopy:
 1379                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1380  00001fec  afbefffc	sw	-4(r29),r30; push fp
 1381  00001ff0  001df020	add	r30,r0,r29; fp = sp
 1382  00001ff4  afbffff8	sw	-8(r29),r31; push ret addr
 1383  00001ff8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1384  00001ffc  afa20000	sw	0(r29),r2
 1385  00002000  afa30004	sw	4(r29),r3
 1386  00002004  54000000	nop
 1387  00002008          	L101_LF2:
 1388  00002008  8fc10008	lw	r1,8(r30)
 1389  0000200c  2022ffff	addi	r2,r1,#-1
 1390  00002010  afc20008	sw	8(r30),r2
 1391  00002014  6c210000	sgti	r1,r1,#0
 1392  00002018  1420000c	bnez	r1,L103_LF2
 1393  0000201c  54000000	nop; delay slot nop
 1394  00002020  0800002c	j	L102_LF2
 1395  00002024  54000000	nop; delay slot nop
 1396  00002028          	L103_LF2:
 1397  00002028  8fc10004	lw	r1,4(r30)
 1398  0000202c  20220001	addi	r2,r1,#1
 1399  00002030  afc20004	sw	4(r30),r2
 1400  00002034  8fc20000	lw	r2,(r30)
 1401  00002038  20430001	addi	r3,r2,#1
 1402  0000203c  afc30000	sw	(r30),r3
 1403  00002040  80420000	lb	r2,(r2)
 1404  00002044  a0220000	sb	(r1),r2
 1405  00002048  0bffffbc	j	L101_LF2
 1406  0000204c  54000000	nop; delay slot nop
 1407  00002050          	L102_LF2:
 1408  00002050          	L100_LF2:
 1409  00002050  8fa20000	lw	r2,0(r29)
 1410  00002054  8fa30004	lw	r3,4(r29)
 1411  00002058  8fdffff8	lw	r31,-8(r30)
 1412  0000205c  001ee820	add	r29,r0,r30
 1413  00002060  8fdefffc	lw	r30,-4(r30)
 1414  00002064  4be00000	jr	r31
 1415  00002068  54000000	nop
 1416  0000206c          	.endproc _bcopy
 1417  0000206c          	.align 2
 1418  0000206c          	.proc _bzero
 1419  0000206c          	.global _bzero
 1420  0000206c          	_bzero:
 1421                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1422  0000206c  afbefffc	sw	-4(r29),r30; push fp
 1423  00002070  001df020	add	r30,r0,r29; fp = sp
 1424  00002074  afbffff8	sw	-8(r29),r31; push ret addr
 1425  00002078  2fbd0010	subui	r29,r29,#16; alloc local storage
 1426  0000207c  afa20000	sw	0(r29),r2
 1427  00002080  54000000	nop
 1428  00002084          	L105_LF2:
 1429  00002084  8fc10004	lw	r1,4(r30)
 1430  00002088  2022ffff	addi	r2,r1,#-1
 1431  0000208c  afc20004	sw	4(r30),r2
 1432  00002090  6c210000	sgti	r1,r1,#0
 1433  00002094  1420000c	bnez	r1,L107_LF2
 1434  00002098  54000000	nop; delay slot nop
 1435  0000209c  08000020	j	L106_LF2
 1436  000020a0  54000000	nop; delay slot nop
 1437  000020a4          	L107_LF2:
 1438  000020a4  8fc10000	lw	r1,(r30)
 1439  000020a8  20220001	addi	r2,r1,#1
 1440  000020ac  afc20000	sw	(r30),r2
 1441  000020b0  20020000	addi	r2,r0,(#0x0)&0xff
 1442  000020b4  a0220000	sb	(r1),r2
 1443  000020b8  0bffffc8	j	L105_LF2
 1444  000020bc  54000000	nop; delay slot nop
 1445  000020c0          	L106_LF2:
 1446  000020c0          	L104_LF2:
 1447  000020c0  8fa20000	lw	r2,0(r29)
 1448  000020c4  8fdffff8	lw	r31,-8(r30)
 1449  000020c8  001ee820	add	r29,r0,r30
 1450  000020cc  8fdefffc	lw	r30,-4(r30)
 1451  000020d0  4be00000	jr	r31
 1452  000020d4  54000000	nop
 1453  000020d8          	.endproc _bzero
 1454  000020d8          	.align 2
 1455  000020d8          	.proc _min
 1456  000020d8          	.global _min
 1457  000020d8          	_min:
 1458                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1459  000020d8  afbefffc	sw	-4(r29),r30; push fp
 1460  000020dc  001df020	add	r30,r0,r29; fp = sp
 1461  000020e0  afbffff8	sw	-8(r29),r31; push ret addr
 1462  000020e4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1463  000020e8  afa20000	sw	0(r29),r2
 1464  000020ec  afa30004	sw	4(r29),r3
 1465  000020f0  8fc10000	lw	r1,(r30)
 1466  000020f4  8fc20004	lw	r2,4(r30)
 1467  000020f8  0022182c	sle	r3,r1,r2
 1468  000020fc  14600008	bnez	r3,L109_LF2
 1469  00002100  54000000	nop; delay slot nop
 1470  00002104  8fc10004	lw	r1,4(r30)
 1471  00002108          	L109_LF2:
 1472  00002108  08000004	j	L108_LF2
 1473  0000210c  54000000	nop; delay slot nop
 1474  00002110          	L108_LF2:
 1475  00002110  8fa20000	lw	r2,0(r29)
 1476  00002114  8fa30004	lw	r3,4(r29)
 1477  00002118  8fdffff8	lw	r31,-8(r30)
 1478  0000211c  001ee820	add	r29,r0,r30
 1479  00002120  8fdefffc	lw	r30,-4(r30)
 1480  00002124  4be00000	jr	r31
 1481  00002128  54000000	nop
 1482  0000212c          	.endproc _min
 1483                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1484                      ;;;
 1485                      ;;; Most of the traps are called in files from libtraps.
 1488  0000212c          	.align 2
 1489  0000212c          	.proc _exit
 1490  0000212c          	.global _exit
 1491  0000212c          	_exit:
 1492  0000212c  44000300	trap	#0x300
 1493  00002130  4be00000	jr	r31
 1494  00002134  54000000	nop
 1495  00002138          	.endproc _exit
 1497                      ; for the benefit of gcc.
 1498  00002138          	.proc ___main
 1499  00002138          	.global ___main
 1500  00002138          	___main:
 1501  00002138  4be00000	jr	r31
 1502  0000213c  54000000	nop
 1503  00002140          	.endproc ___main
 1504  00002140          	.text
 1505  00002140          	.global _etext
 1506  00002140          	_etext:
 1507  00002140          	.align 3
 1508  00002140          	.data
 1509  000030b7          	.global _edata
 1510  000030b7          	_edata:
